/* Generated by the Nim Compiler v1.2.2 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI11797202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI11797232 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11636900 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11636894 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11636888 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11636882 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11636876 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11636865 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11636861 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11636856 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11636852 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11636848 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11636847 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11636845 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11797230 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6277 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI15356111 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI1001907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12150652 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1101806 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI936030 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI12150681 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12150678 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12150675 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12306044 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI6257 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6223 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11531057 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI106 = {size: 0,kind: 37,base: null,node: null,finalizer: null};
var NTI11531064 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6221 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6243 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6245 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10687506 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12170843 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13653019 = {size: 0,kind: 43,base: null,node: null,finalizer: null};
var NTI13653202 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12210061 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11531084 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI11531076 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11531247 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI104 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI11531239 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11531243 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI11531202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI11531233 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11531232 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI13585455 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13300041 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI13300051 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13300038 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI13296080 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI13296045 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12210101 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12210098 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12210088 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12210086 = {size: 0,kind: 21,base: null,node: null,finalizer: null};
var NTI9918653 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI9918612 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI151 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI9918614 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12210081 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12210112 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI155 = {size: 0,kind: 41,base: null,node: null,finalizer: null};
var NTI11531080 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12130816 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12130615 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12125615 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12115615 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12105615 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12095615 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12085615 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12075615 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12065215 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12060816 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12060615 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12055615 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12045615 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12035615 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12025615 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12015615 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12005615 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI6235 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11985611 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11985608 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI143 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11985622 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11985215 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9140015 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI6233 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6237 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9165015 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI6249 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6253 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6286 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI6281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI6217 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6219 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6241 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI112 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI11797208 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11915416 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI6008 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11797222 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11797204 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI163 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI11797224 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI11797204 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI11797204, name: "PRINT_ALL", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI11797204, name: "PRINT_FAILURES", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI11797204, name: "PRINT_NONE", len: 0, sons: null}}};
NTI11797204.node = NNI11797204;
var NNI11797224 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "colorOutput", len: 0, typ: NTI163, name: "colorOutput", sons: null}, 
{kind: 1, offset: "outputLevel", len: 0, typ: NTI11797204, name: "outputLevel", sons: null}, 
{kind: 1, offset: "isInSuite", len: 0, typ: NTI163, name: "isInSuite", sons: null}, 
{kind: 1, offset: "isInTest", len: 0, typ: NTI163, name: "isInTest", sons: null}]};
NTI11797224.node = NNI11797224;
var NNI11797222 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI11797222.node = NNI11797222;
var NNI6008 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6008.node = NNI6008;
NTI11797222.base = NTI6008;
NTI11797224.base = NTI11797222;
NTI11797208.base = NTI11797222;
NTI11915416.base = NTI11797208;
var NNI6241 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6241.node = NNI6241;
var NNI6219 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6219.node = NNI6219;
NTI6281.base = NTI6217;
NTI6286.base = NTI6217;
var NNI6217 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI6281, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI114, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI112, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI112, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI6286, name: "up", sons: null}]};
NTI6217.node = NNI6217;
NTI6217.base = NTI6008;
NTI6219.base = NTI6217;
NTI6241.base = NTI6219;
var NNI6253 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6253.node = NNI6253;
NTI6253.base = NTI6219;
var NNI6249 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6249.node = NNI6249;
NTI6249.base = NTI6219;
NTI9165015.base = NTI112;
var NNI6237 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6237.node = NNI6237;
var NNI6233 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6233.node = NNI6233;
NTI6233.base = NTI6219;
NTI6237.base = NTI6233;
NTI9140015.base = NTI112;
NTI11985215.base = NTI112;
NTI11985622.base = NTI143;
NTI11985611.base = NTI143;
var NNI11985608 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI11985611, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI143, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI143, name: "tail", sons: null}, 
{kind: 1, offset: "size", len: 0, typ: NTI143, name: "size", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI143, name: "length", sons: null}]};
NTI11985608.node = NNI11985608;
var NNI6235 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6235.node = NNI6235;
NTI6235.base = NTI6233;
NTI12005615.base = NTI112;
NTI12015615.base = NTI112;
NTI12025615.base = NTI112;
NTI12035615.base = NTI112;
NTI12045615.base = NTI112;
NTI12055615.base = NTI112;
NTI12060615.base = NTI112;
NTI12060816.base = NTI112;
NTI12065215.base = NTI112;
NTI12075615.base = NTI112;
NTI12085615.base = NTI112;
NTI12095615.base = NTI112;
NTI12105615.base = NTI112;
NTI12115615.base = NTI112;
NTI12125615.base = NTI112;
NTI12130615.base = NTI112;
NTI12130816.base = NTI112;
var NNI11531080 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI155, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI155, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI155, name: "Field2", sons: null}]};
NTI11531080.node = NNI11531080;
NTI9918612.base = NTI9918653;
var NNI9918614 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI151, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI9918612, name: "nanosecond", sons: null}]};
NTI9918614.node = NNI9918614;
NTI12210086.base = NTI12210081;
NTI12210088.base = NTI12210081;
var NNI12210081 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI112, name: "name", sons: null}, 
{kind: 1, offset: "start", len: 0, typ: NTI9918614, name: "start", sons: null}, 
{kind: 1, offset: "time", len: 0, typ: NTI151, name: "time", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI143, name: "count", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI12210086, name: "parent", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI12210088, name: "children", sons: null}]};
NTI12210081.node = NNI12210081;
NTI12210112.base = NTI12210081;
NTI12210101.base = NTI12210081;
var NNI12210098 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI12210101, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI143, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI143, name: "tail", sons: null}, 
{kind: 1, offset: "size", len: 0, typ: NTI143, name: "size", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI143, name: "length", sons: null}]};
NTI12210098.node = NNI12210098;
var NNI13296080 = {kind: 1, offset: "length", len: 0, typ: NTI143, name: "length", sons: null};
NTI13296080.node = NNI13296080;
NTI13296080.base = NTI6008;
NTI13296045.base = NTI13296080;
NTI13300051.base = NTI13300041;
NTI13300038.base = NTI13300051;
var NNI11531202 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI11531202, name: "Keyboard", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI11531202, name: "Gamepad", len: 0, sons: null}}};
NTI11531202.node = NNI11531202;
var NNI11531239 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI104, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI143, name: "Field2", sons: null}]};
NTI11531239.node = NNI11531239;
NTI11531243.base = NTI11531239;
NTI11531247.base = NTI143;
var NNI11531233 = {kind: 2, len: 9, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI11531202, name: "kind", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI112, name: "name", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI143, name: "id", sons: null}, 
{kind: 1, offset: "axes", len: 0, typ: NTI11531243, name: "axes", sons: null}, 
{kind: 1, offset: "buttons", len: 0, typ: NTI11531247, name: "buttons", sons: null}, 
{kind: 1, offset: "deadzone", len: 0, typ: NTI104, name: "deadzone", sons: null}, 
{kind: 1, offset: "invertX", len: 0, typ: NTI163, name: "invertX", sons: null}, 
{kind: 1, offset: "invertY", len: 0, typ: NTI163, name: "invertY", sons: null}, 
{kind: 1, offset: "useRightStick", len: 0, typ: NTI163, name: "useRightStick", sons: null}]};
NTI11531233.node = NNI11531233;
NTI11531232.base = NTI11531233;
NTI13585455.base = NTI11531232;
NTI11531084.base = NTI11531080;
var NNI11531076 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI143, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI11531084, name: "Field1", sons: null}]};
NTI11531076.node = NNI11531076;
var NNI12210061 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI155, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI155, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI155, name: "Field2", sons: null}]};
NTI12210061.node = NNI12210061;
var NNI13653202 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a0", len: 0, typ: NTI13653019, name: "a0", sons: null}, 
{kind: 1, offset: "a1", len: 0, typ: NTI13653019, name: "a1", sons: null}]};
NTI13653202.node = NNI13653202;
NTI12170843.base = NTI155;
var NNI10687506 = {kind: 2, offset: 0, typ: null, name: null, len: 240, sons: {"0": {kind: 1, offset: 0, typ: NTI10687506, name: "K_UNKNOWN", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI10687506, name: "K_BACKSPACE", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI10687506, name: "K_TAB", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI10687506, name: "K_RETURN", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI10687506, name: "K_ESCAPE", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI10687506, name: "K_SPACE", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI10687506, name: "K_EXCLAIM", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI10687506, name: "K_QUOTEDBL", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI10687506, name: "K_HASH", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI10687506, name: "K_DOLLAR", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI10687506, name: "K_PERCENT", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI10687506, name: "K_AMPERSAND", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI10687506, name: "K_QUOTE", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI10687506, name: "K_LEFTPAREN", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI10687506, name: "K_RIGHTPAREN", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI10687506, name: "K_ASTERISK", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI10687506, name: "K_PLUS", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI10687506, name: "K_COMMA", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI10687506, name: "K_MINUS", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI10687506, name: "K_PERIOD", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI10687506, name: "K_SLASH", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI10687506, name: "K_0", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI10687506, name: "K_1", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI10687506, name: "K_2", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI10687506, name: "K_3", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI10687506, name: "K_4", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI10687506, name: "K_5", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI10687506, name: "K_6", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI10687506, name: "K_7", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI10687506, name: "K_8", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI10687506, name: "K_9", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI10687506, name: "K_COLON", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI10687506, name: "K_SEMICOLON", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI10687506, name: "K_LESS", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI10687506, name: "K_EQUALS", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI10687506, name: "K_GREATER", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI10687506, name: "K_QUESTION", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI10687506, name: "K_AT", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI10687506, name: "K_LEFTBRACKET", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI10687506, name: "K_BACKSLASH", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI10687506, name: "K_RIGHTBRACKET", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI10687506, name: "K_CARET", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI10687506, name: "K_UNDERSCORE", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI10687506, name: "K_BACKQUOTE", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI10687506, name: "K_a", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI10687506, name: "K_b", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI10687506, name: "K_c", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI10687506, name: "K_d", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI10687506, name: "K_e", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI10687506, name: "K_f", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI10687506, name: "K_g", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI10687506, name: "K_h", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI10687506, name: "K_i", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI10687506, name: "K_j", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI10687506, name: "K_k", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI10687506, name: "K_l", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI10687506, name: "K_m", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI10687506, name: "K_n", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI10687506, name: "K_o", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI10687506, name: "K_p", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI10687506, name: "K_q", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI10687506, name: "K_r", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI10687506, name: "K_s", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI10687506, name: "K_t", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI10687506, name: "K_u", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI10687506, name: "K_v", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI10687506, name: "K_w", len: 0, sons: null}, 
"120": {kind: 1, offset: 120, typ: NTI10687506, name: "K_x", len: 0, sons: null}, 
"121": {kind: 1, offset: 121, typ: NTI10687506, name: "K_y", len: 0, sons: null}, 
"122": {kind: 1, offset: 122, typ: NTI10687506, name: "K_z", len: 0, sons: null}, 
"127": {kind: 1, offset: 127, typ: NTI10687506, name: "K_DELETE", len: 0, sons: null}, 
"1073741881": {kind: 1, offset: 1073741881, typ: NTI10687506, name: "K_CAPSLOCK", len: 0, sons: null}, 
"1073741882": {kind: 1, offset: 1073741882, typ: NTI10687506, name: "K_F1", len: 0, sons: null}, 
"1073741883": {kind: 1, offset: 1073741883, typ: NTI10687506, name: "K_F2", len: 0, sons: null}, 
"1073741884": {kind: 1, offset: 1073741884, typ: NTI10687506, name: "K_F3", len: 0, sons: null}, 
"1073741885": {kind: 1, offset: 1073741885, typ: NTI10687506, name: "K_F4", len: 0, sons: null}, 
"1073741886": {kind: 1, offset: 1073741886, typ: NTI10687506, name: "K_F5", len: 0, sons: null}, 
"1073741887": {kind: 1, offset: 1073741887, typ: NTI10687506, name: "K_F6", len: 0, sons: null}, 
"1073741888": {kind: 1, offset: 1073741888, typ: NTI10687506, name: "K_F7", len: 0, sons: null}, 
"1073741889": {kind: 1, offset: 1073741889, typ: NTI10687506, name: "K_F8", len: 0, sons: null}, 
"1073741890": {kind: 1, offset: 1073741890, typ: NTI10687506, name: "K_F9", len: 0, sons: null}, 
"1073741891": {kind: 1, offset: 1073741891, typ: NTI10687506, name: "K_F10", len: 0, sons: null}, 
"1073741892": {kind: 1, offset: 1073741892, typ: NTI10687506, name: "K_F11", len: 0, sons: null}, 
"1073741893": {kind: 1, offset: 1073741893, typ: NTI10687506, name: "K_F12", len: 0, sons: null}, 
"1073741894": {kind: 1, offset: 1073741894, typ: NTI10687506, name: "K_PRINTSCREEN", len: 0, sons: null}, 
"1073741895": {kind: 1, offset: 1073741895, typ: NTI10687506, name: "K_SCROLLLOCK", len: 0, sons: null}, 
"1073741896": {kind: 1, offset: 1073741896, typ: NTI10687506, name: "K_PAUSE", len: 0, sons: null}, 
"1073741897": {kind: 1, offset: 1073741897, typ: NTI10687506, name: "K_INSERT", len: 0, sons: null}, 
"1073741898": {kind: 1, offset: 1073741898, typ: NTI10687506, name: "K_HOME", len: 0, sons: null}, 
"1073741899": {kind: 1, offset: 1073741899, typ: NTI10687506, name: "K_PAGEUP", len: 0, sons: null}, 
"1073741901": {kind: 1, offset: 1073741901, typ: NTI10687506, name: "K_END", len: 0, sons: null}, 
"1073741902": {kind: 1, offset: 1073741902, typ: NTI10687506, name: "K_PAGEDOWN", len: 0, sons: null}, 
"1073741903": {kind: 1, offset: 1073741903, typ: NTI10687506, name: "K_RIGHT", len: 0, sons: null}, 
"1073741904": {kind: 1, offset: 1073741904, typ: NTI10687506, name: "K_LEFT", len: 0, sons: null}, 
"1073741905": {kind: 1, offset: 1073741905, typ: NTI10687506, name: "K_DOWN", len: 0, sons: null}, 
"1073741906": {kind: 1, offset: 1073741906, typ: NTI10687506, name: "K_UP", len: 0, sons: null}, 
"1073741907": {kind: 1, offset: 1073741907, typ: NTI10687506, name: "K_NUMLOCKCLEAR", len: 0, sons: null}, 
"1073741908": {kind: 1, offset: 1073741908, typ: NTI10687506, name: "K_KP_DIVIDE", len: 0, sons: null}, 
"1073741909": {kind: 1, offset: 1073741909, typ: NTI10687506, name: "K_KP_MULTIPLY", len: 0, sons: null}, 
"1073741910": {kind: 1, offset: 1073741910, typ: NTI10687506, name: "K_KP_MINUS", len: 0, sons: null}, 
"1073741911": {kind: 1, offset: 1073741911, typ: NTI10687506, name: "K_KP_PLUS", len: 0, sons: null}, 
"1073741912": {kind: 1, offset: 1073741912, typ: NTI10687506, name: "K_KP_ENTER", len: 0, sons: null}, 
"1073741913": {kind: 1, offset: 1073741913, typ: NTI10687506, name: "K_KP_1", len: 0, sons: null}, 
"1073741914": {kind: 1, offset: 1073741914, typ: NTI10687506, name: "K_KP_2", len: 0, sons: null}, 
"1073741915": {kind: 1, offset: 1073741915, typ: NTI10687506, name: "K_KP_3", len: 0, sons: null}, 
"1073741916": {kind: 1, offset: 1073741916, typ: NTI10687506, name: "K_KP_4", len: 0, sons: null}, 
"1073741917": {kind: 1, offset: 1073741917, typ: NTI10687506, name: "K_KP_5", len: 0, sons: null}, 
"1073741918": {kind: 1, offset: 1073741918, typ: NTI10687506, name: "K_KP_6", len: 0, sons: null}, 
"1073741919": {kind: 1, offset: 1073741919, typ: NTI10687506, name: "K_KP_7", len: 0, sons: null}, 
"1073741920": {kind: 1, offset: 1073741920, typ: NTI10687506, name: "K_KP_8", len: 0, sons: null}, 
"1073741921": {kind: 1, offset: 1073741921, typ: NTI10687506, name: "K_KP_9", len: 0, sons: null}, 
"1073741922": {kind: 1, offset: 1073741922, typ: NTI10687506, name: "K_KP_0", len: 0, sons: null}, 
"1073741923": {kind: 1, offset: 1073741923, typ: NTI10687506, name: "K_KP_PERIOD", len: 0, sons: null}, 
"1073741925": {kind: 1, offset: 1073741925, typ: NTI10687506, name: "K_APPLICATION", len: 0, sons: null}, 
"1073741926": {kind: 1, offset: 1073741926, typ: NTI10687506, name: "K_POWER", len: 0, sons: null}, 
"1073741927": {kind: 1, offset: 1073741927, typ: NTI10687506, name: "K_KP_EQUALS", len: 0, sons: null}, 
"1073741928": {kind: 1, offset: 1073741928, typ: NTI10687506, name: "K_F13", len: 0, sons: null}, 
"1073741929": {kind: 1, offset: 1073741929, typ: NTI10687506, name: "K_F14", len: 0, sons: null}, 
"1073741930": {kind: 1, offset: 1073741930, typ: NTI10687506, name: "K_F15", len: 0, sons: null}, 
"1073741931": {kind: 1, offset: 1073741931, typ: NTI10687506, name: "K_F16", len: 0, sons: null}, 
"1073741932": {kind: 1, offset: 1073741932, typ: NTI10687506, name: "K_F17", len: 0, sons: null}, 
"1073741933": {kind: 1, offset: 1073741933, typ: NTI10687506, name: "K_F18", len: 0, sons: null}, 
"1073741934": {kind: 1, offset: 1073741934, typ: NTI10687506, name: "K_F19", len: 0, sons: null}, 
"1073741935": {kind: 1, offset: 1073741935, typ: NTI10687506, name: "K_F20", len: 0, sons: null}, 
"1073741936": {kind: 1, offset: 1073741936, typ: NTI10687506, name: "K_F21", len: 0, sons: null}, 
"1073741937": {kind: 1, offset: 1073741937, typ: NTI10687506, name: "K_F22", len: 0, sons: null}, 
"1073741938": {kind: 1, offset: 1073741938, typ: NTI10687506, name: "K_F23", len: 0, sons: null}, 
"1073741939": {kind: 1, offset: 1073741939, typ: NTI10687506, name: "K_F24", len: 0, sons: null}, 
"1073741940": {kind: 1, offset: 1073741940, typ: NTI10687506, name: "K_EXECUTE", len: 0, sons: null}, 
"1073741941": {kind: 1, offset: 1073741941, typ: NTI10687506, name: "K_HELP", len: 0, sons: null}, 
"1073741942": {kind: 1, offset: 1073741942, typ: NTI10687506, name: "K_MENU", len: 0, sons: null}, 
"1073741943": {kind: 1, offset: 1073741943, typ: NTI10687506, name: "K_SELECT", len: 0, sons: null}, 
"1073741944": {kind: 1, offset: 1073741944, typ: NTI10687506, name: "K_STOP", len: 0, sons: null}, 
"1073741945": {kind: 1, offset: 1073741945, typ: NTI10687506, name: "K_AGAIN", len: 0, sons: null}, 
"1073741946": {kind: 1, offset: 1073741946, typ: NTI10687506, name: "K_UNDO", len: 0, sons: null}, 
"1073741947": {kind: 1, offset: 1073741947, typ: NTI10687506, name: "K_CUT", len: 0, sons: null}, 
"1073741948": {kind: 1, offset: 1073741948, typ: NTI10687506, name: "K_COPY", len: 0, sons: null}, 
"1073741949": {kind: 1, offset: 1073741949, typ: NTI10687506, name: "K_PASTE", len: 0, sons: null}, 
"1073741950": {kind: 1, offset: 1073741950, typ: NTI10687506, name: "K_FIND", len: 0, sons: null}, 
"1073741951": {kind: 1, offset: 1073741951, typ: NTI10687506, name: "K_MUTE", len: 0, sons: null}, 
"1073741952": {kind: 1, offset: 1073741952, typ: NTI10687506, name: "K_VOLUMEUP", len: 0, sons: null}, 
"1073741953": {kind: 1, offset: 1073741953, typ: NTI10687506, name: "K_VOLUMEDOWN", len: 0, sons: null}, 
"1073741957": {kind: 1, offset: 1073741957, typ: NTI10687506, name: "K_KP_COMMA", len: 0, sons: null}, 
"1073741958": {kind: 1, offset: 1073741958, typ: NTI10687506, name: "K_KP_EQUALSAS400", len: 0, sons: null}, 
"1073741977": {kind: 1, offset: 1073741977, typ: NTI10687506, name: "K_ALTERASE", len: 0, sons: null}, 
"1073741978": {kind: 1, offset: 1073741978, typ: NTI10687506, name: "K_SYSREQ", len: 0, sons: null}, 
"1073741979": {kind: 1, offset: 1073741979, typ: NTI10687506, name: "K_CANCEL", len: 0, sons: null}, 
"1073741980": {kind: 1, offset: 1073741980, typ: NTI10687506, name: "K_CLEAR", len: 0, sons: null}, 
"1073741981": {kind: 1, offset: 1073741981, typ: NTI10687506, name: "K_PRIOR", len: 0, sons: null}, 
"1073741982": {kind: 1, offset: 1073741982, typ: NTI10687506, name: "K_RETURN2", len: 0, sons: null}, 
"1073741983": {kind: 1, offset: 1073741983, typ: NTI10687506, name: "K_SEPARATOR", len: 0, sons: null}, 
"1073741984": {kind: 1, offset: 1073741984, typ: NTI10687506, name: "K_OUT", len: 0, sons: null}, 
"1073741985": {kind: 1, offset: 1073741985, typ: NTI10687506, name: "K_OPER", len: 0, sons: null}, 
"1073741986": {kind: 1, offset: 1073741986, typ: NTI10687506, name: "K_CLEARAGAIN", len: 0, sons: null}, 
"1073741987": {kind: 1, offset: 1073741987, typ: NTI10687506, name: "K_CRSEL", len: 0, sons: null}, 
"1073741988": {kind: 1, offset: 1073741988, typ: NTI10687506, name: "K_EXSEL", len: 0, sons: null}, 
"1073742000": {kind: 1, offset: 1073742000, typ: NTI10687506, name: "K_KP_00", len: 0, sons: null}, 
"1073742001": {kind: 1, offset: 1073742001, typ: NTI10687506, name: "K_KP_000", len: 0, sons: null}, 
"1073742002": {kind: 1, offset: 1073742002, typ: NTI10687506, name: "K_THOUSANDSSEPARATOR", len: 0, sons: null}, 
"1073742003": {kind: 1, offset: 1073742003, typ: NTI10687506, name: "K_DECIMALSEPARATOR", len: 0, sons: null}, 
"1073742004": {kind: 1, offset: 1073742004, typ: NTI10687506, name: "K_CURRENCYUNIT", len: 0, sons: null}, 
"1073742005": {kind: 1, offset: 1073742005, typ: NTI10687506, name: "K_CURRENCYSUBUNIT", len: 0, sons: null}, 
"1073742006": {kind: 1, offset: 1073742006, typ: NTI10687506, name: "K_KP_LEFTPAREN", len: 0, sons: null}, 
"1073742007": {kind: 1, offset: 1073742007, typ: NTI10687506, name: "K_KP_RIGHTPAREN", len: 0, sons: null}, 
"1073742008": {kind: 1, offset: 1073742008, typ: NTI10687506, name: "K_KP_LEFTBRACE", len: 0, sons: null}, 
"1073742009": {kind: 1, offset: 1073742009, typ: NTI10687506, name: "K_KP_RIGHTBRACE", len: 0, sons: null}, 
"1073742010": {kind: 1, offset: 1073742010, typ: NTI10687506, name: "K_KP_TAB", len: 0, sons: null}, 
"1073742011": {kind: 1, offset: 1073742011, typ: NTI10687506, name: "K_KP_BACKSPACE", len: 0, sons: null}, 
"1073742012": {kind: 1, offset: 1073742012, typ: NTI10687506, name: "K_KP_A", len: 0, sons: null}, 
"1073742013": {kind: 1, offset: 1073742013, typ: NTI10687506, name: "K_KP_B", len: 0, sons: null}, 
"1073742014": {kind: 1, offset: 1073742014, typ: NTI10687506, name: "K_KP_C", len: 0, sons: null}, 
"1073742015": {kind: 1, offset: 1073742015, typ: NTI10687506, name: "K_KP_D", len: 0, sons: null}, 
"1073742016": {kind: 1, offset: 1073742016, typ: NTI10687506, name: "K_KP_E", len: 0, sons: null}, 
"1073742017": {kind: 1, offset: 1073742017, typ: NTI10687506, name: "K_KP_F", len: 0, sons: null}, 
"1073742018": {kind: 1, offset: 1073742018, typ: NTI10687506, name: "K_KP_XOR", len: 0, sons: null}, 
"1073742019": {kind: 1, offset: 1073742019, typ: NTI10687506, name: "K_KP_POWER", len: 0, sons: null}, 
"1073742020": {kind: 1, offset: 1073742020, typ: NTI10687506, name: "K_KP_PERCENT", len: 0, sons: null}, 
"1073742021": {kind: 1, offset: 1073742021, typ: NTI10687506, name: "K_KP_LESS", len: 0, sons: null}, 
"1073742022": {kind: 1, offset: 1073742022, typ: NTI10687506, name: "K_KP_GREATER", len: 0, sons: null}, 
"1073742023": {kind: 1, offset: 1073742023, typ: NTI10687506, name: "K_KP_AMPERSAND", len: 0, sons: null}, 
"1073742024": {kind: 1, offset: 1073742024, typ: NTI10687506, name: "K_KP_DBLAMPERSAND", len: 0, sons: null}, 
"1073742025": {kind: 1, offset: 1073742025, typ: NTI10687506, name: "K_KP_VERTICALBAR", len: 0, sons: null}, 
"1073742026": {kind: 1, offset: 1073742026, typ: NTI10687506, name: "K_KP_DBLVERTICALBAR", len: 0, sons: null}, 
"1073742027": {kind: 1, offset: 1073742027, typ: NTI10687506, name: "K_KP_COLON", len: 0, sons: null}, 
"1073742028": {kind: 1, offset: 1073742028, typ: NTI10687506, name: "K_KP_HASH", len: 0, sons: null}, 
"1073742029": {kind: 1, offset: 1073742029, typ: NTI10687506, name: "K_KP_SPACE", len: 0, sons: null}, 
"1073742030": {kind: 1, offset: 1073742030, typ: NTI10687506, name: "K_KP_AT", len: 0, sons: null}, 
"1073742031": {kind: 1, offset: 1073742031, typ: NTI10687506, name: "K_KP_EXCLAM", len: 0, sons: null}, 
"1073742032": {kind: 1, offset: 1073742032, typ: NTI10687506, name: "K_KP_MEMSTORE", len: 0, sons: null}, 
"1073742033": {kind: 1, offset: 1073742033, typ: NTI10687506, name: "K_KP_MEMRECALL", len: 0, sons: null}, 
"1073742034": {kind: 1, offset: 1073742034, typ: NTI10687506, name: "K_KP_MEMCLEAR", len: 0, sons: null}, 
"1073742035": {kind: 1, offset: 1073742035, typ: NTI10687506, name: "K_KP_MEMADD", len: 0, sons: null}, 
"1073742036": {kind: 1, offset: 1073742036, typ: NTI10687506, name: "K_KP_MEMSUBTRACT", len: 0, sons: null}, 
"1073742037": {kind: 1, offset: 1073742037, typ: NTI10687506, name: "K_KP_MEMMULTIPLY", len: 0, sons: null}, 
"1073742038": {kind: 1, offset: 1073742038, typ: NTI10687506, name: "K_KP_MEMDIVIDE", len: 0, sons: null}, 
"1073742039": {kind: 1, offset: 1073742039, typ: NTI10687506, name: "K_KP_PLUSMINUS", len: 0, sons: null}, 
"1073742040": {kind: 1, offset: 1073742040, typ: NTI10687506, name: "K_KP_CLEAR", len: 0, sons: null}, 
"1073742041": {kind: 1, offset: 1073742041, typ: NTI10687506, name: "K_KP_CLEARENTRY", len: 0, sons: null}, 
"1073742042": {kind: 1, offset: 1073742042, typ: NTI10687506, name: "K_KP_BINARY", len: 0, sons: null}, 
"1073742043": {kind: 1, offset: 1073742043, typ: NTI10687506, name: "K_KP_OCTAL", len: 0, sons: null}, 
"1073742044": {kind: 1, offset: 1073742044, typ: NTI10687506, name: "K_KP_DECIMAL", len: 0, sons: null}, 
"1073742045": {kind: 1, offset: 1073742045, typ: NTI10687506, name: "K_KP_HEXADECIMAL", len: 0, sons: null}, 
"1073742048": {kind: 1, offset: 1073742048, typ: NTI10687506, name: "K_LCTRL", len: 0, sons: null}, 
"1073742049": {kind: 1, offset: 1073742049, typ: NTI10687506, name: "K_LSHIFT", len: 0, sons: null}, 
"1073742050": {kind: 1, offset: 1073742050, typ: NTI10687506, name: "K_LALT", len: 0, sons: null}, 
"1073742051": {kind: 1, offset: 1073742051, typ: NTI10687506, name: "K_LGUI", len: 0, sons: null}, 
"1073742052": {kind: 1, offset: 1073742052, typ: NTI10687506, name: "K_RCTRL", len: 0, sons: null}, 
"1073742053": {kind: 1, offset: 1073742053, typ: NTI10687506, name: "K_RSHIFT", len: 0, sons: null}, 
"1073742054": {kind: 1, offset: 1073742054, typ: NTI10687506, name: "K_RALT", len: 0, sons: null}, 
"1073742055": {kind: 1, offset: 1073742055, typ: NTI10687506, name: "K_RGUI", len: 0, sons: null}, 
"1073742081": {kind: 1, offset: 1073742081, typ: NTI10687506, name: "K_MODE", len: 0, sons: null}, 
"1073742082": {kind: 1, offset: 1073742082, typ: NTI10687506, name: "K_AUDIONEXT", len: 0, sons: null}, 
"1073742083": {kind: 1, offset: 1073742083, typ: NTI10687506, name: "K_AUDIOPREV", len: 0, sons: null}, 
"1073742084": {kind: 1, offset: 1073742084, typ: NTI10687506, name: "K_AUDIOSTOP", len: 0, sons: null}, 
"1073742085": {kind: 1, offset: 1073742085, typ: NTI10687506, name: "K_AUDIOPLAY", len: 0, sons: null}, 
"1073742086": {kind: 1, offset: 1073742086, typ: NTI10687506, name: "K_AUDIOMUTE", len: 0, sons: null}, 
"1073742087": {kind: 1, offset: 1073742087, typ: NTI10687506, name: "K_MEDIASELECT", len: 0, sons: null}, 
"1073742088": {kind: 1, offset: 1073742088, typ: NTI10687506, name: "K_WWW", len: 0, sons: null}, 
"1073742089": {kind: 1, offset: 1073742089, typ: NTI10687506, name: "K_MAIL", len: 0, sons: null}, 
"1073742090": {kind: 1, offset: 1073742090, typ: NTI10687506, name: "K_CALCULATOR", len: 0, sons: null}, 
"1073742091": {kind: 1, offset: 1073742091, typ: NTI10687506, name: "K_COMPUTER", len: 0, sons: null}, 
"1073742092": {kind: 1, offset: 1073742092, typ: NTI10687506, name: "K_AC_SEARCH", len: 0, sons: null}, 
"1073742093": {kind: 1, offset: 1073742093, typ: NTI10687506, name: "K_AC_HOME", len: 0, sons: null}, 
"1073742094": {kind: 1, offset: 1073742094, typ: NTI10687506, name: "K_AC_BACK", len: 0, sons: null}, 
"1073742095": {kind: 1, offset: 1073742095, typ: NTI10687506, name: "K_AC_FORWARD", len: 0, sons: null}, 
"1073742096": {kind: 1, offset: 1073742096, typ: NTI10687506, name: "K_AC_STOP", len: 0, sons: null}, 
"1073742097": {kind: 1, offset: 1073742097, typ: NTI10687506, name: "K_AC_REFRESH", len: 0, sons: null}, 
"1073742098": {kind: 1, offset: 1073742098, typ: NTI10687506, name: "K_AC_BOOKMARKS", len: 0, sons: null}, 
"1073742099": {kind: 1, offset: 1073742099, typ: NTI10687506, name: "K_BRIGHTNESSDOWN", len: 0, sons: null}, 
"1073742100": {kind: 1, offset: 1073742100, typ: NTI10687506, name: "K_BRIGHTNESSUP", len: 0, sons: null}, 
"1073742101": {kind: 1, offset: 1073742101, typ: NTI10687506, name: "K_DISPLAYSWITCH", len: 0, sons: null}, 
"1073742102": {kind: 1, offset: 1073742102, typ: NTI10687506, name: "K_KBDILLUMTOGGLE", len: 0, sons: null}, 
"1073742103": {kind: 1, offset: 1073742103, typ: NTI10687506, name: "K_KBDILLUMDOWN", len: 0, sons: null}, 
"1073742104": {kind: 1, offset: 1073742104, typ: NTI10687506, name: "K_KBDILLUMUP", len: 0, sons: null}, 
"1073742105": {kind: 1, offset: 1073742105, typ: NTI10687506, name: "K_EJECT", len: 0, sons: null}, 
"1073742106": {kind: 1, offset: 1073742106, typ: NTI10687506, name: "K_SLEEP", len: 0, sons: null}, 
"1073742107": {kind: 1, offset: 1073742107, typ: NTI10687506, name: "K_APP1", len: 0, sons: null}, 
"1073742108": {kind: 1, offset: 1073742108, typ: NTI10687506, name: "K_APP2", len: 0, sons: null}, 
"1073742109": {kind: 1, offset: 1073742109, typ: NTI10687506, name: "K_AUDIOREWIND", len: 0, sons: null}, 
"1073742110": {kind: 1, offset: 1073742110, typ: NTI10687506, name: "K_AUDIOFASTFORWARD", len: 0, sons: null}}};
NTI10687506.node = NNI10687506;
var NNI6245 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6245.node = NNI6245;
var NNI6243 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6243.node = NNI6243;
var NNI6221 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6221.node = NNI6221;
NTI6221.base = NTI6217;
NTI6243.base = NTI6221;
NTI6245.base = NTI6243;
var NNI11531057 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI11531057, name: "tsStarted", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI11531057, name: "tsHeld", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI11531057, name: "tsMoved", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI11531057, name: "tsEnded", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI11531057, name: "tsCancelled", len: 0, sons: null}}};
NTI11531057.node = NNI11531057;
var NNI11531064 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI143, name: "id", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI143, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI143, name: "y", sons: null}, 
{kind: 1, offset: "sx", len: 0, typ: NTI106, name: "sx", sons: null}, 
{kind: 1, offset: "sy", len: 0, typ: NTI106, name: "sy", sons: null}, 
{kind: 1, offset: "xrel", len: 0, typ: NTI106, name: "xrel", sons: null}, 
{kind: 1, offset: "yrel", len: 0, typ: NTI106, name: "yrel", sons: null}, 
{kind: 1, offset: "xrelraw", len: 0, typ: NTI106, name: "xrelraw", sons: null}, 
{kind: 1, offset: "yrelraw", len: 0, typ: NTI106, name: "yrelraw", sons: null}, 
{kind: 1, offset: "state", len: 0, typ: NTI11531057, name: "state", sons: null}]};
NTI11531064.node = NNI11531064;
var NNI6223 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6223.node = NNI6223;
NTI6223.base = NTI6221;
var NNI6257 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6257.node = NNI6257;
NTI6257.base = NTI6219;
NTI12306044.base = NTI155;
var NNI12150652 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI143, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI143, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI143, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI143, name: "Field3", sons: null}]};
NTI12150652.node = NNI12150652;
var NNI12150681 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI936030, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1101806, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI12150652, name: "Field2", sons: null}]};
NTI12150681.node = NNI12150681;
NTI12150678.base = NTI12150681;
var NNI12150675 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI12150678, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI143, name: "counter", sons: null}]};
NTI12150675.node = NNI12150675;
var NNI1001907 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI143, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI143, name: "b", sons: null}]};
NTI1001907.node = NNI1001907;
NTI15356111.base = NTI106;
var NNI6277 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6277.node = NNI6277;
NTI6277.base = NTI6219;
var NNI11636847 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "closeImpl", len: 0, typ: NTI11636848, name: "closeImpl", sons: null}, 
{kind: 1, offset: "atEndImpl", len: 0, typ: NTI11636852, name: "atEndImpl", sons: null}, 
{kind: 1, offset: "setPositionImpl", len: 0, typ: NTI11636856, name: "setPositionImpl", sons: null}, 
{kind: 1, offset: "getPositionImpl", len: 0, typ: NTI11636861, name: "getPositionImpl", sons: null}, 
{kind: 1, offset: "readDataStrImpl", len: 0, typ: NTI11636865, name: "readDataStrImpl", sons: null}, 
{kind: 1, offset: "readLineImpl", len: 0, typ: NTI11636876, name: "readLineImpl", sons: null}, 
{kind: 1, offset: "readDataImpl", len: 0, typ: NTI11636882, name: "readDataImpl", sons: null}, 
{kind: 1, offset: "peekDataImpl", len: 0, typ: NTI11636888, name: "peekDataImpl", sons: null}, 
{kind: 1, offset: "writeDataImpl", len: 0, typ: NTI11636894, name: "writeDataImpl", sons: null}, 
{kind: 1, offset: "flushImpl", len: 0, typ: NTI11636900, name: "flushImpl", sons: null}]};
NTI11636847.node = NNI11636847;
NTI11636847.base = NTI6008;
NTI11636845.base = NTI11636847;
NTI11797232.base = NTI112;
var NNI11797230 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "stream", len: 0, typ: NTI11636845, name: "stream", sons: null}, 
{kind: 1, offset: "testErrors", len: 0, typ: NTI11797232, name: "testErrors", sons: null}, 
{kind: 1, offset: "testStartTime", len: 0, typ: NTI104, name: "testStartTime", sons: null}, 
{kind: 1, offset: "testStackTrace", len: 0, typ: NTI112, name: "testStackTrace", sons: null}]};
NTI11797230.node = NNI11797230;
NTI11797230.base = NTI11797222;
var NNI11797202 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI11797202, name: "OK", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI11797202, name: "FAILED", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI11797202, name: "SKIPPED", len: 0, sons: null}}};
NTI11797202.node = NNI11797202;
function makeNimstrLit(c_225062) {
      var ln = c_225062.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_225062.charCodeAt(i);
  }
  return result;
  

  
}
function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);
function nimCopy(dest_240023, src_240024, ti_240025) {
  var result_245219 = null;

    switch (ti_240025.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(is_fat_pointer_235401(ti_240025))) {
      result_245219 = src_240024;
      }
      else {
        result_245219 = [src_240024[0], src_240024[1]];
      }
      
      break;
    case 19:
            if (dest_240023 === null || dest_240023 === undefined) {
        dest_240023 = {};
      }
      else {
        for (var key in dest_240023) { delete dest_240023[key]; }
      }
      for (var key in src_240024) { dest_240023[key] = src_240024[key]; }
      result_245219 = dest_240023;
    
      break;
    case 18:
    case 17:
      if (!((ti_240025.base == null))) {
      result_245219 = nimCopy(dest_240023, src_240024, ti_240025.base);
      }
      else {
      if ((ti_240025.kind == 17)) {
      result_245219 = (dest_240023 === null || dest_240023 === undefined) ? {m_type: ti_240025} : dest_240023;
      }
      else {
        result_245219 = (dest_240023 === null || dest_240023 === undefined) ? {} : dest_240023;
      }
      }
      nimCopyAux(result_245219, src_240024, ti_240025.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_240024 === null) {
        result_245219 = null;
      }
      else {
        if (dest_240023 === null || dest_240023 === undefined) {
          dest_240023 = new Array(src_240024.length);
        }
        else {
          dest_240023.length = src_240024.length;
        }
        result_245219 = dest_240023;
        for (var i = 0; i < src_240024.length; ++i) {
          result_245219[i] = nimCopy(result_245219[i], src_240024[i], ti_240025.base);
        }
      }
    
      break;
    case 28:
            if (src_240024 !== null) {
        result_245219 = src_240024.slice(0);
      }
    
      break;
    default: 
      result_245219 = src_240024;
      break;
    }

  return result_245219;

}
function toJSStr(s_225096) {
                    var Tmp5;
            var Tmp7;

  var result_225097 = null;

    var res_225170 = new_seq_225128((s_225096 != null ? s_225096.length : 0));
    var i_225172 = 0;
    var j_225174 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_225172 < (s_225096 != null ? s_225096.length : 0))) break L2;
          var c_225175 = s_225096[i_225172];
          if ((c_225175 < 128)) {
          res_225170[j_225174] = String.fromCharCode(c_225175);
          i_225172 += 1;
          }
          else {
            var helper_225198 = new_seq_225128(0);
            L3: do {
                L4: while (true) {
                if (!true) break L4;
                  var code_225199 = c_225175.toString(16);
                  if (((code_225199 != null ? code_225199.length : 0) == 1)) {
                  if (helper_225198 != null) { helper_225198.push("%0"); } else { helper_225198 = ["%0"]; };
                  }
                  else {
                  if (helper_225198 != null) { helper_225198.push("%"); } else { helper_225198 = ["%"]; };
                  }
                  
                  if (helper_225198 != null) { helper_225198.push(code_225199); } else { helper_225198 = [code_225199]; };
                  i_225172 += 1;
                    if (((s_225096 != null ? s_225096.length : 0) <= i_225172)) Tmp5 = true; else {                      Tmp5 = (s_225096[i_225172] < 128);                    }                  if (Tmp5) {
                  break L3;
                  }
                  
                  c_225175 = s_225096[i_225172];
                }
            } while(false);
++excHandler;
            Tmp7 = framePtr;
            try {
            res_225170[j_225174] = decodeURIComponent(helper_225198.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp7;
            res_225170[j_225174] = helper_225198.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp7;
            }
          }
          
          j_225174 += 1;
        }
    } while(false);
    if (res_225170 === null) res_225170 = [];
               if (res_225170.length < j_225174) { for (var i=res_225170.length;i<j_225174;++i) res_225170.push(null); }
               else { res_225170.length = j_225174; };
    result_225097 = res_225170.join("");

  return result_225097;

}
function raiseException(e_190218, ename_190219) {
    e_190218.name = ename_190219;
    if ((excHandler == 0)) {
    unhandledException(e_190218);
    }
    
    throw e_190218;

  
}
function chckRange(i_255016, a_255017, b_255018) {
      var Tmp1;

  var result_255019 = 0;

  BeforeRet: do {
      if (!(a_255017 <= i_255016)) Tmp1 = false; else {        Tmp1 = (i_255016 <= b_255018);      }    if (Tmp1) {
    result_255019 = i_255016;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_255019;

}
function cstrToNimstr(c_225079) {
      var ln = c_225079.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_225079.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_225079.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
function chckIndx(i_250086, a_250087, b_250088) {
      var Tmp1;

  var result_250089 = 0;

  BeforeRet: do {
      if (!(a_250087 <= i_250086)) Tmp1 = false; else {        Tmp1 = (i_250086 <= b_250088);      }    if (Tmp1) {
    result_250089 = i_250086;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_250086, a_250087, b_250088);
    }
    
  } while (false);

  return result_250089;

}
function eqStrings(a_230222, b_230223) {
        if (a_230222 == b_230223) return true;
    if (a_230222 === null && b_230223.length == 0) return true;
    if (b_230223 === null && a_230222.length == 0) return true;
    if ((!a_230222) || (!b_230223)) return false;
    var alen = a_230222.length;
    if (alen != b_230223.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_230222[i] != b_230223[i]) return false;
    return true;
  

  
}
function addInt(a_230403, b_230404) {
        var result = a_230403 + b_230404;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
function nimMax(a_230821, b_230822) {
    var Tmp1;

  var result_230823 = 0;

  BeforeRet: do {
    if ((b_230822 <= a_230821)) {
    Tmp1 = a_230821;
    }
    else {
    Tmp1 = b_230822;
    }
    
    result_230823 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_230823;

}
function subInt(a_230421, b_230422) {
        var result = a_230421 - b_230422;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
function nimMin(a_230803, b_230804) {
    var Tmp1;

  var result_230805 = 0;

  BeforeRet: do {
    if ((a_230803 <= b_230804)) {
    Tmp1 = a_230803;
    }
    else {
    Tmp1 = b_230804;
    }
    
    result_230805 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_230805;

}
function mnewString(len_230044) {
        return new Array(len_230044);
  

  
}
function modInt(a_230475, b_230476) {
        if (b_230476 == 0) raiseDivByZero();
    if (b_230476 == -1 && a_230475 == 2147483647) raiseOverflow();
    return Math.trunc(a_230475 % b_230476);
  

  
}
function arrayConstr(len_250067, value_250068, typ_250069) {
        var result = new Array(len_250067);
    for (var i = 0; i < len_250067; ++i) result[i] = nimCopy(null, value_250068, typ_250069);
    return result;
  

  
}
function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
function reprEnum(e_315480, typ_315481) {
  var result_315482 = null;

    if (!(is_undefined_315483(typ_315481.node.sons[e_315480]))) {
    result_315482 = nimCopy(null, makeNimstrLit(typ_315481.node.sons[e_315480].name), NTI112);
    }
    else {
      result_315482 = nimCopy(null, (cstrToNimstr((e_315480)+"") || []).concat(makeNimstrLit(" (invalid data!)") || []), NTI112);
    }
    

  return result_315482;

}
function mulInt(a_230439, b_230440) {
        var result = a_230439 * b_230440;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
function divInt(a_230457, b_230458) {
        if (b_230458 == 0) raiseDivByZero();
    if (b_230458 == -1 && a_230457 == 2147483647) raiseOverflow();
    return Math.trunc(a_230457 / b_230458);
  

  
}
function negInt(a_230583) {
  var result_230584 = 0;

    result_230584 = (a_230583 * -1);

  return result_230584;

}
function isObj(obj_270062, subclass_270063) {
  var result_270064 = false;

  BeforeRet: do {
    var x_270065 = obj_270062;
    if ((x_270065 == subclass_270063)) {
    result_270064 = true;
    break BeforeRet;
    }
    
    L1: do {
        L2: while (true) {
        if (!!((x_270065 == subclass_270063))) break L2;
          if ((x_270065 == null)) {
          result_270064 = false;
          break BeforeRet;
          }
          
          x_270065 = x_270065.base;
        }
    } while(false);
    result_270064 = true;
    break BeforeRet;
  } while (false);

  return result_270064;

}
function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: makeNimstrLit("no exception to reraise"), parent: null, m_type: NTI6257, name: null, trace: null, up: null}, "ReraiseError");
    }
    else {
      if ((excHandler == 0)) {
      if (is_nim_exception_156082()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}
var ConstSet2 = setConstr(13, 10);
function addChar(x_275031, c_275032) {
    x_275031.push(c_275032);

  
}
var ConstSet3 = setConstr([48, 57]);
var ConstSet4 = setConstr([48, 57]);
var ConstSet5 = setConstr(13, 10);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr(0, 125);
var ConstSet8 = setConstr([48, 57]);
var ConstSet9 = setConstr([65, 90]);
var ConstSet10 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);
var ConstSet11 = setConstr(46, 44);
var nim_program_result = 0;
var global_raise_hook_142018 = [null];
var local_raise_hook_142023 = [null];
var out_of_mem_hook_142026 = [null];
var unhandled_exception_hook_142031 = [null];
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var object_id_940031 = [0];
var utc_instance_10160231 = [null];
var local_instance_10160232 = [null];
var abort_on_error_11797237 = [false];
var checkpoints_11797239 = [null];
var formatters_11797241 = [null];
var tests_filters_11797260 = [{data: null, counter: 0}];
var disabled_param_filtering_11797261 = [false];
function new_console_output_formatter_11810214(output_level_11810217, color_output_11810218) {
  var result_11815002 = null;

    result_11815002 = {outputLevel: output_level_11810217, colorOutput: color_output_11810218, m_type: NTI11797224, isInSuite: false, isInTest: false};

  return result_11815002;

}
function default_console_formatter_11815061() {
  var result_11820002 = null;

    result_11820002 = new_console_output_formatter_11810214(0, true);

  return result_11820002;

}
function is_fat_pointer_235401(ti_235403) {
  var result_235404 = false;

  BeforeRet: do {
    result_235404 = !((ConstSet1[ti_235403.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_235404;

}
function nimCopyAux(dest_240028, src_240029, n_240031) {
    switch (n_240031.kind) {
    case 0:
      break;
    case 1:
            dest_240028[n_240031.offset] = nimCopy(dest_240028[n_240031.offset], src_240029[n_240031.offset], n_240031.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_240031.sons.length; i++) {
      nimCopyAux(dest_240028, src_240029, n_240031.sons[i]);
    }
    
      break;
    case 3:
            dest_240028[n_240031.offset] = nimCopy(dest_240028[n_240031.offset], src_240029[n_240031.offset], n_240031.typ);
      for (var i = 0; i < n_240031.sons.length; ++i) {
        nimCopyAux(dest_240028, src_240029, n_240031.sons[i][1]);
      }
    
      break;
    }

  
}
function is_valid_11915448(s_11915452) {
  var result_11915453 = false;

    result_11915453 = (0 < (s_11915452.data != null ? s_11915452.data.length : 0));

  return result_11915453;

}
function is_power_of_two_890029(x_890031) {
    var Tmp1;

  var result_890032 = false;

  BeforeRet: do {
    if (!(0 < x_890031)) Tmp1 = false; else {      Tmp1 = ((x_890031 & (x_890031 - 1)) == 0);    }    result_890032 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_890032;

}
function add_142042(x_142045, x_142045_Idx, y_142046) {
          if (x_142045[x_142045_Idx] === null) { x_142045[x_142045_Idx] = []; }
      var off = x_142045[x_142045_Idx].length;
      x_142045[x_142045_Idx].length += y_142046.length;
      for (var i = 0; i < y_142046.length; ++i) {
        x_142045[x_142045_Idx][off+i] = y_142046.charCodeAt(i);
      }
    

  
}
function new_seq_225128(len_225131) {
  var result_225133 = null;

    result_225133 = new Array(len_225131); for (var i=0;i<len_225131;++i) {result_225133[i]=null;}
  return result_225133;

}
function unhandledException(e_185059) {
    var buf_185060 = [[]];
    if (!(((e_185059.message != null ? e_185059.message.length : 0) == 0))) {
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_185060[0] = makeNimstrLit("Error: unhandled exception: "); };
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(e_185059.message); } else { buf_185060[0] = e_185059.message.slice(); };
    }
    else {
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_185060[0] = makeNimstrLit("Error: unhandled exception"); };
    }
    
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit(" [")); } else { buf_185060[0] = makeNimstrLit(" ["); };
    add_142042(buf_185060, 0, e_185059.name);
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit("]\x0A")); } else { buf_185060[0] = makeNimstrLit("]\x0A"); };
    var cbuf_190201 = toJSStr(buf_185060[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_190201);
  }
  else {
    throw cbuf_190201;
  }
  

  
}
function sys_fatal_102618(message_102622) {
    raiseException({message: nimCopy(null, message_102622, NTI112), m_type: NTI6241, parent: null, name: null, trace: null, up: null}, "AssertionError");

  
}
function raise_assert_102614(msg_102616) {
    sys_fatal_102618(msg_102616);

  
}
function failed_assert_impl_102680(msg_102682) {
    raise_assert_102614(msg_102682);

  
}
function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI6253, name: null, trace: null, up: null}, "RangeError");

  
}
function init_11915551(s_11915556, initial_size_11915557) {
    if (!(is_power_of_two_890029(initial_size_11915557))) {
    failed_assert_impl_102680(makeNimstrLit("setimpl.nim(19, 10) `isPowerOfTwo(initialSize)` "));
    }
    
    s_11915556.counter = 0;
    s_11915556.data = new Array(chckRange(initial_size_11915557, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_11915557, 0, 2147483647);++i) {s_11915556.data[i]={Field0: 0, Field1: null};}
  
}
function ensure_initialized_11915399() {
    if (((formatters_11797241[0] != null ? formatters_11797241[0].length : 0) == 0)) {
    formatters_11797241[0] = nimCopy(null, [default_console_formatter_11815061()], NTI11915416);
    }
    
    if ((!(disabled_param_filtering_11797261[0]) && !(is_valid_11915448(tests_filters_11797260[0])))) {
    init_11915551(tests_filters_11797260[0], 64);
    }
    

  
}
function len_11915267(s_11915271) {
  var result_11915272 = 0;

    result_11915272 = s_11915271.counter;

  return result_11915272;

}
function is_filled_11731418(hcode_11731420) {
  var result_11731421 = false;

    result_11731421 = !((hcode_11731420 == 0));

  return result_11731421;

}
function raiseIndexError(i_210047, a_210048, b_210049) {
    var Tmp1;

    if ((b_210049 < a_210048)) {
    Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_210047)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_210048)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_210049)+"") || []);
    }
    
    raiseException({message: nimCopy(null, Tmp1, NTI112), parent: null, m_type: NTI6249, name: null, trace: null, up: null}, "IndexError");

  
}
function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI6237, name: null, trace: null, up: null}, "OverflowError");

  
}
function substr_eq_8970026(s_8970028, pos_8970029, substr_8970030) {
  var result_8970031 = false;

  BeforeRet: do {
    var i_8970033 = 0;
    var length_8970034 = (substr_8970030 != null ? substr_8970030.length : 0);
    L1: do {
        L2: while (true) {
        if (!(((i_8970033 < length_8970034) && (addInt(pos_8970029, i_8970033) < (s_8970028 != null ? s_8970028.length : 0))) && (s_8970028[chckIndx(addInt(pos_8970029, i_8970033), 0, (s_8970028 != null ? s_8970028.length : 0)+0-1)-0] == substr_8970030[chckIndx(i_8970033, 0, (substr_8970030 != null ? substr_8970030.length : 0)+0-1)-0]))) break L2;
          i_8970033 = addInt(i_8970033, 1);
        }
    } while(false);
    result_8970031 = (i_8970033 == length_8970034);
    break BeforeRet;
  } while (false);

  return result_8970031;

}
function substr_341022(s_341024, first_341025, last_341026) {
  var result_341027 = null;

    var first_341028 = nimMax(first_341025, 0);
    var l_341030 = nimMax(addInt(subInt(nimMin(last_341026, (s_341024 != null ? (s_341024.length-1) : -1)), first_341028), 1), 0);
    result_341027 = nimCopy(null, mnewString(chckRange(l_341030, 0, 2147483647)), NTI112);
    L1: do {
      var i_341039 = 0;
      var colontmp__12130985 = 0;
      colontmp__12130985 = subInt(l_341030, 1);
      var res_12130986 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12130986 <= colontmp__12130985)) break L3;
            i_341039 = res_12130986;
            result_341027[chckIndx(i_341039, 0, (result_341027 != null ? result_341027.length : 0)+0-1)-0] = s_341024[chckIndx(addInt(i_341039, first_341028), 0, (s_341024 != null ? s_341024.length : 0)+0-1)-0];
            res_12130986 = addInt(res_12130986, 1);
          }
      } while(false);
    } while(false);

  return result_341027;

}
function nsuSplitString(s_9145039, sep_9145040, maxsplit_9145041) {
  var result_9145043 = null;

    if (!((0 < (sep_9145040 != null ? sep_9145040.length : 0)))) {
    failed_assert_impl_102680(makeNimstrLit("strutils.nim(756, 11) `sep.len > 0` "));
    }
    
    result_9145043 = nimCopy(null, [], NTI9165015);
    L1: do {
      var xHEX60gensym9160201_9165016 = null;
      var lastHEX60gensym9005043_12130977 = 0;
      var splitsHEX60gensym9005044_12130978 = maxsplit_9145041;
      L2: do {
          L3: while (true) {
          if (!(lastHEX60gensym9005043_12130977 <= (s_9145039 != null ? s_9145039.length : 0))) break L3;
            var firstHEX60gensym9005045_12130980 = lastHEX60gensym9005043_12130977;
            L4: do {
                L5: while (true) {
                if (!((lastHEX60gensym9005043_12130977 < (s_9145039 != null ? s_9145039.length : 0)) && !(substr_eq_8970026(s_9145039, lastHEX60gensym9005043_12130977, sep_9145040)))) break L5;
                  lastHEX60gensym9005043_12130977 = addInt(lastHEX60gensym9005043_12130977, 1);
                }
            } while(false);
            if ((splitsHEX60gensym9005044_12130978 == 0)) {
            lastHEX60gensym9005043_12130977 = (s_9145039 != null ? s_9145039.length : 0);
            }
            
            xHEX60gensym9160201_9165016 = substr_341022(s_9145039, firstHEX60gensym9005045_12130980, subInt(lastHEX60gensym9005043_12130977, 1));
            var Tmp6 = nimCopy(null, xHEX60gensym9160201_9165016, NTI112);
            if (result_9145043 != null) { result_9145043.push(Tmp6); } else { result_9145043 = [Tmp6]; };
            if ((splitsHEX60gensym9005044_12130978 == 0)) {
            break L2;
            }
            
            splitsHEX60gensym9005044_12130978 = subInt(splitsHEX60gensym9005044_12130978, 1);
            lastHEX60gensym9005043_12130977 = addInt(lastHEX60gensym9005043_12130977, (sep_9145040 != null ? sep_9145040.length : 0));
          }
      } while(false);
    } while(false);

  return result_9145043;

}
function find_11915061(a_11915065, item_11915066) {
  var result_11915067 = 0;

  BeforeRet: do {
    L1: do {
      var i_11915098 = 0;
      var i_12130993 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_12130993 < (a_11915065 != null ? a_11915065.length : 0))) break L3;
            i_11915098 = a_11915065[chckIndx(i_12130993, 0, (a_11915065 != null ? a_11915065.length : 0)+0-1)-0];
            if ((i_11915098 == item_11915066)) {
            break BeforeRet;
            }
            
            result_11915067 = addInt(result_11915067, 1);
            i_12130993 = addInt(i_12130993, 1);
          }
      } while(false);
    } while(false);
    result_11915067 = -1;
  } while (false);

  return result_11915067;

}
function contains_11915054(a_11915058, item_11915059) {
  var result_11915060 = false;

  BeforeRet: do {
    result_11915060 = (0 <= find_11915061(a_11915058, item_11915059));
    break BeforeRet;
  } while (false);

  return result_11915060;

}
function nsuSplitChar(s_9135034, sep_9135035, maxsplit_9135036) {
  var result_9135038 = null;

    result_9135038 = nimCopy(null, [], NTI9140015);
    L1: do {
      var xHEX60gensym9135039_9140016 = null;
      var lastHEX60gensym8970133_12130998 = 0;
      var splitsHEX60gensym8970134_12130999 = maxsplit_9135036;
      L2: do {
          L3: while (true) {
          if (!(lastHEX60gensym8970133_12130998 <= (s_9135034 != null ? s_9135034.length : 0))) break L3;
            var firstHEX60gensym8970135_12131001 = lastHEX60gensym8970133_12130998;
            L4: do {
                L5: while (true) {
                if (!((lastHEX60gensym8970133_12130998 < (s_9135034 != null ? s_9135034.length : 0)) && !((s_9135034[chckIndx(lastHEX60gensym8970133_12130998, 0, (s_9135034 != null ? s_9135034.length : 0)+0-1)-0] == sep_9135035)))) break L5;
                  lastHEX60gensym8970133_12130998 = addInt(lastHEX60gensym8970133_12130998, 1);
                }
            } while(false);
            if ((splitsHEX60gensym8970134_12130999 == 0)) {
            lastHEX60gensym8970133_12130998 = (s_9135034 != null ? s_9135034.length : 0);
            }
            
            xHEX60gensym9135039_9140016 = substr_341022(s_9135034, firstHEX60gensym8970135_12131001, subInt(lastHEX60gensym8970133_12130998, 1));
            var Tmp6 = nimCopy(null, xHEX60gensym9135039_9140016, NTI112);
            if (result_9135038 != null) { result_9135038.push(Tmp6); } else { result_9135038 = [Tmp6]; };
            if ((splitsHEX60gensym8970134_12130999 == 0)) {
            break L2;
            }
            
            splitsHEX60gensym8970134_12130999 = subInt(splitsHEX60gensym8970134_12130999, 1);
            lastHEX60gensym8970133_12130998 = addInt(lastHEX60gensym8970133_12130998, 1);
          }
      } while(false);
    } while(false);

  return result_9135038;

}
function nsuStartsWith(s_9445016, prefix_9445017) {
            var Tmp3;

  var result_9445018 = false;

  BeforeRet: do {
    var i_9445020 = 0;
    L1: do {
        L2: while (true) {
        if (!true) break L2;
          if (((prefix_9445017 != null ? prefix_9445017.length : 0) <= i_9445020)) {
          result_9445018 = true;
          break BeforeRet;
          }
          
            if (((s_9445016 != null ? s_9445016.length : 0) <= i_9445020)) Tmp3 = true; else {              Tmp3 = !((s_9445016[chckIndx(i_9445020, 0, (s_9445016 != null ? s_9445016.length : 0)+0-1)-0] == prefix_9445017[chckIndx(i_9445020, 0, (prefix_9445017 != null ? prefix_9445017.length : 0)+0-1)-0]));            }          if (Tmp3) {
          result_9445018 = false;
          break BeforeRet;
          }
          
          i_9445020 = addInt(i_9445020, 1);
        }
    } while(false);
  } while (false);

  return result_9445018;

}
function nsuEndsWith(s_9465017, suffix_9465018) {
          var Tmp3;

  var result_9465019 = false;

  BeforeRet: do {
    var i_9465021 = 0;
    var j_9465022 = subInt((s_9465017 != null ? s_9465017.length : 0), (suffix_9465018 != null ? suffix_9465018.length : 0));
    L1: do {
        L2: while (true) {
          if (!(0 <= addInt(i_9465021, j_9465022))) Tmp3 = false; else {            Tmp3 = (addInt(i_9465021, j_9465022) < (s_9465017 != null ? s_9465017.length : 0));          }        if (!Tmp3) break L2;
          if (!((s_9465017[chckIndx(addInt(i_9465021, j_9465022), 0, (s_9465017 != null ? s_9465017.length : 0)+0-1)-0] == suffix_9465018[chckIndx(i_9465021, 0, (suffix_9465018 != null ? suffix_9465018.length : 0)+0-1)-0]))) {
          result_9465019 = false;
          break BeforeRet;
          }
          
          i_9465021 = addInt(i_9465021, 1);
        }
    } while(false);
    if (((suffix_9465018 != null ? suffix_9465018.length : 0) <= i_9465021)) {
    result_9465019 = true;
    break BeforeRet;
    }
    
  } while (false);

  return result_9465019;

}
function glob_11915048(matcher_11915050, filter_11915051) {
  var result_11915052 = false;

  BeforeRet: do {
    if (((filter_11915051 != null ? filter_11915051.length : 0) == 0)) {
    result_11915052 = true;
    break BeforeRet;
    }
    
    if (!(contains_11915054(filter_11915051, 42))) {
    result_11915052 = eqStrings(matcher_11915050, filter_11915051);
    break BeforeRet;
    }
    
    var before_and_after_11915133 = nsuSplitChar(filter_11915051, 42, 1);
    if (((before_and_after_11915133 != null ? before_and_after_11915133.length : 0) == 1)) {
    result_11915052 = nsuStartsWith(matcher_11915050, before_and_after_11915133[chckIndx(0, 0, (before_and_after_11915133 != null ? before_and_after_11915133.length : 0)+0-1)-0]);
    break BeforeRet;
    }
    
    if (((matcher_11915050 != null ? matcher_11915050.length : 0) < subInt((filter_11915051 != null ? filter_11915051.length : 0), 1))) {
    result_11915052 = false;
    break BeforeRet;
    }
    
    result_11915052 = (nsuStartsWith(matcher_11915050, before_and_after_11915133[chckIndx(0, 0, (before_and_after_11915133 != null ? before_and_after_11915133.length : 0)+0-1)-0]) && nsuEndsWith(matcher_11915050, before_and_after_11915133[chckIndx(1, 0, (before_and_after_11915133 != null ? before_and_after_11915133.length : 0)+0-1)-0]));
    break BeforeRet;
  } while (false);

  return result_11915052;

}
function match_filter_11915167(suite_name_11915169, test_name_11915170, filter_11915171) {
  var result_11915172 = false;

  BeforeRet: do {
    if (eqStrings(filter_11915171, [])) {
    result_11915172 = true;
    break BeforeRet;
    }
    
    if (eqStrings(test_name_11915170, filter_11915171)) {
    result_11915172 = true;
    break BeforeRet;
    }
    
    var suite_and_test_filters_11915177 = nsuSplitString(filter_11915171, makeNimstrLit("::"), 1);
    if (((suite_and_test_filters_11915177 != null ? suite_and_test_filters_11915177.length : 0) == 1)) {
    var test_filter_11915183 = nimCopy(null, suite_and_test_filters_11915177[chckIndx(0, 0, (suite_and_test_filters_11915177 != null ? suite_and_test_filters_11915177.length : 0)+0-1)-0], NTI112);
    result_11915172 = glob_11915048(test_name_11915170, test_filter_11915183);
    break BeforeRet;
    }
    
    result_11915172 = (glob_11915048(suite_name_11915169, suite_and_test_filters_11915177[chckIndx(0, 0, (suite_and_test_filters_11915177 != null ? suite_and_test_filters_11915177.length : 0)+0-1)-0]) && glob_11915048(test_name_11915170, suite_and_test_filters_11915177[chckIndx(1, 0, (suite_and_test_filters_11915177 != null ? suite_and_test_filters_11915177.length : 0)+0-1)-0]));
    break BeforeRet;
  } while (false);

  return result_11915172;

}
function should_run_11915214(current_suite_name_11915216, test_name_11915217) {
  var result_11915218 = false;

  BeforeRet: do {
    if ((len_11915267(tests_filters_11797260[0]) == 0)) {
    result_11915218 = true;
    break BeforeRet;
    }
    
    L1: do {
      var f_11915385 = null;
      L2: do {
        var h_12130959 = 0;
        var colontmp__12130960 = 0;
        colontmp__12130960 = (tests_filters_11797260[0].data != null ? (tests_filters_11797260[0].data.length-1) : -1);
        var res_12130961 = 0;
        L3: do {
            L4: while (true) {
            if (!(res_12130961 <= colontmp__12130960)) break L4;
              h_12130959 = res_12130961;
              if (is_filled_11731418(tests_filters_11797260[0].data[chckIndx(h_12130959, 0, (tests_filters_11797260[0].data != null ? tests_filters_11797260[0].data.length : 0)+0-1)-0].Field0)) {
              f_11915385 = tests_filters_11797260[0].data[chckIndx(h_12130959, 0, (tests_filters_11797260[0].data != null ? tests_filters_11797260[0].data.length : 0)+0-1)-0].Field1;
              if (match_filter_11915167(current_suite_name_11915216, test_name_11915217, f_11915385)) {
              result_11915218 = true;
              break BeforeRet;
              }
              
              }
              
              res_12130961 = addInt(res_12130961, 1);
            }
        } while(false);
      } while(false);
    } while(false);
    result_11915218 = false;
    break BeforeRet;
  } while (false);

  return result_11915218;

}
function new_seq_11985618(len_11985621) {
  var result_11985623 = null;

    result_11985623 = new Array(len_11985621); for (var i=0;i<len_11985621;++i) {result_11985623[i]=0;}
  return result_11985623;

}
function new_ring_buffer_11985602(length_11985605) {
  var result_11985616 = {data: null, head: 0, tail: 0, size: 0, length: 0};

    var s_11985659 = new_seq_11985618(chckRange(length_11985605, 0, 2147483647));
    nimCopy(result_11985616, {data: nimCopy(null, s_11985659, NTI11985622), head: 0, tail: -1, size: 0, length: length_11985605}, NTI11985608);

  return result_11985616;

}
function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI6235, name: null, trace: null, up: null}, "DivByZeroError");

  
}
function add_11985715(b_11985720, data_11985721) {
    b_11985720.tail = modInt(addInt(b_11985720.tail, 1), b_11985720.length);
    b_11985720.data[chckIndx(b_11985720.tail, 0, (b_11985720.data != null ? b_11985720.data.length : 0)+0-1)-0] = data_11985721;
    b_11985720.size = nimMin(addInt(b_11985720.size, 1), b_11985720.length);
    b_11985720.head = modInt(addInt(subInt(addInt(b_11985720.length, b_11985720.tail), b_11985720.size), 1), b_11985720.length);

  
}
function floor_mod_12000040(x_12000043, y_12000044) {
      var Tmp1;
      var Tmp2;
        var Tmp3;

  var result_12000045 = 0;

    result_12000045 = Math.trunc(x_12000043 % y_12000044);
      if (!(0 < result_12000045)) Tmp2 = false; else {        Tmp2 = (y_12000044 < 0);      }      if (Tmp2) Tmp1 = true; else {        if (!(result_12000045 < 0)) Tmp3 = false; else {          Tmp3 = (0 < y_12000044);        }        Tmp1 = Tmp3;      }    if (Tmp1) {
    result_12000045 += y_12000044;
    }
    

  return result_12000045;

}
function idx_12000033(b_12000037, i_12000038) {
    var Tmp1;

  var result_12000039 = 0;

    if ((i_12000038 < 0)) {
    Tmp1 = floor_mod_12000040(addInt(b_12000037.tail, addInt(i_12000038, 1)), b_12000037.length);
    }
    else {
    Tmp1 = floor_mod_12000040(addInt(i_12000038, b_12000037.head), b_12000037.length);
    }
    
    result_12000039 = Tmp1;

  return result_12000039;

}
function HEX5BHEX5D_12000012(b_12000016, i_12000017) {
  var result_12000018 = 0;

    result_12000018 = b_12000016.data[chckIndx(idx_12000033(b_12000016, i_12000017), 0, (b_12000016.data != null ? b_12000016.data.length : 0)+0-1)-0];

  return result_12000018;

}
function checkpoint_11940268(msg_11940270) {
    var Tmp1 = nimCopy(null, msg_11940270, NTI112);
    if (checkpoints_11797239[0] != null) { checkpoints_11797239[0].push(Tmp1); } else { checkpoints_11797239[0] = [Tmp1]; };

  
}
function test_ended_11940228(test_result_11940230) {
    L1: do {
      var formatter_11940237 = null;
      var i_12131008 = 0;
      var l_12131009 = (formatters_11797241[0] != null ? formatters_11797241[0].length : 0);
      L2: do {
          L3: while (true) {
          if (!(i_12131008 < l_12131009)) break L3;
            formatter_11940237 = formatters_11797241[0][chckIndx(i_12131008, 0, (formatters_11797241[0] != null ? formatters_11797241[0].length : 0)+0-1)-0];
            test_ended_11797520(formatter_11940237, test_result_11940230);
            i_12131008 = addInt(i_12131008, 1);
            if (!(((formatters_11797241[0] != null ? formatters_11797241[0].length : 0) == l_12131009))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);

  
}
function suite_ended_11930629() {
    L1: do {
      var formatter_11940214 = null;
      var i_12131012 = 0;
      var l_12131013 = (formatters_11797241[0] != null ? formatters_11797241[0].length : 0);
      L2: do {
          L3: while (true) {
          if (!(i_12131012 < l_12131013)) break L3;
            formatter_11940214 = formatters_11797241[0][chckIndx(i_12131012, 0, (formatters_11797241[0] != null ? formatters_11797241[0].length : 0)+0-1)-0];
            suite_ended_11797538(formatter_11940214);
            i_12131012 = addInt(i_12131012, 1);
            if (!(((formatters_11797241[0] != null ? formatters_11797241[0].length : 0) == l_12131013))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);

  
}
  var Tmp3;
  var Tmp11;
  var Tmp43;
L1: do {
  var test_suite_name_11980007 = makeNimstrLit("ringbuffer");
  ensure_initialized_11915399();
  Tmp3 = framePtr;
  try {
  L4: do {
    var formatter_11980014 = [null];
    var i_12130863 = 0;
    var l_12130864 = (formatters_11797241[0] != null ? formatters_11797241[0].length : 0);
    L5: do {
        L6: while (true) {
        if (!(i_12130863 < l_12130864)) break L6;
          formatter_11980014[0] = formatters_11797241[0][i_12130863];
          suite_started_11797461(formatter_11980014[0], makeNimstrLit("ringbuffer"));
          i_12130863 += 1;
          if (!(((formatters_11797241[0] != null ? formatters_11797241[0].length : 0) == l_12130864))) {
          failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
          }
          
        }
    } while(false);
  } while(false);
  ensure_initialized_11915399();
  if (should_run_11915214(test_suite_name_11980007, makeNimstrLit("index"))) {
  checkpoints_11797239[0] = nimCopy(null, [], NTI11985215);
  var test_status_impl_11985217 = [0];
  L7: do {
    var formatter_11985224 = [null];
    var i_12130867 = 0;
    var l_12130868 = (formatters_11797241[0] != null ? formatters_11797241[0].length : 0);
    L8: do {
        L9: while (true) {
        if (!(i_12130867 < l_12130868)) break L9;
          formatter_11985224[0] = formatters_11797241[0][i_12130867];
          test_started_11797480(formatter_11985224[0], makeNimstrLit("index"));
          i_12130867 += 1;
          if (!(((formatters_11797241[0] != null ? formatters_11797241[0].length : 0) == l_12130868))) {
          failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
          }
          
        }
    } while(false);
  } while(false);
++excHandler;
  Tmp11 = framePtr;
  try {
  var rb_11985692 = [new_ring_buffer_11985602(3)];
  add_11985715(rb_11985692[0], 0);
  add_11985715(rb_11985692[0], 1);
  add_11985715(rb_11985692[0], 2);
  L12: do {
    var HEX3Ac1_12000097 = [HEX5BHEX5D_12000012(rb_11985692[0], 0)];
    if (!((HEX3Ac1_12000097[0] == 0))) {
    checkpoint_11940268(makeNimstrLit("C:\\Users\\user\\git\\nico\\nico\\ringbuffer.nim(62, 16): Check failed: rb[0] == 0"));
    checkpoint_11940268((makeNimstrLit("rb[0] was ") || []).concat(cstrToNimstr((HEX3Ac1_12000097[0])+"") || []));
    test_status_impl_11985217[0] = 1;
    ensure_initialized_11915399();
    L13: do {
      var formatterHEX60gensym12000201_12005207 = [null];
      var i_12130872 = 0;
      var l_12130873 = (formatters_11797241[0] != null ? formatters_11797241[0].length : 0);
      L14: do {
          L15: while (true) {
          if (!(i_12130872 < l_12130873)) break L15;
            formatterHEX60gensym12000201_12005207[0] = formatters_11797241[0][i_12130872];
            failure_occurred_11797501(formatterHEX60gensym12000201_12005207[0], checkpoints_11797239[0], []);
            i_12130872 += 1;
            if (!(((formatters_11797241[0] != null ? formatters_11797241[0].length : 0) == l_12130873))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    if (abort_on_error_11797237[0]) {
    exit(nim_program_result);
    }
    
    checkpoints_11797239[0] = nimCopy(null, [], NTI12005615);
    }
    
  } while(false);
  L16: do {
    var HEX3Ac1_12010018 = [HEX5BHEX5D_12000012(rb_11985692[0], 1)];
    if (!((HEX3Ac1_12010018[0] == 1))) {
    checkpoint_11940268(makeNimstrLit("C:\\Users\\user\\git\\nico\\nico\\ringbuffer.nim(63, 16): Check failed: rb[1] == 1"));
    checkpoint_11940268((makeNimstrLit("rb[1] was ") || []).concat(cstrToNimstr((HEX3Ac1_12010018[0])+"") || []));
    test_status_impl_11985217[0] = 1;
    ensure_initialized_11915399();
    L17: do {
      var formatterHEX60gensym12010201_12015207 = [null];
      var i_12130877 = 0;
      var l_12130878 = (formatters_11797241[0] != null ? formatters_11797241[0].length : 0);
      L18: do {
          L19: while (true) {
          if (!(i_12130877 < l_12130878)) break L19;
            formatterHEX60gensym12010201_12015207[0] = formatters_11797241[0][i_12130877];
            failure_occurred_11797501(formatterHEX60gensym12010201_12015207[0], checkpoints_11797239[0], []);
            i_12130877 += 1;
            if (!(((formatters_11797241[0] != null ? formatters_11797241[0].length : 0) == l_12130878))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    if (abort_on_error_11797237[0]) {
    exit(nim_program_result);
    }
    
    checkpoints_11797239[0] = nimCopy(null, [], NTI12015615);
    }
    
  } while(false);
  L20: do {
    var HEX3Ac1_12020018 = [HEX5BHEX5D_12000012(rb_11985692[0], 2)];
    if (!((HEX3Ac1_12020018[0] == 2))) {
    checkpoint_11940268(makeNimstrLit("C:\\Users\\user\\git\\nico\\nico\\ringbuffer.nim(64, 16): Check failed: rb[2] == 2"));
    checkpoint_11940268((makeNimstrLit("rb[2] was ") || []).concat(cstrToNimstr((HEX3Ac1_12020018[0])+"") || []));
    test_status_impl_11985217[0] = 1;
    ensure_initialized_11915399();
    L21: do {
      var formatterHEX60gensym12020201_12025207 = [null];
      var i_12130882 = 0;
      var l_12130883 = (formatters_11797241[0] != null ? formatters_11797241[0].length : 0);
      L22: do {
          L23: while (true) {
          if (!(i_12130882 < l_12130883)) break L23;
            formatterHEX60gensym12020201_12025207[0] = formatters_11797241[0][i_12130882];
            failure_occurred_11797501(formatterHEX60gensym12020201_12025207[0], checkpoints_11797239[0], []);
            i_12130882 += 1;
            if (!(((formatters_11797241[0] != null ? formatters_11797241[0].length : 0) == l_12130883))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    if (abort_on_error_11797237[0]) {
    exit(nim_program_result);
    }
    
    checkpoints_11797239[0] = nimCopy(null, [], NTI12025615);
    }
    
  } while(false);
  add_11985715(rb_11985692[0], 3);
  L24: do {
    var HEX3Ac1_12030018 = [HEX5BHEX5D_12000012(rb_11985692[0], 0)];
    if (!((HEX3Ac1_12030018[0] == 1))) {
    checkpoint_11940268(makeNimstrLit("C:\\Users\\user\\git\\nico\\nico\\ringbuffer.nim(66, 16): Check failed: rb[0] == 1"));
    checkpoint_11940268((makeNimstrLit("rb[0] was ") || []).concat(cstrToNimstr((HEX3Ac1_12030018[0])+"") || []));
    test_status_impl_11985217[0] = 1;
    ensure_initialized_11915399();
    L25: do {
      var formatterHEX60gensym12030201_12035207 = [null];
      var i_12130887 = 0;
      var l_12130888 = (formatters_11797241[0] != null ? formatters_11797241[0].length : 0);
      L26: do {
          L27: while (true) {
          if (!(i_12130887 < l_12130888)) break L27;
            formatterHEX60gensym12030201_12035207[0] = formatters_11797241[0][i_12130887];
            failure_occurred_11797501(formatterHEX60gensym12030201_12035207[0], checkpoints_11797239[0], []);
            i_12130887 += 1;
            if (!(((formatters_11797241[0] != null ? formatters_11797241[0].length : 0) == l_12130888))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    if (abort_on_error_11797237[0]) {
    exit(nim_program_result);
    }
    
    checkpoints_11797239[0] = nimCopy(null, [], NTI12035615);
    }
    
  } while(false);
  L28: do {
    var HEX3Ac1_12040018 = [HEX5BHEX5D_12000012(rb_11985692[0], 1)];
    if (!((HEX3Ac1_12040018[0] == 2))) {
    checkpoint_11940268(makeNimstrLit("C:\\Users\\user\\git\\nico\\nico\\ringbuffer.nim(67, 16): Check failed: rb[1] == 2"));
    checkpoint_11940268((makeNimstrLit("rb[1] was ") || []).concat(cstrToNimstr((HEX3Ac1_12040018[0])+"") || []));
    test_status_impl_11985217[0] = 1;
    ensure_initialized_11915399();
    L29: do {
      var formatterHEX60gensym12040201_12045207 = [null];
      var i_12130892 = 0;
      var l_12130893 = (formatters_11797241[0] != null ? formatters_11797241[0].length : 0);
      L30: do {
          L31: while (true) {
          if (!(i_12130892 < l_12130893)) break L31;
            formatterHEX60gensym12040201_12045207[0] = formatters_11797241[0][i_12130892];
            failure_occurred_11797501(formatterHEX60gensym12040201_12045207[0], checkpoints_11797239[0], []);
            i_12130892 += 1;
            if (!(((formatters_11797241[0] != null ? formatters_11797241[0].length : 0) == l_12130893))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    if (abort_on_error_11797237[0]) {
    exit(nim_program_result);
    }
    
    checkpoints_11797239[0] = nimCopy(null, [], NTI12045615);
    }
    
  } while(false);
  L32: do {
    var HEX3Ac1_12050018 = [HEX5BHEX5D_12000012(rb_11985692[0], 2)];
    if (!((HEX3Ac1_12050018[0] == 3))) {
    checkpoint_11940268(makeNimstrLit("C:\\Users\\user\\git\\nico\\nico\\ringbuffer.nim(68, 16): Check failed: rb[2] == 3"));
    checkpoint_11940268((makeNimstrLit("rb[2] was ") || []).concat(cstrToNimstr((HEX3Ac1_12050018[0])+"") || []));
    test_status_impl_11985217[0] = 1;
    ensure_initialized_11915399();
    L33: do {
      var formatterHEX60gensym12050201_12055207 = [null];
      var i_12130897 = 0;
      var l_12130898 = (formatters_11797241[0] != null ? formatters_11797241[0].length : 0);
      L34: do {
          L35: while (true) {
          if (!(i_12130897 < l_12130898)) break L35;
            formatterHEX60gensym12050201_12055207[0] = formatters_11797241[0][i_12130897];
            failure_occurred_11797501(formatterHEX60gensym12050201_12055207[0], checkpoints_11797239[0], []);
            i_12130897 += 1;
            if (!(((formatters_11797241[0] != null ? formatters_11797241[0].length : 0) == l_12130898))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    if (abort_on_error_11797237[0]) {
    exit(nim_program_result);
    }
    
    checkpoints_11797239[0] = nimCopy(null, [], NTI12055615);
    }
    
  } while(false);
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
  framePtr = Tmp11;
  test_status_impl_11985217[0] = 1;
  ensure_initialized_11915399();
  L36: do {
    var formatterHEX60gensym12055801_12060207 = [null];
    var i_12130901 = 0;
    var l_12130902 = (formatters_11797241[0] != null ? formatters_11797241[0].length : 0);
    L37: do {
        L38: while (true) {
        if (!(i_12130901 < l_12130902)) break L38;
          formatterHEX60gensym12055801_12060207[0] = formatters_11797241[0][i_12130901];
          failure_occurred_11797501(formatterHEX60gensym12055801_12060207[0], checkpoints_11797239[0], []);
          i_12130901 += 1;
          if (!(((formatters_11797241[0] != null ? formatters_11797241[0].length : 0) == l_12130902))) {
          failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
          }
          
        }
    } while(false);
  } while(false);
  if (abort_on_error_11797237[0]) {
  exit(nim_program_result);
  }
  
  checkpoints_11797239[0] = nimCopy(null, [], NTI12060615);
  lastJSError = prevJSError;
  } finally {
  framePtr = Tmp11;
  if ((test_status_impl_11985217[0] == 1)) {
  nim_program_result = 1;
  }
  
  var test_result_12060801 = {suiteName: nimCopy(null, test_suite_name_11980007, NTI112), testName: makeNimstrLit("index"), status: test_status_impl_11985217[0]};
  test_ended_11940228(test_result_12060801);
  checkpoints_11797239[0] = nimCopy(null, [], NTI12060816);
  }
  }
  
  ensure_initialized_11915399();
  if (should_run_11915214(test_suite_name_11980007, makeNimstrLit("revIndex"))) {
  checkpoints_11797239[0] = nimCopy(null, [], NTI12065215);
  var test_status_impl_12065217 = [0];
  L39: do {
    var formatter_12065224 = [null];
    var i_12130906 = 0;
    var l_12130907 = (formatters_11797241[0] != null ? formatters_11797241[0].length : 0);
    L40: do {
        L41: while (true) {
        if (!(i_12130906 < l_12130907)) break L41;
          formatter_12065224[0] = formatters_11797241[0][i_12130906];
          test_started_11797480(formatter_12065224[0], makeNimstrLit("revIndex"));
          i_12130906 += 1;
          if (!(((formatters_11797241[0] != null ? formatters_11797241[0].length : 0) == l_12130907))) {
          failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
          }
          
        }
    } while(false);
  } while(false);
++excHandler;
  Tmp43 = framePtr;
  try {
  var rb_12065607 = [new_ring_buffer_11985602(3)];
  add_11985715(rb_12065607[0], 0);
  add_11985715(rb_12065607[0], 1);
  add_11985715(rb_12065607[0], 2);
  L44: do {
    var HEX3Ac1_12070018 = [HEX5BHEX5D_12000012(rb_12065607[0], -1)];
    if (!((HEX3Ac1_12070018[0] == 2))) {
    checkpoint_11940268(makeNimstrLit("C:\\Users\\user\\git\\nico\\nico\\ringbuffer.nim(75, 17): Check failed: rb[-1] == 2"));
    checkpoint_11940268((makeNimstrLit("rb[-1] was ") || []).concat(cstrToNimstr((HEX3Ac1_12070018[0])+"") || []));
    test_status_impl_12065217[0] = 1;
    ensure_initialized_11915399();
    L45: do {
      var formatterHEX60gensym12070201_12075207 = [null];
      var i_12130911 = 0;
      var l_12130912 = (formatters_11797241[0] != null ? formatters_11797241[0].length : 0);
      L46: do {
          L47: while (true) {
          if (!(i_12130911 < l_12130912)) break L47;
            formatterHEX60gensym12070201_12075207[0] = formatters_11797241[0][i_12130911];
            failure_occurred_11797501(formatterHEX60gensym12070201_12075207[0], checkpoints_11797239[0], []);
            i_12130911 += 1;
            if (!(((formatters_11797241[0] != null ? formatters_11797241[0].length : 0) == l_12130912))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    if (abort_on_error_11797237[0]) {
    exit(nim_program_result);
    }
    
    checkpoints_11797239[0] = nimCopy(null, [], NTI12075615);
    }
    
  } while(false);
  L48: do {
    var HEX3Ac1_12080018 = [HEX5BHEX5D_12000012(rb_12065607[0], -2)];
    if (!((HEX3Ac1_12080018[0] == 1))) {
    checkpoint_11940268(makeNimstrLit("C:\\Users\\user\\git\\nico\\nico\\ringbuffer.nim(76, 17): Check failed: rb[-2] == 1"));
    checkpoint_11940268((makeNimstrLit("rb[-2] was ") || []).concat(cstrToNimstr((HEX3Ac1_12080018[0])+"") || []));
    test_status_impl_12065217[0] = 1;
    ensure_initialized_11915399();
    L49: do {
      var formatterHEX60gensym12080201_12085207 = [null];
      var i_12130916 = 0;
      var l_12130917 = (formatters_11797241[0] != null ? formatters_11797241[0].length : 0);
      L50: do {
          L51: while (true) {
          if (!(i_12130916 < l_12130917)) break L51;
            formatterHEX60gensym12080201_12085207[0] = formatters_11797241[0][i_12130916];
            failure_occurred_11797501(formatterHEX60gensym12080201_12085207[0], checkpoints_11797239[0], []);
            i_12130916 += 1;
            if (!(((formatters_11797241[0] != null ? formatters_11797241[0].length : 0) == l_12130917))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    if (abort_on_error_11797237[0]) {
    exit(nim_program_result);
    }
    
    checkpoints_11797239[0] = nimCopy(null, [], NTI12085615);
    }
    
  } while(false);
  L52: do {
    var HEX3Ac1_12090018 = [HEX5BHEX5D_12000012(rb_12065607[0], -3)];
    if (!((HEX3Ac1_12090018[0] == 0))) {
    checkpoint_11940268(makeNimstrLit("C:\\Users\\user\\git\\nico\\nico\\ringbuffer.nim(77, 17): Check failed: rb[-3] == 0"));
    checkpoint_11940268((makeNimstrLit("rb[-3] was ") || []).concat(cstrToNimstr((HEX3Ac1_12090018[0])+"") || []));
    test_status_impl_12065217[0] = 1;
    ensure_initialized_11915399();
    L53: do {
      var formatterHEX60gensym12090201_12095207 = [null];
      var i_12130921 = 0;
      var l_12130922 = (formatters_11797241[0] != null ? formatters_11797241[0].length : 0);
      L54: do {
          L55: while (true) {
          if (!(i_12130921 < l_12130922)) break L55;
            formatterHEX60gensym12090201_12095207[0] = formatters_11797241[0][i_12130921];
            failure_occurred_11797501(formatterHEX60gensym12090201_12095207[0], checkpoints_11797239[0], []);
            i_12130921 += 1;
            if (!(((formatters_11797241[0] != null ? formatters_11797241[0].length : 0) == l_12130922))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    if (abort_on_error_11797237[0]) {
    exit(nim_program_result);
    }
    
    checkpoints_11797239[0] = nimCopy(null, [], NTI12095615);
    }
    
  } while(false);
  add_11985715(rb_12065607[0], 3);
  L56: do {
    var HEX3Ac1_12100018 = [HEX5BHEX5D_12000012(rb_12065607[0], -1)];
    if (!((HEX3Ac1_12100018[0] == 3))) {
    checkpoint_11940268(makeNimstrLit("C:\\Users\\user\\git\\nico\\nico\\ringbuffer.nim(79, 17): Check failed: rb[-1] == 3"));
    checkpoint_11940268((makeNimstrLit("rb[-1] was ") || []).concat(cstrToNimstr((HEX3Ac1_12100018[0])+"") || []));
    test_status_impl_12065217[0] = 1;
    ensure_initialized_11915399();
    L57: do {
      var formatterHEX60gensym12100201_12105207 = [null];
      var i_12130926 = 0;
      var l_12130927 = (formatters_11797241[0] != null ? formatters_11797241[0].length : 0);
      L58: do {
          L59: while (true) {
          if (!(i_12130926 < l_12130927)) break L59;
            formatterHEX60gensym12100201_12105207[0] = formatters_11797241[0][i_12130926];
            failure_occurred_11797501(formatterHEX60gensym12100201_12105207[0], checkpoints_11797239[0], []);
            i_12130926 += 1;
            if (!(((formatters_11797241[0] != null ? formatters_11797241[0].length : 0) == l_12130927))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    if (abort_on_error_11797237[0]) {
    exit(nim_program_result);
    }
    
    checkpoints_11797239[0] = nimCopy(null, [], NTI12105615);
    }
    
  } while(false);
  L60: do {
    var HEX3Ac1_12110018 = [HEX5BHEX5D_12000012(rb_12065607[0], -2)];
    if (!((HEX3Ac1_12110018[0] == 2))) {
    checkpoint_11940268(makeNimstrLit("C:\\Users\\user\\git\\nico\\nico\\ringbuffer.nim(80, 17): Check failed: rb[-2] == 2"));
    checkpoint_11940268((makeNimstrLit("rb[-2] was ") || []).concat(cstrToNimstr((HEX3Ac1_12110018[0])+"") || []));
    test_status_impl_12065217[0] = 1;
    ensure_initialized_11915399();
    L61: do {
      var formatterHEX60gensym12110201_12115207 = [null];
      var i_12130931 = 0;
      var l_12130932 = (formatters_11797241[0] != null ? formatters_11797241[0].length : 0);
      L62: do {
          L63: while (true) {
          if (!(i_12130931 < l_12130932)) break L63;
            formatterHEX60gensym12110201_12115207[0] = formatters_11797241[0][i_12130931];
            failure_occurred_11797501(formatterHEX60gensym12110201_12115207[0], checkpoints_11797239[0], []);
            i_12130931 += 1;
            if (!(((formatters_11797241[0] != null ? formatters_11797241[0].length : 0) == l_12130932))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    if (abort_on_error_11797237[0]) {
    exit(nim_program_result);
    }
    
    checkpoints_11797239[0] = nimCopy(null, [], NTI12115615);
    }
    
  } while(false);
  L64: do {
    var HEX3Ac1_12120018 = [HEX5BHEX5D_12000012(rb_12065607[0], -3)];
    if (!((HEX3Ac1_12120018[0] == 1))) {
    checkpoint_11940268(makeNimstrLit("C:\\Users\\user\\git\\nico\\nico\\ringbuffer.nim(81, 17): Check failed: rb[-3] == 1"));
    checkpoint_11940268((makeNimstrLit("rb[-3] was ") || []).concat(cstrToNimstr((HEX3Ac1_12120018[0])+"") || []));
    test_status_impl_12065217[0] = 1;
    ensure_initialized_11915399();
    L65: do {
      var formatterHEX60gensym12120201_12125207 = [null];
      var i_12130936 = 0;
      var l_12130937 = (formatters_11797241[0] != null ? formatters_11797241[0].length : 0);
      L66: do {
          L67: while (true) {
          if (!(i_12130936 < l_12130937)) break L67;
            formatterHEX60gensym12120201_12125207[0] = formatters_11797241[0][i_12130936];
            failure_occurred_11797501(formatterHEX60gensym12120201_12125207[0], checkpoints_11797239[0], []);
            i_12130936 += 1;
            if (!(((formatters_11797241[0] != null ? formatters_11797241[0].length : 0) == l_12130937))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    if (abort_on_error_11797237[0]) {
    exit(nim_program_result);
    }
    
    checkpoints_11797239[0] = nimCopy(null, [], NTI12125615);
    }
    
  } while(false);
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
  framePtr = Tmp43;
  test_status_impl_12065217[0] = 1;
  ensure_initialized_11915399();
  L68: do {
    var formatterHEX60gensym12125801_12130207 = [null];
    var i_12130940 = 0;
    var l_12130941 = (formatters_11797241[0] != null ? formatters_11797241[0].length : 0);
    L69: do {
        L70: while (true) {
        if (!(i_12130940 < l_12130941)) break L70;
          formatterHEX60gensym12125801_12130207[0] = formatters_11797241[0][i_12130940];
          failure_occurred_11797501(formatterHEX60gensym12125801_12130207[0], checkpoints_11797239[0], []);
          i_12130940 += 1;
          if (!(((formatters_11797241[0] != null ? formatters_11797241[0].length : 0) == l_12130941))) {
          failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
          }
          
        }
    } while(false);
  } while(false);
  if (abort_on_error_11797237[0]) {
  exit(nim_program_result);
  }
  
  checkpoints_11797239[0] = nimCopy(null, [], NTI12130615);
  lastJSError = prevJSError;
  } finally {
  framePtr = Tmp43;
  if ((test_status_impl_12065217[0] == 1)) {
  nim_program_result = 1;
  }
  
  var test_result_12130801 = {suiteName: nimCopy(null, test_suite_name_11980007, NTI112), testName: makeNimstrLit("revIndex"), status: test_status_impl_12065217[0]};
  test_ended_11940228(test_result_12130801);
  checkpoints_11797239[0] = nimCopy(null, [], NTI12130816);
  }
  }
  
  } finally {
  framePtr = Tmp3;
  suite_ended_11930629();
  }
} while(false);
function init_table_12132016(initial_size_12132020) {
  var result_12132036 = {data: null, counter: 0};

    if (!(is_power_of_two_890029(initial_size_12132020))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(initialSize)` "));
    }
    
    result_12132036.counter = 0;
    result_12132036.data = new Array(chckRange(initial_size_12132020, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_12132020, 0, 2147483647);++i) {result_12132036.data[i]={Field0: 0, Field1: 0, Field2: 0};}
  return result_12132036;

}
var keys_down_12150629 = [init_table_12132016(64)];
var a_key_was_pressed_12150630 = [false];
var a_key_was_released_12150631 = [false];
function to_float_26459(i_26461) {
  var result_26462 = 0.0;

    result_26462 = i_26461;

  return result_26462;

}
function HEX2F_325648(x_325650, y_325651) {
  var result_325652 = 0.0;

    result_325652 = (to_float_26459(x_325650) / to_float_26459(y_325651));

  return result_325652;

}
        var Tmp5;
var current_palette_12170153 = [{Field0: 0, Field1: arrayConstr(256, {Field0: 0, Field1: 0, Field2: 0}, NTI11531080)}];
var touches_12170155 = [null];
var master_volume_12170156 = [1.0000000000000000e+000];
var sfx_volume_12170157 = [1.0000000000000000e+000];
var music_volume_12170158 = [1.0000000000000000e+000];
var sample_rate_12170159 = [4.4100000000000000e+004];
var inv_sample_rate_12170160 = [(1.0000000000000000e+000 / sample_rate_12170159[0])];
var tick_func_12170163 = [null];
var current_bpm_12170165 = [128];
var current_tpb_12170166 = [4];
var initialized_12170167 = [false];
var running_12170168 = [false];
var key_listeners_12170185 = [[]];
var event_listeners_12170202 = [[]];
var loading_12170203 = [0];
var cursor_x_12170205 = [0];
var cursor_y_12170207 = [0];
var sw_canvas_12170208 = [null];
var stencil_buffer_12170209 = [null];
var stencil_mode_12170219 = [0];
var stencil_write_12170220 = [false];
var stencil_ref_12170221 = [0];
var target_screen_width_12170224 = [128];
var target_screen_height_12170227 = [128];
var fixed_screen_size_12170228 = [true];
var integer_screen_scale_12170229 = [false];
var screen_width_12170232 = [128];
var screen_height_12170235 = [128];
var screen_padding_x_12170237 = [0];
var screen_padding_y_12170239 = [0];
var keymap_12170244 = [[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]];
var controller_added_func_12170248 = [null];
var controller_removed_func_12170252 = [null];
var controllers_12170254 = [null];
var focused_12170255 = [true];
var record_seconds_12170257 = [30];
var full_speed_gif_12170258 = [true];
var sprite_flags_12170263 = [new Uint8Array(128)];
var mixer_channels_12170265 = [0];
var g_dither_pattern_12170267 = [65535];
var frame_rate_12170269 = [60];
var time_step_12170270 = [HEX2F_325648(1, frame_rate_12170269[0])];
var frame_mult_12170272 = [1];
var base_path_12170273 = [null];
var asset_path_12170274 = [null];
var write_path_12170275 = [null];
var screen_scale_12170276 = [4.0000000000000000e+000];
var spritesheets_12170280 = [[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]];
var spritesheet_12170281 = [null];
var tilemaps_12170285 = [[{data: null, w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}, {data: null, w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}, {data: null, w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}, {data: null, w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}, {data: null, w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}, {data: null, w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}, {data: null, w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}, {data: null, w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}, {data: null, w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}, {data: null, w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}, {data: null, w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}, {data: null, w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}, {data: null, w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}, {data: null, w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}, {data: null, w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}, {data: null, w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}]];
var current_tilemap_12170287 = [null];
var init_func_12170290 = [null];
var update_func_12170294 = [null];
var draw_func_12170297 = [null];
var text_func_12170301 = [null];
var resize_funcs_12170303 = [null];
var fonts_12170307 = [[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]];
var current_font_12170308 = [null];
var current_font_id_12170309 = [0];
var frame_12170311 = [0];
var camera_x_12170312 = [0];
var camera_y_12170313 = [0];
var palette_map_draw_12170317 = [new Int32Array(256)];
var palette_map_display_12170321 = [new Int32Array(256)];
var palette_transparent_12170325 = [arrayConstr(256, false, NTI163)];
L2: do {
  var i_12170334 = [0];
  var i_12170738 = 0;
  L3: do {
      L4: while (true) {
      if (!(i_12170738 < 256)) break L4;
        i_12170334[0] = i_12170738;
        palette_map_draw_12170317[0][i_12170334[0]] = i_12170334[0];
        palette_map_display_12170321[0][i_12170334[0]] = i_12170334[0];
        if ((i_12170334[0] == 0)) {
        Tmp5 = true;
        }
        else {
        Tmp5 = false;
        }
        
        palette_transparent_12170325[0][i_12170334[0]] = Tmp5;
        i_12170738 += 1;
      }
  } while(false);
} while(false);
var current_color_12170335 = [0];
var keep_running_12170336 = [true];
var mute_audio_12170337 = [false];
var current_music_id_12170338 = [-1];
var clip_min_x_12170339 = [0];
var clip_max_x_12170340 = [0];
var clip_min_y_12170341 = [0];
var clip_max_y_12170342 = [0];
var clipping_rect_12170343 = [{Field0: 0, Field1: 0, Field2: 0, Field3: 0}];
var mouse_detected_12170344 = [false];
var mouse_x_12170345 = [0];
var mouse_y_12170346 = [0];
var mouse_raw_x_12170347 = [0];
var mouse_raw_y_12170348 = [0];
var mouse_rel_x_12170349 = [0.0];
var mouse_rel_y_12170350 = [0.0];
var last_mouse_x_12170351 = [0];
var last_mouse_y_12170352 = [0];
var last_mouse_raw_x_12170353 = [0];
var last_mouse_raw_y_12170354 = [0];
var mouse_buttons_down_12170358 = [[false, false, false]];
var mouse_buttons_12170362 = [new Int32Array(3)];
var mouse_wheel_state_12170363 = [0];
function new_seq_12210108(len_12210111) {
  var result_12210113 = null;

    result_12210113 = new Array(len_12210111); for (var i=0;i<len_12210111;++i) {result_12210113[i]={name: null, start: {seconds: 0, nanosecond: 0}, time: 0, count: 0, parent: null, children: null};}
  return result_12210113;

}
function new_ring_buffer_12210092(length_12210095) {
  var result_12210106 = {data: null, head: 0, tail: 0, size: 0, length: 0};

    var s_12210164 = new_seq_12210108(chckRange(length_12210095, 0, 2147483647));
    nimCopy(result_12210106, {data: nimCopy(null, s_12210164, NTI12210112), head: 0, tail: -1, size: 0, length: length_12210095}, NTI12210098);

  return result_12210106;

}
var profile_collect_12210090 = [true];
var profile_history_12210198 = [new_ring_buffer_12210092(256)];
var ctx_13297014 = [null];
var sw_canvas32_13297015 = [null];
var canvas_13297016 = [null];
var interval_13297018 = [null];
var audio_context_13297019 = [null];
var noise_buffer_13297020 = [null];
var noise_buffer2_13297021 = [null];
var audio_channels_13297099 = [[{kind: 0, source: null, callback: null, musicId: 0, arp: 0, arpSpeed: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}, {kind: 0, source: null, callback: null, musicId: 0, arp: 0, arpSpeed: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}, {kind: 0, source: null, callback: null, musicId: 0, arp: 0, arpSpeed: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}, {kind: 0, source: null, callback: null, musicId: 0, arp: 0, arpSpeed: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}, {kind: 0, source: null, callback: null, musicId: 0, arp: 0, arpSpeed: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}, {kind: 0, source: null, callback: null, musicId: 0, arp: 0, arpSpeed: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}, {kind: 0, source: null, callback: null, musicId: 0, arp: 0, arpSpeed: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}, {kind: 0, source: null, callback: null, musicId: 0, arp: 0, arpSpeed: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}, {kind: 0, source: null, callback: null, musicId: 0, arp: 0, arpSpeed: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}, {kind: 0, source: null, callback: null, musicId: 0, arp: 0, arpSpeed: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}, {kind: 0, source: null, callback: null, musicId: 0, arp: 0, arpSpeed: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}, {kind: 0, source: null, callback: null, musicId: 0, arp: 0, arpSpeed: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}, {kind: 0, source: null, callback: null, musicId: 0, arp: 0, arpSpeed: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}, {kind: 0, source: null, callback: null, musicId: 0, arp: 0, arpSpeed: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}, {kind: 0, source: null, callback: null, musicId: 0, arp: 0, arpSpeed: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}, {kind: 0, source: null, callback: null, musicId: 0, arp: 0, arpSpeed: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}]];
var tick_func_13297102 = [null];
var current_bpm_13300024 = [128];
var current_tpb_13300025 = [4];
var sfx_data_13300029 = [arrayConstr(64, null, NTI13296045)];
var music_data_13300033 = [arrayConstr(64, null, NTI13296045)];
var current_music_13300034 = [null];
var sfx_gain_13300035 = [null];
var music_gain_13300036 = [null];
var master_gain_13300037 = [null];
nimCopy(keymap_12170244[0], [[37, 65], [39, 68], [38, 87], [40, 83], [90], [88], [67], [86], [70], [71], [72], [86], [66], [78], [13, 32], [27, 8]], NTI13300038);
var requested_fullscreen_13310291 = [false];
function mute() {
    if (!((master_gain_13300037[0].gain.value == 0.0))) {
    rawEcho(makeNimstrLit("muting audio"));
    master_gain_13300037[0].gain.value = 0.0;
    }
    else {
      rawEcho(makeNimstrLit("unmuting audio"));
      master_gain_13300037[0].gain.value = 1.0000000000000000e+000;
    }
    

  
}
var state_13653205 = [{a0: 1773455756, a1: 4275166512}];
clip_max_x_12170340[0] = (screen_width_12170232[0] - 1);
clip_max_y_12170342[0] = (screen_height_12170235[0] - 1);
var dither_color_13980296 = [-1];
var conn_16232066 = [null];
var peer_16232067 = [null];
var my_id_16232068 = [null];
var remote_id_16232074 = [new Int32Array(4)];
var remote_idindex_16232075 = [0];
var frame_16232076 = [0];
var connecting_16232078 = [0];
var connected_16232079 = [false];
var is_host_16232080 = [false];
var player_pos_16232084 = [[new Int32Array(2), new Int32Array(2)]];
var player_scores_16232088 = [new Int32Array(2)];
var player_id_16232093 = [0];
var ball_pos_16232094 = [new Float32Array(2)];
var ball_vel_16232095 = [new Float32Array(2)];
var paddle_width_16232097 = [16];
var pause_timer_16232098 = [1.0000000000000000e+000];
var ball_speed_16232099 = [5.0000000000000000e-001];
var reset_timer_16232100 = [0.0];
var last_message_timer_16232101 = [0];
var last_ping_timer_16232102 = [0];
var char_set_16232104 = [null];
L2: do {
  var c_16232221 = [0];
  var res_16232336 = 48;
  L3: do {
      L4: while (true) {
      if (!(res_16232336 <= 57)) break L4;
        c_16232221[0] = res_16232336;
        if (char_set_16232104[0] != null) { char_set_16232104[0].push(c_16232221[0]); } else { char_set_16232104[0] = [c_16232221[0]]; };
        res_16232336 += 1;
      }
  } while(false);
} while(false);
function new_seq_13585451(len_13585454) {
  var result_13585456 = null;

    result_13585456 = new Array(len_13585454); for (var i=0;i<len_13585454;++i) {result_13585456[i]=null;}
  return result_13585456;

}
function new_11531272() {
  var result_11531276 = null;

  BeforeRet: do {
    var r_11531401 = null;
    r_11531401 = {kind: 0, name: null, id: 0, axes: [{Field0: 0.0, Field1: 0.0, Field2: 0}, {Field0: 0.0, Field1: 0.0, Field2: 0}, {Field0: 0.0, Field1: 0.0, Field2: 0}, {Field0: 0.0, Field1: 0.0, Field2: 0}, {Field0: 0.0, Field1: 0.0, Field2: 0}, {Field0: 0.0, Field1: 0.0, Field2: 0}], buttons: new Int32Array(16), deadzone: 0.0, invertX: false, invertY: false, useRightStick: false};
    result_11531276 = r_11531401;
    break BeforeRet;
  } while (false);

  return result_11531276;

}
function is_undefined_315483(x_315486) {
  var result_315487 = false;

    result_315487 = x_315486 === undefined;

  return result_315487;

}
function new_nico_controller_11531267(id_11531269) {
  var result_11531270 = null;

    result_11531270 = new_11531272();
    result_11531270.id = ((id_11531269)|0);
    if ((-1 < id_11531269)) {
    result_11531270.kind = 1;
    result_11531270.deadzone = 5.0000000000000000e-001;
    }
    else {
      result_11531270.kind = 0;
      result_11531270.name = nimCopy(null, makeNimstrLit("KEYBOARD"), NTI112);
    }
    
    rawEcho(makeNimstrLit("added game controller: "), cstrToNimstr((((id_11531269)|0))+""), makeNimstrLit(": "), reprEnum(result_11531270.kind, NTI11531202), makeNimstrLit(": "), result_11531270.name);

  return result_11531270;

}
function init_13585444(org_13585446, app_13585447) {
    base_path_12170273[0] = nimCopy(null, [], NTI112);
    asset_path_12170274[0] = nimCopy(null, makeNimstrLit("assets/"), NTI112);
    write_path_12170275[0] = nimCopy(null, [], NTI112);
    controllers_12170254[0] = nimCopy(null, new_seq_13585451(0), NTI13585455);
    if (controllers_12170254[0] != null) { controllers_12170254[0].push(new_nico_controller_11531267(-1)); } else { controllers_12170254[0] = [new_nico_controller_11531267(-1)]; };
    audio_context_13297019[0] = new AudioContext();
    sfx_gain_13300035[0] = audio_context_13297019[0].createGain();
    sfx_gain_13300035[0].gain.value = 1.0000000000000000e+000;
    music_gain_13300036[0] = audio_context_13297019[0].createGain();
    music_gain_13300036[0].gain.value = 1.0000000000000000e+000;
    master_gain_13300037[0] = audio_context_13297019[0].createGain();
    master_gain_13300037[0].gain.value = 1.0000000000000000e+000;
    sfx_gain_13300035[0].connect(master_gain_13300037[0]);
    music_gain_13300036[0].connect(master_gain_13300037[0]);
    master_gain_13300037[0].connect(audio_context_13297019[0].destination);
    L1: do {
      var c_13585503 = null;
      var i_16810050 = 0;
      if ((i_16810050 <= 15)) {
      L2: do {
          L3: while (true) {
          if (!true) break L3;
            c_13585503 = audio_channels_13297099[0][chckIndx(i_16810050, 0, (audio_channels_13297099[0] != null ? audio_channels_13297099[0].length : 0)+0-1)-0];
            c_13585503.gain = audio_context_13297019[0].createGain();
            c_13585503.gain.gain.value = 1.0000000000000000e+000;
            if ((15 <= i_16810050)) {
            break L2;
            }
            
            i_16810050 = addInt(i_16810050, 1);
          }
      } while(false);
      }
      
    } while(false);

  
}
function set_palette_13980014(p_13980016) {
    nimCopy(current_palette_12170153[0], p_13980016, NTI11531076);

  
}
function rgb_12210056(r_12210058, g_12210059, b_12210060) {
  var result_12210065 = {Field0: 0, Field1: 0, Field2: 0};

  BeforeRet: do {
    var colontmp__16810053 = r_12210058;
    var colontmp__16810054 = g_12210059;
    var colontmp__16810055 = b_12210060;
    nimCopy(result_12210065, {Field0: colontmp__16810053, Field1: colontmp__16810054, Field2: colontmp__16810055}, NTI12210061);
    break BeforeRet;
  } while (false);

  return result_12210065;

}
function load_palette_pico8_13916297() {
  var result_13980073 = {Field0: 0, Field1: arrayConstr(256, {Field0: 0, Field1: 0, Field2: 0}, NTI11531080)};

    nimCopy(result_13980073.Field1[chckIndx(0, 0, (result_13980073.Field1 != null ? result_13980073.Field1.length : 0)+0-1)-0], rgb_12210056(0, 0, 0), NTI11531080);
    nimCopy(result_13980073.Field1[chckIndx(1, 0, (result_13980073.Field1 != null ? result_13980073.Field1.length : 0)+0-1)-0], rgb_12210056(29, 43, 83), NTI11531080);
    nimCopy(result_13980073.Field1[chckIndx(2, 0, (result_13980073.Field1 != null ? result_13980073.Field1.length : 0)+0-1)-0], rgb_12210056(126, 37, 83), NTI11531080);
    nimCopy(result_13980073.Field1[chckIndx(3, 0, (result_13980073.Field1 != null ? result_13980073.Field1.length : 0)+0-1)-0], rgb_12210056(0, 135, 81), NTI11531080);
    nimCopy(result_13980073.Field1[chckIndx(4, 0, (result_13980073.Field1 != null ? result_13980073.Field1.length : 0)+0-1)-0], rgb_12210056(171, 82, 54), NTI11531080);
    nimCopy(result_13980073.Field1[chckIndx(5, 0, (result_13980073.Field1 != null ? result_13980073.Field1.length : 0)+0-1)-0], rgb_12210056(95, 87, 79), NTI11531080);
    nimCopy(result_13980073.Field1[chckIndx(6, 0, (result_13980073.Field1 != null ? result_13980073.Field1.length : 0)+0-1)-0], rgb_12210056(194, 195, 199), NTI11531080);
    nimCopy(result_13980073.Field1[chckIndx(7, 0, (result_13980073.Field1 != null ? result_13980073.Field1.length : 0)+0-1)-0], rgb_12210056(255, 241, 232), NTI11531080);
    nimCopy(result_13980073.Field1[chckIndx(8, 0, (result_13980073.Field1 != null ? result_13980073.Field1.length : 0)+0-1)-0], rgb_12210056(255, 0, 77), NTI11531080);
    nimCopy(result_13980073.Field1[chckIndx(9, 0, (result_13980073.Field1 != null ? result_13980073.Field1.length : 0)+0-1)-0], rgb_12210056(255, 163, 0), NTI11531080);
    nimCopy(result_13980073.Field1[chckIndx(10, 0, (result_13980073.Field1 != null ? result_13980073.Field1.length : 0)+0-1)-0], rgb_12210056(255, 240, 36), NTI11531080);
    nimCopy(result_13980073.Field1[chckIndx(11, 0, (result_13980073.Field1 != null ? result_13980073.Field1.length : 0)+0-1)-0], rgb_12210056(0, 231, 86), NTI11531080);
    nimCopy(result_13980073.Field1[chckIndx(12, 0, (result_13980073.Field1 != null ? result_13980073.Field1.length : 0)+0-1)-0], rgb_12210056(41, 173, 255), NTI11531080);
    nimCopy(result_13980073.Field1[chckIndx(13, 0, (result_13980073.Field1 != null ? result_13980073.Field1.length : 0)+0-1)-0], rgb_12210056(131, 118, 156), NTI11531080);
    nimCopy(result_13980073.Field1[chckIndx(14, 0, (result_13980073.Field1 != null ? result_13980073.Field1.length : 0)+0-1)-0], rgb_12210056(255, 119, 168), NTI11531080);
    nimCopy(result_13980073.Field1[chckIndx(15, 0, (result_13980073.Field1 != null ? result_13980073.Field1.length : 0)+0-1)-0], rgb_12210056(255, 204, 170), NTI11531080);
    result_13980073.Field0 = 16;

  return result_13980073;

}
function rotl_13653430(x_13653432, k_13653433) {
  var result_13653434 = 0;

    result_13653434 = ((x_13653432 << k_13653433) | ((x_13653432 >>> 0) >>> ((64 - k_13653433) >>> 0)));

  return result_13653434;

}
function next_13653458(r_13653461) {
  var result_13653462 = 0;

    var s0_13653463 = r_13653461.a0;
    var s1_13653464 = r_13653461.a1;
    result_13653462 = ((s0_13653463 + s1_13653464) >>> 0);
    s1_13653464 = (s1_13653464 ^ s0_13653463);
    r_13653461.a0 = ((rotl_13653430(s0_13653463, 55) ^ s1_13653464) ^ (s1_13653464 << 14));
    r_13653461.a1 = rotl_13653430(s1_13653464, 36);

  return result_13653462;

}
function init_rand_13655612(seed_13655614) {
  var result_13655615 = [{a0: 0, a1: 0}];

    if (!(!((seed_13655614 == 0)))) {
    failed_assert_impl_102680(makeNimstrLit("random.nim(572, 12) `seed != 0` "));
    }
    
    result_13655615[0].a0 = (seed_13655614 >> 16);
    result_13655615[0].a1 = (seed_13655614 & 65535);
    next_13653458(result_13655615[0]);

  return result_13655615[0];

}
function randomize_13670222(seed_13670224) {
    nimCopy(state_13653205[0], init_rand_13655612(seed_13670224), NTI13653202);

  
}
function epoch_time_10685401() {
  var result_10685403 = 0.0;

    result_10685403 = HEX2F_325648(new Date().getTime(), 1000);

  return result_10685403;

}
function load_config_13585429() {
  
}
function new_12170777() {
  var result_12170781 = null;

  BeforeRet: do {
    var r_12170801 = null;
    r_12170801 = {data: null, channels: 0, w: 0, h: 0, tw: 0, th: 0, filename: null};
    result_12170781 = r_12170801;
    break BeforeRet;
  } while (false);

  return result_12170781;

}
function new_seq_12170839(len_12170842) {
  var result_12170844 = null;

    result_12170844 = new Array(len_12170842); for (var i=0;i<len_12170842;++i) {result_12170844[i]=0;}
  return result_12170844;

}
function new_surface_12170771(w_12170773, h_12170774) {
  var result_12170775 = null;

    result_12170775 = new_12170777();
    result_12170775.data = nimCopy(null, new_seq_12170839(chckRange(mulInt(w_12170773, h_12170774), 0, 2147483647)), NTI12170843);
    result_12170775.channels = 1;
    result_12170775.w = w_12170773;
    result_12170775.h = h_12170774;

  return result_12170775;

}
function set_spritesheet_15125015(index_15125017) {
      var Tmp1;

      if ((index_15125017 < 0)) Tmp1 = true; else {        Tmp1 = (16 <= index_15125017);      }    if (Tmp1) {
    raiseException({message: (makeNimstrLit("Invalid spritesheet ") || []).concat(cstrToNimstr((index_15125017)+"") || []), parent: null, m_type: NTI6217, name: null, trace: null, up: null}, "Exception");
    }
    
    if ((spritesheets_12170280[0][chckIndx(index_15125017, 0, (spritesheets_12170280[0] != null ? spritesheets_12170280[0].length : 0)+0-1)-0] == null)) {
    raiseException({message: (makeNimstrLit("No spritesheet loaded: ") || []).concat(cstrToNimstr((index_15125017)+"") || []), parent: null, m_type: NTI6217, name: null, trace: null, up: null}, "Exception");
    }
    
    spritesheet_12170281[0] = spritesheets_12170280[0][chckIndx(index_15125017, 0, (spritesheets_12170280[0] != null ? spritesheets_12170280[0].length : 0)+0-1)-0];

  
}
function clip_13916347() {
    clip_min_x_12170339[0] = 0;
    clip_max_x_12170340[0] = subInt(screen_width_12170232[0], 1);
    clip_min_y_12170341[0] = 0;
    clip_max_y_12170342[0] = subInt(screen_height_12170235[0], 1);
    clipping_rect_12170343[0].Field0 = 0;
    clipping_rect_12170343[0].Field1 = 0;
    clipping_rect_12170343[0].Field2 = subInt(screen_width_12170232[0], 1);
    clipping_rect_12170343[0].Field3 = subInt(screen_height_12170235[0], 1);

  
}
function init_13930484(org_13930486, app_13930487) {
    controllers_12170254[0] = nimCopy(null, new_seq_13585451(0), NTI13585455);
    init_13585444(org_13930486, app_13930487);
    set_palette_13980014(load_palette_pico8_13916297());
    initialized_12170167[0] = true;
    randomize_13670222(epoch_time_10685401());
    load_config_13585429();
    spritesheets_12170280[0][chckIndx(0, 0, (spritesheets_12170280[0] != null ? spritesheets_12170280[0].length : 0)+0-1)-0] = new_surface_12170771(128, 128);
    spritesheets_12170280[0][chckIndx(0, 0, (spritesheets_12170280[0] != null ? spritesheets_12170280[0].length : 0)+0-1)-0].tw = 8;
    spritesheets_12170280[0][chckIndx(0, 0, (spritesheets_12170280[0] != null ? spritesheets_12170280[0].length : 0)+0-1)-0].th = 8;
    set_spritesheet_15125015(0);
    clip_13916347();

  
}
function fixed_size_15115335(enabled_15115337) {
    fixed_screen_size_12170228[0] = enabled_15115337;

  
}
function integer_scale_15115367(enabled_15115369) {
    integer_screen_scale_12170229[0] = enabled_15115369;

  
}
function get_context2d_12306722(c_12306724) {
  var result_12306725 = null;

    result_12306725=c_12306724.getContext('2d');

  return result_12306725;

}
function resize_canvas_13300344(w_13300346, h_13300347, scale_13300348) {
    rawEcho(makeNimstrLit("resizing canvas to "), cstrToNimstr((w_13300346)+""), makeNimstrLit(" x "), cstrToNimstr((h_13300347)+""), makeNimstrLit(" at scale "), cstrToNimstr((scale_13300348)+""));
    sw_canvas_12170208[0] = new_surface_12170771(w_13300346, h_13300347);
    screen_width_12170232[0] = w_13300346;
    screen_height_12170235[0] = h_13300347;
    screen_scale_12170276[0] = scale_13300348;
    if ((canvas_13297016[0] == null)) {
    canvas_13297016[0] = document.createElement("canvas");
    }
    
    canvas_13297016[0].width = w_13300346;
    canvas_13297016[0].height = h_13300347;
    canvas_13297016[0].style.width = toJSStr((cstrToNimstr((mulInt(w_13300346, scale_13300348))+"") || []).concat(makeNimstrLit("px") || []));
    canvas_13297016[0].style.height = toJSStr((cstrToNimstr((mulInt(h_13300347, scale_13300348))+"") || []).concat(makeNimstrLit("px") || []));
    ctx_13297014[0] = get_context2d_12306722(canvas_13297016[0]);
    sw_canvas32_13297015[0] = ctx_13297014[0].getImageData(0.0, 0.0, w_13300346, h_13300347);
    stencil_buffer_12170209[0] = new_surface_12170771(w_13300346, h_13300347);

  
}
function max_85014(x_85016, y_85017) {
    var Tmp1;
      var Tmp2;

  var result_85018 = 0.0;

      if ((y_85017 <= x_85016)) Tmp2 = true; else {        Tmp2 = !((y_85017 == y_85017));      }    if (Tmp2) {
    Tmp1 = x_85016;
    }
    else {
    Tmp1 = y_85017;
    }
    
    result_85018 = Tmp1;

  return result_85018;

}
function min_75281(x_75283, y_75284) {
    var Tmp1;
      var Tmp2;

  var result_75285 = 0.0;

      if ((x_75283 <= y_75284)) Tmp2 = true; else {        Tmp2 = !((y_75284 == y_75284));      }    if (Tmp2) {
    Tmp1 = x_75283;
    }
    else {
    Tmp1 = y_75284;
    }
    
    result_75285 = Tmp1;

  return result_75285;

}
function resize_13300340(display_w_13300342, display_h_13300343) {
    rawEcho(makeNimstrLit("display "), cstrToNimstr((display_w_13300342)+""), makeNimstrLit(" x "), cstrToNimstr((display_h_13300343)+""));
    rawEcho(makeNimstrLit("canvas target size "), cstrToNimstr((target_screen_width_12170224[0])+""), makeNimstrLit(" x "), cstrToNimstr((target_screen_height_12170227[0])+""));
    screen_scale_12170276[0] = max_85014(1.0000000000000000e+000, min_75281(Math.floor((display_w_13300342 / target_screen_width_12170224[0])), Math.floor((display_h_13300343 / target_screen_height_12170227[0]))));
    rawEcho(makeNimstrLit("scale "), cstrToNimstr((screen_scale_12170276[0])+""));
    screen_padding_x_12170237[0] = 0;
    screen_padding_y_12170239[0] = 0;
    screen_width_12170232[0] = divInt(display_w_13300342, ((screen_scale_12170276[0])|0));
    screen_height_12170235[0] = divInt(display_h_13300343, ((screen_scale_12170276[0])|0));
    rawEcho(makeNimstrLit("canvas "), cstrToNimstr((screen_width_12170232[0])+""), makeNimstrLit(" x "), cstrToNimstr((screen_height_12170235[0])+""));
    resize_canvas_13300344(screen_width_12170232[0], screen_height_12170235[0], ((screen_scale_12170276[0])|0));

  
}
function find_13335127(a_13335131, item_13335132) {
  var result_13335133 = 0;

  BeforeRet: do {
    L1: do {
      var i_13335164 = 0;
      var i_16810111 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16810111 < (a_13335131 != null ? a_13335131.length : 0))) break L3;
            i_13335164 = a_13335131[chckIndx(i_16810111, 0, (a_13335131 != null ? a_13335131.length : 0)+0-1)-0];
            if ((i_13335164 == item_13335132)) {
            break BeforeRet;
            }
            
            result_13335133 = addInt(result_13335133, 1);
            i_16810111 = addInt(i_16810111, 1);
          }
      } while(false);
    } while(false);
    result_13335133 = -1;
  } while (false);

  return result_13335133;

}
function contains_13335120(a_13335124, item_13335125) {
  var result_13335126 = false;

  BeforeRet: do {
    result_13335126 = (0 <= find_13335127(a_13335124, item_13335125));
    break BeforeRet;
  } while (false);

  return result_13335126;

}
function to_pint_12170119(x_12170121) {
  var result_12170122 = 0;

  BeforeRet: do {
    result_12170122 = x_12170121;
    break BeforeRet;
  } while (false);

  return result_12170122;

}
function to_pint_12170102(x_12170104) {
  var result_12170105 = 0;

  BeforeRet: do {
    result_12170105 = Math.floor(x_12170104);
    break BeforeRet;
  } while (false);

  return result_12170105;

}
function set_button_state_11625015(self_11625017, button_11625018, down_11625019) {
    var Tmp1;

  BeforeRet: do {
    if ((15 < button_11625018)) {
    break BeforeRet;
    }
    
    if (down_11625019) {
    Tmp1 = 1;
    }
    else {
    Tmp1 = -2;
    }
    
    self_11625017.buttons[chckIndx(button_11625018, 0, (self_11625017.buttons != null ? self_11625017.buttons.length : 0)+0-1)-0] = Tmp1;
  } while (false);

  
}
function HEX21HEX26_936044(h_936046, val_936047) {
  var result_936048 = 0;

    var h_936049 = (h_936046 >>> 0);
    var val_936050 = (val_936047 >>> 0);
    var res_936051 = ((h_936049 + val_936050) >>> 0);
    res_936051 = ((res_936051 + (res_936051 << 10)) >>> 0);
    res_936051 = (res_936051 ^ ((res_936051 >>> 0) >>> 6));
    result_936048 = (res_936051|0);

  return result_936048;

}
function HEX21HEX24_936079(h_936081) {
  var result_936082 = 0;

    var h_936083 = (h_936081 >>> 0);
    var res_936091 = ((h_936083 + (h_936083 << 3)) >>> 0);
    res_936091 = (res_936091 ^ ((res_936091 >>> 0) >>> 11));
    res_936091 = ((res_936091 + (res_936091 << 15)) >>> 0);
    result_936082 = (res_936091|0);

  return result_936082;

}
function hash_11531109(a_11531111) {
  var result_11531112 = 0;

    var h_11531113 = 0;
    h_11531113 = HEX21HEX26_936044(h_11531113, ((a_11531111)|0));
    result_11531112 = HEX21HEX24_936079(h_11531113);

  return result_11531112;

}
function is_filled_1004018(hcode_1004020) {
  var result_1004021 = false;

    result_1004021 = !((hcode_1004020 == 0));

  return result_1004021;

}
function next_try_1005014(h_1005016, max_hash_1005017) {
  var result_1005018 = 0;

    result_1005018 = (addInt(h_1005016, 1) & max_hash_1005017);

  return result_1005018;

}
function raw_get_13350333(t_13350337, key_13350338, hc_13350339, hc_13350339_Idx) {
            var Tmp3;

  var result_13350340 = 0;

  BeforeRet: do {
    hc_13350339[hc_13350339_Idx] = hash_11531109(key_13350338);
    if ((hc_13350339[hc_13350339_Idx] == 0)) {
    hc_13350339[hc_13350339_Idx] = 314159265;
    }
    
    if (((t_13350337.data != null ? t_13350337.data.length : 0) == 0)) {
    result_13350340 = -1;
    break BeforeRet;
    }
    
    var h_13360138 = (hc_13350339[hc_13350339_Idx] & (t_13350337.data != null ? (t_13350337.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_1004018(t_13350337.data[chckIndx(h_13360138, 0, (t_13350337.data != null ? t_13350337.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_13350337.data[chckIndx(h_13360138, 0, (t_13350337.data != null ? t_13350337.data.length : 0)+0-1)-0].Field0 == hc_13350339[hc_13350339_Idx])) Tmp3 = false; else {              Tmp3 = (t_13350337.data[chckIndx(h_13360138, 0, (t_13350337.data != null ? t_13350337.data.length : 0)+0-1)-0].Field1 == key_13350338);            }          if (Tmp3) {
          result_13350340 = h_13360138;
          break BeforeRet;
          }
          
          h_13360138 = next_try_1005014(h_13360138, (t_13350337.data != null ? (t_13350337.data.length-1) : -1));
        }
    } while(false);
    result_13350340 = subInt(-1, h_13360138);
  } while (false);

  return result_13350340;

}
function has_key_13350324(t_13350329, key_13350330) {
  var result_13350331 = false;

    var hc_13350332 = [0];
    result_13350331 = (0 <= raw_get_13350333(t_13350329, key_13350330, hc_13350332, 0));

  return result_13350331;

}
function to_nico_keycode_13297221(x_13297223) {
      var Tmp1;

  var result_13297224 = 0;

  BeforeRet: do {
    var x_13297225 = x_13297223;
      if (!(65 <= x_13297225)) Tmp1 = false; else {        Tmp1 = (x_13297225 <= 90);      }    if (Tmp1) {
    x_13297225 = addInt(x_13297225, 32);
    }
    
    result_13297224 = chckRange(x_13297225, 0, 1073742110);
    break BeforeRet;
  } while (false);

  return result_13297224;

}
function HEX5BHEX5D_13360780(t_13360786, key_13360787) {
  var result_13360789 = null;
  var result_13360789_Idx = 0;

    var hcHEX60gensym1005414_13360790 = [0];
    var indexHEX60gensym1005415_13360799 = raw_get_13350333(t_13360786, key_13360787, hcHEX60gensym1005414_13360790, 0);
    if ((0 <= indexHEX60gensym1005415_13360799)) {
    result_13360789 = t_13360786.data[chckIndx(indexHEX60gensym1005415_13360799, 0, (t_13360786.data != null ? t_13360786.data.length : 0)+0-1)-0]; result_13360789_Idx = "Field2";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(reprEnum(key_13360787, NTI10687506) || []), parent: null, m_type: NTI6245, name: null, trace: null, up: null}, "KeyError");
    }
    

  return [result_13360789, result_13360789_Idx];

}
function must_rehash_13415601(t_13415604) {
  var result_13415605 = false;

    if (!((t_13415604.counter < (t_13415604.data != null ? t_13415604.data.length : 0)))) {
    failed_assert_impl_102680(makeNimstrLit("hashcommon.nim(33, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_13415605 = ((mulInt((t_13415604.data != null ? t_13415604.data.length : 0), 2) < mulInt(t_13415604.counter, 3)) || (subInt((t_13415604.data != null ? t_13415604.data.length : 0), t_13415604.counter) < 4));

  return result_13415605;

}
function raw_insert_13441108(t_13441114, data_13441117, data_13441117_Idx, key_13441118, val_13441119, hc_13441120, h_13441121) {
    data_13441117[data_13441117_Idx][chckIndx(h_13441121, 0, (data_13441117[data_13441117_Idx] != null ? data_13441117[data_13441117_Idx].length : 0)+0-1)-0].Field1 = key_13441118;
    data_13441117[data_13441117_Idx][chckIndx(h_13441121, 0, (data_13441117[data_13441117_Idx] != null ? data_13441117[data_13441117_Idx].length : 0)+0-1)-0].Field2 = val_13441119;
    data_13441117[data_13441117_Idx][chckIndx(h_13441121, 0, (data_13441117[data_13441117_Idx] != null ? data_13441117[data_13441117_Idx].length : 0)+0-1)-0].Field0 = hc_13441120;

  
}
function enlarge_13440161(t_13440167) {
    var n_13440175 = null;
    n_13440175 = new Array(chckRange(mulInt((t_13440167.data != null ? t_13440167.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_13440167.data != null ? t_13440167.data.length : 0), 2), 0, 2147483647);++i) {n_13440175[i]={Field0: 0, Field1: 0, Field2: 0};}    var Tmp1 = t_13440167.data; t_13440167.data = n_13440175; n_13440175 = Tmp1;    L2: do {
      var i_13440334 = 0;
      var colontmp__16810170 = 0;
      colontmp__16810170 = (n_13440175 != null ? (n_13440175.length-1) : -1);
      var res_16810175 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_16810175 <= colontmp__16810170)) break L4;
            i_13440334 = res_16810175;
            var eh_13440483 = n_13440175[chckIndx(i_13440334, 0, (n_13440175 != null ? n_13440175.length : 0)+0-1)-0].Field0;
            if (is_filled_1004018(eh_13440483)) {
            var j_13440490 = (eh_13440483 & (t_13440167.data != null ? (t_13440167.data.length-1) : -1));
            L5: do {
                L6: while (true) {
                if (!is_filled_1004018(t_13440167.data[chckIndx(j_13440490, 0, (t_13440167.data != null ? t_13440167.data.length : 0)+0-1)-0].Field0)) break L6;
                  j_13440490 = next_try_1005014(j_13440490, (t_13440167.data != null ? (t_13440167.data.length-1) : -1));
                }
            } while(false);
            raw_insert_13441108(t_13440167, t_13440167, "data", n_13440175[chckIndx(i_13440334, 0, (n_13440175 != null ? n_13440175.length : 0)+0-1)-0].Field1, n_13440175[chckIndx(i_13440334, 0, (n_13440175 != null ? n_13440175.length : 0)+0-1)-0].Field2, eh_13440483, j_13440490);
            }
            
            res_16810175 = addInt(res_16810175, 1);
          }
      } while(false);
    } while(false);

  
}
function raw_get_known_hc_13441593(t_13441597, key_13441598, hc_13441599) {
  var result_13441600 = 0;

  BeforeRet: do {
    if (((t_13441597.data != null ? t_13441597.data.length : 0) == 0)) {
    result_13441600 = -1;
    break BeforeRet;
    }
    
    var h_13445138 = (hc_13441599 & (t_13441597.data != null ? (t_13441597.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_1004018(t_13441597.data[chckIndx(h_13445138, 0, (t_13441597.data != null ? t_13441597.data.length : 0)+0-1)-0].Field0)) break L2;
          if (((t_13441597.data[chckIndx(h_13445138, 0, (t_13441597.data != null ? t_13441597.data.length : 0)+0-1)-0].Field0 == hc_13441599) && (t_13441597.data[chckIndx(h_13445138, 0, (t_13441597.data != null ? t_13441597.data.length : 0)+0-1)-0].Field1 == key_13441598))) {
          result_13441600 = h_13445138;
          break BeforeRet;
          }
          
          h_13445138 = next_try_1005014(h_13445138, (t_13441597.data != null ? (t_13441597.data.length-1) : -1));
        }
    } while(false);
    result_13441600 = subInt(-1, h_13445138);
  } while (false);

  return result_13441600;

}
function HEX5BHEX5DHEX3D_13365137(t_13365143, key_13365144, val_13365145) {
    if (((t_13365143.data != null ? t_13365143.data.length : 0) == 0)) {
    if (!(is_power_of_two_890029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_13365143.counter = 0;
    t_13365143.data = new Array(64); for (var i=0;i<64;++i) {t_13365143.data[i]={Field0: 0, Field1: 0, Field2: 0};}    }
    
    var hc_13390601 = [0];
    var index_13390610 = raw_get_13350333(t_13365143, key_13365144, hc_13390601, 0);
    if ((0 <= index_13390610)) {
    t_13365143.data[chckIndx(index_13390610, 0, (t_13365143.data != null ? t_13365143.data.length : 0)+0-1)-0].Field2 = val_13365145;
    }
    else {
      if (((t_13365143.data != null ? t_13365143.data.length : 0) == 0)) {
      if (!(is_power_of_two_890029(64))) {
      failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
      }
      
      t_13365143.counter = 0;
      t_13365143.data = new Array(64); for (var i=0;i<64;++i) {t_13365143.data[i]={Field0: 0, Field1: 0, Field2: 0};}      }
      
      if (must_rehash_13415601(t_13365143)) {
      enlarge_13440161(t_13365143);
      index_13390610 = raw_get_known_hc_13441593(t_13365143, key_13365144, hc_13390601[0]);
      }
      
      index_13390610 = subInt(-1, index_13390610);
      raw_insert_13441108(t_13365143, t_13365143, "data", key_13365144, val_13365145, hc_13390601[0], index_13390610);
      t_13365143.counter = addInt(t_13365143.counter, 1);
    }
    

  
}
function create_window_13310305(title_13310307, w_13310308, h_13310309, scale_13310310, fullscreen_13310311) {
    function HEX3Aanonymous_13310312(e_13310315) {
        resize_13300340(window.innerWidth, window.innerHeight);

      
    }
    function HEX3Aanonymous_13310329(e_13310332) {
        var e_13310333 = e_13310332;
        mouse_detected_12170344[0] = true;
        var scale_13310334 = (canvas_13297016[0].clientWidth / screen_width_12170232[0]);
        mouse_x_12170345[0] = (((e_13310333.offsetX / scale_13310334))|0);
        mouse_y_12170346[0] = (((e_13310333.offsetY / scale_13310334))|0);
        mouse_raw_x_12170347[0] = e_13310333.offsetX;
        mouse_raw_y_12170348[0] = e_13310333.offsetY;

      
    }
    function HEX3Aanonymous_13310378(e_13310381) {
        var e_13310382 = e_13310381;
        mouse_buttons_down_12170358[0][chckIndx(e_13310382.button, 0, (mouse_buttons_down_12170358[0] != null ? mouse_buttons_down_12170358[0].length : 0)+0-1)-0] = true;
        e_13310382.preventDefault();

      
    }
    function HEX3Aanonymous_13310396(e_13310399) {
        var e_13310400 = e_13310399;
        mouse_buttons_down_12170358[0][chckIndx(e_13310400.button, 0, (mouse_buttons_down_12170358[0] != null ? mouse_buttons_down_12170358[0].length : 0)+0-1)-0] = false;
        e_13310400.preventDefault();

      
    }
    function HEX3Aanonymous_13310414(e_13310417) {
        e_13310417.preventDefault();

      
    }
    function HEX3Aanonymous_13310431(e_13310434) {
        if ((fullscreen_13310311 && !(requested_fullscreen_13310291[0]))) {
        canvas_13297016[0].requestFullscreen();
        }
        
        var e_13310435 = e_13310434;
        e_13310435.preventDefault();
        var scale_13310436 = (canvas_13297016[0].clientWidth / screen_width_12170232[0]);
        if (false) {
        mouse_buttons_down_12170358[0][chckIndx(0, 0, (mouse_buttons_down_12170358[0] != null ? mouse_buttons_down_12170358[0].length : 0)+0-1)-0] = true;
        mouse_x_12170345[0] = (((subInt(e_13310435.touches[chckIndx(0, 0, (e_13310435.touches != null ? e_13310435.touches.length : 0)+0-1)-0].pageX, e_13310435.target.offsetLeft) / scale_13310436))|0);
        mouse_y_12170346[0] = (((subInt(e_13310435.touches[chckIndx(0, 0, (e_13310435.touches != null ? e_13310435.touches.length : 0)+0-1)-0].pageY, e_13310435.target.offsetTop) / scale_13310436))|0);
        }
        
        L1: do {
          var t_13320214 = null;
          var i_16810071 = 0;
          var l_16810072 = (e_13310435.changedTouches != null ? e_13310435.changedTouches.length : 0);
          L2: do {
              L3: while (true) {
              if (!(i_16810071 < l_16810072)) break L3;
                t_13320214 = e_13310435.changedTouches[chckIndx(i_16810071, 0, (e_13310435.changedTouches != null ? e_13310435.changedTouches.length : 0)+0-1)-0];
                var sx_13320215 = subInt(t_13320214.pageX, e_13310435.target.offsetLeft);
                var sy_13320216 = subInt(t_13320214.pageY, e_13310435.target.offsetTop);
                if (touches_12170155[0] != null) { touches_12170155[0].push({state: 0, id: t_13320214.identifier, sx: sx_13320215, sy: sy_13320216, x: (((sx_13320215 / scale_13310436))|0), y: (((sy_13320216 / scale_13310436))|0), xrel: 0.0, yrel: 0.0, xrelraw: 0.0, yrelraw: 0.0}); } else { touches_12170155[0] = [{state: 0, id: t_13320214.identifier, sx: sx_13320215, sy: sy_13320216, x: (((sx_13320215 / scale_13310436))|0), y: (((sy_13320216 / scale_13310436))|0), xrel: 0.0, yrel: 0.0, xrelraw: 0.0, yrelraw: 0.0}]; };
                i_16810071 = addInt(i_16810071, 1);
                if (!(((e_13310435.changedTouches != null ? e_13310435.changedTouches.length : 0) == l_16810072))) {
                failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);

      
    }
    function HEX3Aanonymous_13320328(e_13320331) {
        var e_13320332 = e_13320331;
        e_13320332.preventDefault();
        var scale_13320333 = (canvas_13297016[0].clientWidth / screen_width_12170232[0]);
        if (false) {
        mouse_x_12170345[0] = (((subInt(e_13320332.touches[chckIndx(0, 0, (e_13320332.touches != null ? e_13320332.touches.length : 0)+0-1)-0].pageX, e_13320332.target.offsetLeft) / scale_13320333))|0);
        mouse_y_12170346[0] = (((subInt(e_13320332.touches[chckIndx(0, 0, (e_13320332.touches != null ? e_13320332.touches.length : 0)+0-1)-0].pageY, e_13320332.target.offsetTop) / scale_13320333))|0);
        }
        
        L1: do {
          var t_13320340 = null;
          var i_16810106 = 0;
          var l_16810107 = (e_13320332.changedTouches != null ? e_13320332.changedTouches.length : 0);
          L2: do {
              L3: while (true) {
              if (!(i_16810106 < l_16810107)) break L3;
                t_13320340 = e_13320332.changedTouches[chckIndx(i_16810106, 0, (e_13320332.changedTouches != null ? e_13320332.changedTouches.length : 0)+0-1)-0];
                L4: do {
                  var et_13330215 = null;
                  var i_16810103 = 0;
                  var l_16810104 = (touches_12170155[0] != null ? touches_12170155[0].length : 0);
                  L5: do {
                      L6: while (true) {
                      if (!(i_16810103 < l_16810104)) break L6;
                        et_13330215 = touches_12170155[0][chckIndx(i_16810103, 0, (touches_12170155[0] != null ? touches_12170155[0].length : 0)+0-1)-0];
                        if ((et_13330215.id == t_13320340.identifier)) {
                        if (!(contains_13335120([0, 3, 4], et_13330215.state))) {
                        et_13330215.state = 2;
                        }
                        
                        var sx_13335202 = subInt(t_13320340.pageX, e_13320332.target.offsetLeft);
                        var sy_13335203 = subInt(t_13320340.pageY, e_13320332.target.offsetTop);
                        et_13330215.xrelraw = (sx_13335202 - et_13330215.sx);
                        et_13330215.yrelraw = (sy_13335203 - et_13330215.sy);
                        et_13330215.xrel = ((sx_13335202 - et_13330215.sx) / scale_13320333);
                        et_13330215.yrel = ((sy_13335203 - et_13330215.sy) / scale_13320333);
                        et_13330215.sx = sx_13335202;
                        et_13330215.sy = sy_13335203;
                        et_13330215.x = (((sx_13335202 / scale_13320333))|0);
                        et_13330215.y = (((sy_13335203 / scale_13320333))|0);
                        break L4;
                        }
                        
                        i_16810103 = addInt(i_16810103, 1);
                        if (!(((touches_12170155[0] != null ? touches_12170155[0].length : 0) == l_16810104))) {
                        failed_assert_impl_102680(makeNimstrLit("iterators.nim(198, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  } while(false);
                } while(false);
                i_16810106 = addInt(i_16810106, 1);
                if (!(((e_13320332.changedTouches != null ? e_13320332.changedTouches.length : 0) == l_16810107))) {
                failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);

      
    }
    function HEX3Aanonymous_13335271(e_13335274) {
        var e_13335275 = e_13335274;
        var scale_13335276 = (canvas_13297016[0].clientWidth / screen_width_12170232[0]);
        e_13335275.preventDefault();
        if (false) {
        mouse_buttons_down_12170358[0][chckIndx(0, 0, (mouse_buttons_down_12170358[0] != null ? mouse_buttons_down_12170358[0].length : 0)+0-1)-0] = false;
        }
        
        L1: do {
          var t_13335283 = null;
          var i_16810124 = 0;
          var l_16810125 = (e_13335275.changedTouches != null ? e_13335275.changedTouches.length : 0);
          L2: do {
              L3: while (true) {
              if (!(i_16810124 < l_16810125)) break L3;
                t_13335283 = e_13335275.changedTouches[chckIndx(i_16810124, 0, (e_13335275.changedTouches != null ? e_13335275.changedTouches.length : 0)+0-1)-0];
                L4: do {
                  var et_13335294 = null;
                  var i_16810121 = 0;
                  var l_16810122 = (touches_12170155[0] != null ? touches_12170155[0].length : 0);
                  L5: do {
                      L6: while (true) {
                      if (!(i_16810121 < l_16810122)) break L6;
                        et_13335294 = touches_12170155[0][chckIndx(i_16810121, 0, (touches_12170155[0] != null ? touches_12170155[0].length : 0)+0-1)-0];
                        if ((et_13335294.id == t_13335283.identifier)) {
                        et_13335294.state = 3;
                        var sx_13335295 = subInt(t_13335283.pageX, e_13335275.target.offsetLeft);
                        var sy_13335296 = subInt(t_13335283.pageY, e_13335275.target.offsetTop);
                        et_13335294.sx = sx_13335295;
                        et_13335294.sy = sy_13335296;
                        et_13335294.xrelraw = (sx_13335295 - et_13335294.sx);
                        et_13335294.yrelraw = (sy_13335296 - et_13335294.sy);
                        et_13335294.xrel = ((sx_13335295 - et_13335294.sx) / scale_13335276);
                        et_13335294.yrel = ((sy_13335296 - et_13335294.sy) / scale_13335276);
                        et_13335294.x = (((sx_13335295 / scale_13335276))|0);
                        et_13335294.y = (((sy_13335296 / scale_13335276))|0);
                        break L4;
                        }
                        
                        i_16810121 = addInt(i_16810121, 1);
                        if (!(((touches_12170155[0] != null ? touches_12170155[0].length : 0) == l_16810122))) {
                        failed_assert_impl_102680(makeNimstrLit("iterators.nim(198, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  } while(false);
                } while(false);
                i_16810124 = addInt(i_16810124, 1);
                if (!(((e_13335275.changedTouches != null ? e_13335275.changedTouches.length : 0) == l_16810125))) {
                failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);

      
    }
    function HEX3Aanonymous_13335310(e_13335313) {
        var e_13335314 = e_13335313;
        e_13335314.preventDefault();
        var scale_13335315 = (canvas_13297016[0].clientWidth / screen_width_12170232[0]);
        if (false) {
        mouse_buttons_down_12170358[0][chckIndx(0, 0, (mouse_buttons_down_12170358[0] != null ? mouse_buttons_down_12170358[0].length : 0)+0-1)-0] = false;
        }
        
        L1: do {
          var t_13335322 = null;
          var i_16810142 = 0;
          var l_16810143 = (e_13335314.changedTouches != null ? e_13335314.changedTouches.length : 0);
          L2: do {
              L3: while (true) {
              if (!(i_16810142 < l_16810143)) break L3;
                t_13335322 = e_13335314.changedTouches[chckIndx(i_16810142, 0, (e_13335314.changedTouches != null ? e_13335314.changedTouches.length : 0)+0-1)-0];
                L4: do {
                  var et_13335333 = null;
                  var i_16810139 = 0;
                  var l_16810140 = (touches_12170155[0] != null ? touches_12170155[0].length : 0);
                  L5: do {
                      L6: while (true) {
                      if (!(i_16810139 < l_16810140)) break L6;
                        et_13335333 = touches_12170155[0][chckIndx(i_16810139, 0, (touches_12170155[0] != null ? touches_12170155[0].length : 0)+0-1)-0];
                        if ((et_13335333.id == t_13335322.identifier)) {
                        et_13335333.state = 4;
                        var sx_13335334 = subInt(t_13335322.pageX, e_13335314.target.offsetLeft);
                        var sy_13335335 = subInt(t_13335322.pageY, e_13335314.target.offsetTop);
                        et_13335333.xrelraw = subInt(to_pint_12170119(sx_13335334), to_pint_12170102(et_13335333.sx));
                        et_13335333.yrelraw = subInt(to_pint_12170119(sy_13335335), to_pint_12170102(et_13335333.sy));
                        et_13335333.xrel = (subInt(to_pint_12170119(sx_13335334), to_pint_12170102(et_13335333.sx)) / scale_13335315);
                        et_13335333.yrel = (subInt(to_pint_12170119(sy_13335335), to_pint_12170102(et_13335333.sy)) / scale_13335315);
                        et_13335333.x = (((sx_13335334 / scale_13335315))|0);
                        et_13335333.y = (((sy_13335335 / scale_13335315))|0);
                        break L4;
                        }
                        
                        i_16810139 = addInt(i_16810139, 1);
                        if (!(((touches_12170155[0] != null ? touches_12170155[0].length : 0) == l_16810140))) {
                        failed_assert_impl_102680(makeNimstrLit("iterators.nim(198, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  } while(false);
                } while(false);
                i_16810142 = addInt(i_16810142, 1);
                if (!(((e_13335314.changedTouches != null ? e_13335314.changedTouches.length : 0) == l_16810143))) {
                failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);

      
    }
    function HEX3Aanonymous_13340009(event_13340012) {
          var Tmp7;
            var Tmp8;

        var event_13340013 = event_13340012;
        L1: do {
          var btn_13340088 = 0;
          var keys_13340089 = null;
          var i_16810157 = 0;
          if ((i_16810157 <= 15)) {
          L2: do {
              L3: while (true) {
              if (!true) break L3;
                btn_13340088 = i_16810157;
                keys_13340089 = keymap_12170244[0][chckIndx(i_16810157, 0, (keymap_12170244[0] != null ? keymap_12170244[0].length : 0)+0-1)-0];
                L4: do {
                  var key_13350214 = 0;
                  var i_16810150 = 0;
                  var l_16810151 = (keys_13340089 != null ? keys_13340089.length : 0);
                  L5: do {
                      L6: while (true) {
                      if (!(i_16810150 < l_16810151)) break L6;
                        key_13350214 = keys_13340089[chckIndx(i_16810150, 0, (keys_13340089 != null ? keys_13340089.length : 0)+0-1)-0];
                        if ((event_13340013.keyCode == key_13350214)) {
                        if ((controllers_12170254[0][chckIndx(0, 0, (controllers_12170254[0] != null ? controllers_12170254[0].length : 0)+0-1)-0].buttons[chckIndx(btn_13340088, 0, (controllers_12170254[0][chckIndx(0, 0, (controllers_12170254[0] != null ? controllers_12170254[0].length : 0)+0-1)-0].buttons != null ? controllers_12170254[0][chckIndx(0, 0, (controllers_12170254[0] != null ? controllers_12170254[0].length : 0)+0-1)-0].buttons.length : 0)+0-1)-0] <= 0)) {
                        set_button_state_11625015(controllers_12170254[0][chckIndx(0, 0, (controllers_12170254[0] != null ? controllers_12170254[0].length : 0)+0-1)-0], btn_13340088, true);
                        }
                        
                        event_13340013.preventDefault();
                        }
                        
                        i_16810150 = addInt(i_16810150, 1);
                        if (!(((keys_13340089 != null ? keys_13340089.length : 0) == l_16810151))) {
                        failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  } while(false);
                } while(false);
                if ((15 <= i_16810157)) {
                break L2;
                }
                
                i_16810157 = addInt(i_16810157, 1);
              }
          } while(false);
          }
          
        } while(false);
          if (!(has_key_13350324(keys_down_12150629[0], to_nico_keycode_13297221(event_13340013.keyCode)))) Tmp7 = true; else {            Tmp7 = ((Tmp8 = HEX5BHEX5D_13360780(keys_down_12150629[0], to_nico_keycode_13297221(event_13340013.keyCode)), Tmp8)[0][Tmp8[1]] == 0);          }        if (Tmp7) {
        HEX5BHEX5DHEX3D_13365137(keys_down_12150629[0], to_nico_keycode_13297221(event_13340013.keyCode), 1);
        }
        

      
    }
    function HEX3Aanonymous_13445681(event_13445684) {
        var event_13445685 = event_13445684;
        L1: do {
          var btn_13445696 = 0;
          var keys_13445697 = null;
          var i_16810186 = 0;
          if ((i_16810186 <= 15)) {
          L2: do {
              L3: while (true) {
              if (!true) break L3;
                btn_13445696 = i_16810186;
                keys_13445697 = keymap_12170244[0][chckIndx(i_16810186, 0, (keymap_12170244[0] != null ? keymap_12170244[0].length : 0)+0-1)-0];
                L4: do {
                  var key_13445704 = 0;
                  var i_16810183 = 0;
                  var l_16810184 = (keys_13445697 != null ? keys_13445697.length : 0);
                  L5: do {
                      L6: while (true) {
                      if (!(i_16810183 < l_16810184)) break L6;
                        key_13445704 = keys_13445697[chckIndx(i_16810183, 0, (keys_13445697 != null ? keys_13445697.length : 0)+0-1)-0];
                        if ((event_13445685.keyCode == key_13445704)) {
                        set_button_state_11625015(controllers_12170254[0][chckIndx(0, 0, (controllers_12170254[0] != null ? controllers_12170254[0].length : 0)+0-1)-0], btn_13445696, false);
                        event_13445685.preventDefault();
                        }
                        
                        i_16810183 = addInt(i_16810183, 1);
                        if (!(((keys_13445697 != null ? keys_13445697.length : 0) == l_16810184))) {
                        failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  } while(false);
                } while(false);
                if ((15 <= i_16810186)) {
                break L2;
                }
                
                i_16810186 = addInt(i_16810186, 1);
              }
          } while(false);
          }
          
        } while(false);
        HEX5BHEX5DHEX3D_13365137(keys_down_12150629[0], to_nico_keycode_13297221(event_13445685.keyCode), 0);

      
    }

    target_screen_width_12170224[0] = w_13310308;
    target_screen_height_12170227[0] = h_13310309;
    document.title = toJSStr(title_13310307);
    if (fixed_screen_size_12170228[0]) {
    resize_canvas_13300344(w_13310308, h_13310309, scale_13310310);
    }
    else {
    resize_13300340(window.innerWidth, window.innerHeight);
    }
    
    window.addEventListener("resize", HEX3Aanonymous_13310312, false);
    canvas_13297016[0].onmousemove = HEX3Aanonymous_13310329;
    canvas_13297016[0].onmousedown = HEX3Aanonymous_13310378;
    canvas_13297016[0].onmouseup = HEX3Aanonymous_13310396;
    canvas_13297016[0].addEventListener("contextmenu", HEX3Aanonymous_13310414, false);
    canvas_13297016[0].addEventListener("touchstart", HEX3Aanonymous_13310431, false);
    canvas_13297016[0].addEventListener("touchmove", HEX3Aanonymous_13320328, false);
    canvas_13297016[0].addEventListener("touchend", HEX3Aanonymous_13335271, false);
    canvas_13297016[0].addEventListener("touchcancel", HEX3Aanonymous_13335310, false);
    var holder_13335349 = document.getElementById("nicogame");
    if (!((holder_13335349 == null))) {
    holder_13335349.appendChild(canvas_13297016[0]);
    }
    
    frame_12170311[0] = 0;
    window.onkeydown = HEX3Aanonymous_13340009;
    window.onkeyup = HEX3Aanonymous_13445681;

  
}
function create_window_15290171(title_15290173, w_15290174, h_15290175, scale_15290176, fullscreen_15290177) {
    create_window_13310305(title_15290173, w_15290174, h_15290175, scale_15290176, fullscreen_15290177);
    clip_13916347();

  
}
function present_13300349() {
    L1: do {
      var i_13310245 = 0;
      var v_13310246 = null;
      var v_13310246_Idx = 0;
      var i_16810231 = 0;
      var l_16810232 = (sw_canvas_12170208[0].data != null ? sw_canvas_12170208[0].data.length : 0);
      L2: do {
          L3: while (true) {
          if (!(i_16810231 < l_16810232)) break L3;
            i_13310245 = i_16810231;
            v_13310246 = sw_canvas_12170208[0].data; v_13310246_Idx = chckIndx(i_16810231, 0, (sw_canvas_12170208[0].data != null ? sw_canvas_12170208[0].data.length : 0)+0-1)-0;
            sw_canvas32_13297015[0].data[chckIndx(mulInt(i_13310245, 4), 0, (sw_canvas32_13297015[0].data != null ? sw_canvas32_13297015[0].data.length : 0)+0-1)-0] = current_palette_12170153[0].Field1[chckIndx(palette_map_display_12170321[0][chckIndx(v_13310246[v_13310246_Idx], 0, (palette_map_display_12170321[0] != null ? palette_map_display_12170321[0].length : 0)+0-1)-0], 0, (current_palette_12170153[0].Field1 != null ? current_palette_12170153[0].Field1.length : 0)+0-1)-0]["Field0"];
            sw_canvas32_13297015[0].data[chckIndx(addInt(mulInt(i_13310245, 4), 1), 0, (sw_canvas32_13297015[0].data != null ? sw_canvas32_13297015[0].data.length : 0)+0-1)-0] = current_palette_12170153[0].Field1[chckIndx(palette_map_display_12170321[0][chckIndx(v_13310246[v_13310246_Idx], 0, (palette_map_display_12170321[0] != null ? palette_map_display_12170321[0].length : 0)+0-1)-0], 0, (current_palette_12170153[0].Field1 != null ? current_palette_12170153[0].Field1.length : 0)+0-1)-0]["Field1"];
            sw_canvas32_13297015[0].data[chckIndx(addInt(mulInt(i_13310245, 4), 2), 0, (sw_canvas32_13297015[0].data != null ? sw_canvas32_13297015[0].data.length : 0)+0-1)-0] = current_palette_12170153[0].Field1[chckIndx(palette_map_display_12170321[0][chckIndx(v_13310246[v_13310246_Idx], 0, (palette_map_display_12170321[0] != null ? palette_map_display_12170321[0].length : 0)+0-1)-0], 0, (current_palette_12170153[0].Field1 != null ? current_palette_12170153[0].Field1.length : 0)+0-1)-0]["Field2"];
            sw_canvas32_13297015[0].data[chckIndx(addInt(mulInt(i_13310245, 4), 3), 0, (sw_canvas32_13297015[0].data != null ? sw_canvas32_13297015[0].data.length : 0)+0-1)-0] = 255;
            i_16810231 = addInt(i_16810231, 1);
            if (!(((sw_canvas_12170208[0].data != null ? sw_canvas_12170208[0].data.length : 0) == l_16810232))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(132, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    ctx_13297014[0].putImageData(sw_canvas32_13297015[0], 0.0, 0.0);

  
}
function update_11535262(self_11535264) {
              var Tmp7;
              var Tmp8;

    L1: do {
      var i_11535436 = 0;
      var res_16810238 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_16810238 <= 15)) break L3;
            i_11535436 = chckRange(res_16810238, 0, 15);
            if ((self_11535264.kind == 1)) {
            if ((i_11535436 == 9)) {
            if ((self_11535264.deadzone < self_11535264.axes[chckIndx(4, 0, (self_11535264.axes != null ? self_11535264.axes.length : 0)+0-1)-0].Field0)) {
            self_11535264.buttons[chckIndx(i_11535436, 0, (self_11535264.buttons != null ? self_11535264.buttons.length : 0)+0-1)-0] = addInt(self_11535264.buttons[chckIndx(i_11535436, 0, (self_11535264.buttons != null ? self_11535264.buttons.length : 0)+0-1)-0], 1);
            }
            else {
              self_11535264.buttons[chckIndx(i_11535436, 0, (self_11535264.buttons != null ? self_11535264.buttons.length : 0)+0-1)-0] = 0;
            }
            
            }
            else {
            if ((i_11535436 == 12)) {
            if ((self_11535264.deadzone < self_11535264.axes[chckIndx(5, 0, (self_11535264.axes != null ? self_11535264.axes.length : 0)+0-1)-0].Field0)) {
            self_11535264.buttons[chckIndx(i_11535436, 0, (self_11535264.buttons != null ? self_11535264.buttons.length : 0)+0-1)-0] = addInt(self_11535264.buttons[chckIndx(i_11535436, 0, (self_11535264.buttons != null ? self_11535264.buttons.length : 0)+0-1)-0], 1);
            }
            else {
              self_11535264.buttons[chckIndx(i_11535436, 0, (self_11535264.buttons != null ? self_11535264.buttons.length : 0)+0-1)-0] = 0;
            }
            
            }
            }
            }
            
            if ((self_11535264.buttons[chckIndx(i_11535436, 0, (self_11535264.buttons != null ? self_11535264.buttons.length : 0)+0-1)-0] == -1)) {
            self_11535264.buttons[chckIndx(i_11535436, 0, (self_11535264.buttons != null ? self_11535264.buttons.length : 0)+0-1)-0] = 0;
            }
            else {
            if ((self_11535264.buttons[chckIndx(i_11535436, 0, (self_11535264.buttons != null ? self_11535264.buttons.length : 0)+0-1)-0] == -2)) {
            self_11535264.buttons[chckIndx(i_11535436, 0, (self_11535264.buttons != null ? self_11535264.buttons.length : 0)+0-1)-0] = -1;
            }
            }
            if ((1 <= self_11535264.buttons[chckIndx(i_11535436, 0, (self_11535264.buttons != null ? self_11535264.buttons.length : 0)+0-1)-0])) {
            self_11535264.buttons[chckIndx(i_11535436, 0, (self_11535264.buttons != null ? self_11535264.buttons.length : 0)+0-1)-0] = addInt(self_11535264.buttons[chckIndx(i_11535436, 0, (self_11535264.buttons != null ? self_11535264.buttons.length : 0)+0-1)-0], 1);
            }
            
            res_16810238 = addInt(res_16810238, 1);
          }
      } while(false);
    } while(false);
    L4: do {
      var i_11550236 = 0;
      var res_16810246 = 0;
      L5: do {
          L6: while (true) {
          if (!(res_16810246 <= 5)) break L6;
            i_11550236 = chckRange(res_16810246, 0, 5);
              if (!(self_11535264.axes[chckIndx(i_11550236, 0, (self_11535264.axes != null ? self_11535264.axes.length : 0)+0-1)-0].Field1 < -(self_11535264.deadzone))) Tmp7 = false; else {                Tmp7 = (self_11535264.axes[chckIndx(i_11550236, 0, (self_11535264.axes != null ? self_11535264.axes.length : 0)+0-1)-0].Field0 < -(self_11535264.deadzone));              }            if (Tmp7) {
            self_11535264.axes[chckIndx(i_11550236, 0, (self_11535264.axes != null ? self_11535264.axes.length : 0)+0-1)-0].Field2 = addInt(self_11535264.axes[chckIndx(i_11550236, 0, (self_11535264.axes != null ? self_11535264.axes.length : 0)+0-1)-0].Field2, 1);
            }
            else {
              if (!(self_11535264.deadzone < self_11535264.axes[chckIndx(i_11550236, 0, (self_11535264.axes != null ? self_11535264.axes.length : 0)+0-1)-0].Field1)) Tmp8 = false; else {                Tmp8 = (self_11535264.deadzone < self_11535264.axes[chckIndx(i_11550236, 0, (self_11535264.axes != null ? self_11535264.axes.length : 0)+0-1)-0].Field0);              }            if (Tmp8) {
            self_11535264.axes[chckIndx(i_11550236, 0, (self_11535264.axes != null ? self_11535264.axes.length : 0)+0-1)-0].Field2 = addInt(self_11535264.axes[chckIndx(i_11550236, 0, (self_11535264.axes != null ? self_11535264.axes.length : 0)+0-1)-0].Field2, 1);
            }
            else {
              self_11535264.axes[chckIndx(i_11550236, 0, (self_11535264.axes != null ? self_11535264.axes.length : 0)+0-1)-0].Field2 = 0;
            }
            }
            res_16810246 = addInt(res_16810246, 1);
          }
      } while(false);
    } while(false);

  
}
function len_13555139(t_13555144) {
  var result_13555145 = 0;

    result_13555145 = t_13555144.counter;

  return result_13555145;

}
function stop_13455173(self_13455176) {
    var Tmp2;

    if (!((self_13455176.source == null))) {
    self_13455176.source.disconnect();
++excHandler;
    Tmp2 = framePtr;
    try {
    self_13455176.source.stop();
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
    framePtr = Tmp2;
    lastJSError = prevJSError;
    } finally {
    framePtr = Tmp2;
    }
    self_13455176.source = null;
    }
    
    self_13455176.kind = 0;

  
}
function lerp_13465007(a_13465010, b_13465011, t_13465012) {
  var result_13465013 = 0.0;

  BeforeRet: do {
    result_13465013 = (a_13465010 + ((b_13465011 - a_13465010) * t_13465012));
    break BeforeRet;
  } while (false);

  return result_13465013;

}
function to_pint_12170085(x_12170087) {
  var result_12170088 = 0;

  BeforeRet: do {
    result_12170088 = Math.floor(x_12170087);
    break BeforeRet;
  } while (false);

  return result_12170088;

}
function clamp_13515015(x_13515018, a_13515019, b_13515020) {
  var result_13515021 = 0.0;

  BeforeRet: do {
    if ((x_13515018 < a_13515019)) {
    result_13515021 = a_13515019;
    break BeforeRet;
    }
    
    if ((b_13515020 < x_13515018)) {
    result_13515021 = b_13515020;
    break BeforeRet;
    }
    
    result_13515021 = x_13515018;
    break BeforeRet;
  } while (false);

  return result_13515021;

}
function clamp_13520033(x_13520036, a_13520037, b_13520038) {
  var result_13520039 = 0.0;

  BeforeRet: do {
    if ((x_13520036 < a_13520037)) {
    result_13520039 = a_13520037;
    break BeforeRet;
    }
    
    if ((b_13520038 < x_13520036)) {
    result_13520039 = b_13520038;
    break BeforeRet;
    }
    
    result_13520039 = x_13520036;
    break BeforeRet;
  } while (false);

  return result_13520039;

}
function lerp_13520013(a_13520016, b_13520017, t_13520018) {
  var result_13520019 = 0.0;

  BeforeRet: do {
    result_13520019 = (a_13520016 + ((b_13520017 - a_13520016) * t_13520018));
    break BeforeRet;
  } while (false);

  return result_13520019;

}
function process_13460052(self_13460055) {
      var Tmp2;
      var Tmp4;

  BeforeRet: do {
    switch (self_13460055.kind) {
    case 0:
      break;
    case 1:
      if ((0 < self_13460055.length)) {
      self_13460055.length = subInt(self_13460055.length, 1);
      if ((self_13460055.length == 0)) {
      stop_13455173(self_13460055);
      break BeforeRet;
      }
      
      }
      
      if ((self_13460055.glide == 0)) {
      self_13460055.freq = self_13460055.targetFreq;
      }
      else {
        self_13460055.freq = lerp_13465007(self_13460055.freq, self_13460055.targetFreq, (1.0000000000000000e+000 - (self_13460055.glide / 1.6000000000000000e+001)));
      }
      
      self_13460055.envPhase = addInt(self_13460055.envPhase, 1);
      if (!((self_13460055.pchange == 0))) {
      self_13460055.targetFreq = (self_13460055.targetFreq + ((self_13460055.targetFreq * self_13460055.pchange) / 1.2800000000000000e+002));
      if (((sample_rate_12170159[0] / 2.0000000000000000e+000) < self_13460055.targetFreq)) {
      self_13460055.targetFreq = (sample_rate_12170159[0] / 2.0000000000000000e+000);
      }
      
      self_13460055.basefreq = self_13460055.targetFreq;
      self_13460055.freq = self_13460055.targetFreq;
      }
      
      if ((0 < self_13460055.vibamount)) {
      self_13460055.targetFreq = (self_13460055.basefreq + (((Math.sin((self_13460055.envPhase / self_13460055.vibspeed)) * self_13460055.basefreq) * 2.9999999999999999e-002) * self_13460055.vibamount));
      }
      
      if (!((self_13460055.arp == 0))) {
      var a0_13485001 = (self_13460055.arp & 15);
      var a1_13485012 = (((self_13460055.arp & 240) & 0xffff) >>> 4);
      var a2_13485023 = (((self_13460055.arp & 3840) & 0xffff) >>> 8);
      var a3_13485034 = (((self_13460055.arp & 61440) & 0xffff) >>> 12);
      var arp_steps_13485036 = 0;
      if (!((a3_13485034 == 0))) {
      arp_steps_13485036 = 5;
      }
      else {
      if (!((a2_13485023 == 0))) {
      arp_steps_13485036 = 4;
      }
      else {
      if (!((a1_13485012 == 0))) {
      arp_steps_13485036 = 3;
      }
      else {
      if (!((a0_13485001 == 0))) {
      arp_steps_13485036 = 2;
      }
      else {
        arp_steps_13485036 = 1;
      }
      }}}
      if ((0 < arp_steps_13485036)) {
      if ((modInt(to_pint_12170085(HEX2F_325648(self_13460055.envPhase, ((self_13460055.arpSpeed)|0))), to_pint_12170119(arp_steps_13485036)) == 1)) {
      self_13460055.targetFreq = (self_13460055.basefreq + ((self_13460055.basefreq * 5.9999999999999998e-002) * a0_13485001));
      }
      else {
      if ((modInt(to_pint_12170085(HEX2F_325648(self_13460055.envPhase, ((self_13460055.arpSpeed)|0))), to_pint_12170119(arp_steps_13485036)) == 2)) {
      self_13460055.targetFreq = (self_13460055.basefreq + ((self_13460055.basefreq * 5.9999999999999998e-002) * a1_13485012));
      }
      else {
      if ((modInt(to_pint_12170085(HEX2F_325648(self_13460055.envPhase, ((self_13460055.arpSpeed)|0))), to_pint_12170119(arp_steps_13485036)) == 3)) {
      self_13460055.targetFreq = (self_13460055.basefreq + ((self_13460055.basefreq * 5.9999999999999998e-002) * a2_13485023));
      }
      else {
      if ((modInt(to_pint_12170085(HEX2F_325648(self_13460055.envPhase, ((self_13460055.arpSpeed)|0))), to_pint_12170119(arp_steps_13485036)) == 4)) {
      self_13460055.targetFreq = (self_13460055.basefreq + ((self_13460055.basefreq * 5.9999999999999998e-002) * a3_13485034));
      }
      else {
        self_13460055.targetFreq = self_13460055.basefreq;
      }
      }}}
      }
      
      }
      
      if (!((self_13460055.source == null))) {
++excHandler;
      Tmp2 = framePtr;
      try {
      self_13460055.source.frequency.value = self_13460055.freq;
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
      framePtr = Tmp2;
++excHandler;
      Tmp4 = framePtr;
      try {
      self_13460055.source.playbackRate.value = (self_13460055.freq / 1.0000000000000000e+003);
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
      framePtr = Tmp4;
      lastJSError = prevJSError;
      } finally {
      framePtr = Tmp4;
      }
      lastJSError = prevJSError;
      } finally {
      framePtr = Tmp2;
      }
      }
      
      if ((self_13460055.env < 0)) {
      self_13460055.envValue = clamp_13515015(lerp_13465007((self_13460055.init / 1.5000000000000000e+001), 0.0, HEX2F_325648(self_13460055.envPhase, mulInt(negInt(self_13460055.env), 4))), 0.0, 1.0000000000000000e+000);
      if ((self_13460055.envValue <= 0.0)) {
      stop_13455173(self_13460055);
      break BeforeRet;
      }
      
      }
      else {
      if ((0 < self_13460055.env)) {
      self_13460055.envValue = clamp_13515015(lerp_13465007((self_13460055.init / 1.5000000000000000e+001), 1.0000000000000000e+000, HEX2F_325648(self_13460055.envPhase, mulInt(self_13460055.env, 4))), 0.0, 1.0000000000000000e+000);
      }
      else {
      if ((self_13460055.env == 0)) {
      self_13460055.envValue = (self_13460055.init / 1.5000000000000000e+001);
      }
      }}
      self_13460055.gain.gain.value = clamp_13520033(lerp_13520013(self_13460055.gain.gain.value, self_13460055.envValue, 9.0000000000000002e-001), 0.0, 1.0000000000000000e+000);
      break;
    default: 
      break;
    }
  } while (false);

  
}
function audio_clock_13520126() {
    sfx_gain_13300035[0].gain.value = sfx_volume_12170157[0];
    music_gain_13300036[0].gain.value = music_volume_12170158[0];
    master_gain_13300037[0].gain.value = master_volume_12170156[0];
    L1: do {
      var channel_13520178 = null;
      var i_16810251 = 0;
      if ((i_16810251 <= 15)) {
      L2: do {
          L3: while (true) {
          if (!true) break L3;
            channel_13520178 = audio_channels_13297099[0][chckIndx(i_16810251, 0, (audio_channels_13297099[0] != null ? audio_channels_13297099[0].length : 0)+0-1)-0];
            process_13460052(channel_13520178);
            if ((15 <= i_16810251)) {
            break L2;
            }
            
            i_16810251 = addInt(i_16810251, 1);
          }
      } while(false);
      }
      
    } while(false);

  
}
function step_13520216() {
              var Tmp11;
              var Tmp15;

  BeforeRet: do {
    if ((0 < loading_12170203[0])) {
    console.log("loading...", loading_12170203[0]);
    present_13300349();
    frame_12170311[0] = addInt(frame_12170311[0], 1);
    break BeforeRet;
    }
    
    mouse_rel_x_12170349[0] = (subInt(mouse_raw_x_12170347[0], last_mouse_raw_x_12170353[0]) / screen_scale_12170276[0]);
    mouse_rel_y_12170350[0] = (subInt(mouse_raw_y_12170348[0], last_mouse_raw_y_12170354[0]) / screen_scale_12170276[0]);
    L1: do {
      var i_13530071 = 0;
      var b_13530072 = false;
      var i_16810198 = 0;
      if ((i_16810198 <= 2)) {
      L2: do {
          L3: while (true) {
          if (!true) break L3;
            i_13530071 = i_16810198;
            b_13530072 = mouse_buttons_down_12170358[0][chckIndx(i_16810198, 0, (mouse_buttons_down_12170358[0] != null ? mouse_buttons_down_12170358[0].length : 0)+0-1)-0];
            if (b_13530072) {
            mouse_buttons_12170362[0][chckIndx(i_13530071, 0, (mouse_buttons_12170362[0] != null ? mouse_buttons_12170362[0].length : 0)+0-1)-0] = addInt(mouse_buttons_12170362[0][chckIndx(i_13530071, 0, (mouse_buttons_12170362[0] != null ? mouse_buttons_12170362[0].length : 0)+0-1)-0], 1);
            }
            else {
              if ((0 < mouse_buttons_12170362[0][chckIndx(i_13530071, 0, (mouse_buttons_12170362[0] != null ? mouse_buttons_12170362[0].length : 0)+0-1)-0])) {
              mouse_buttons_12170362[0][chckIndx(i_13530071, 0, (mouse_buttons_12170362[0] != null ? mouse_buttons_12170362[0].length : 0)+0-1)-0] = -1;
              }
              else {
                mouse_buttons_12170362[0][chckIndx(i_13530071, 0, (mouse_buttons_12170362[0] != null ? mouse_buttons_12170362[0].length : 0)+0-1)-0] = 0;
              }
              
            }
            
            if ((2 <= i_16810198)) {
            break L2;
            }
            
            i_16810198 = addInt(i_16810198, 1);
          }
      } while(false);
      }
      
    } while(false);
    L4: do {
      var controller_13545214 = null;
      var i_16810202 = 0;
      var l_16810203 = (controllers_12170254[0] != null ? controllers_12170254[0].length : 0);
      L5: do {
          L6: while (true) {
          if (!(i_16810202 < l_16810203)) break L6;
            controller_13545214 = controllers_12170254[0][chckIndx(i_16810202, 0, (controllers_12170254[0] != null ? controllers_12170254[0].length : 0)+0-1)-0];
            update_11535262(controller_13545214);
            i_16810202 = addInt(i_16810202, 1);
            if (!(((controllers_12170254[0] != null ? controllers_12170254[0].length : 0) == l_16810203))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    if (!((update_func_12170294[0] == null))) {
    update_func_12170294[0](time_step_12170270[0]);
    }
    
    if (!((draw_func_12170297[0] == null))) {
    draw_func_12170297[0]();
    }
    
    L7: do {
      var k_13565229 = 0;
      var v_13565230 = 0;
      var l_16810213 = len_13555139(keys_down_12150629[0]);
      L8: do {
        var h_16810215 = 0;
        var colontmp__16810216 = 0;
        colontmp__16810216 = (keys_down_12150629[0].data != null ? (keys_down_12150629[0].data.length-1) : -1);
        var res_16810217 = 0;
        L9: do {
            L10: while (true) {
            if (!(res_16810217 <= colontmp__16810216)) break L10;
              h_16810215 = res_16810217;
              if (is_filled_1004018(keys_down_12150629[0].data[chckIndx(h_16810215, 0, (keys_down_12150629[0].data != null ? keys_down_12150629[0].data.length : 0)+0-1)-0].Field0)) {
              k_13565229 = keys_down_12150629[0].data[chckIndx(h_16810215, 0, (keys_down_12150629[0].data != null ? keys_down_12150629[0].data.length : 0)+0-1)-0].Field1;
              v_13565230 = keys_down_12150629[0].data[chckIndx(h_16810215, 0, (keys_down_12150629[0].data != null ? keys_down_12150629[0].data.length : 0)+0-1)-0].Field2;
              if ((0 < chckRange(v_13565230, -2147483648, 2147483647))) {
              (Tmp11 = HEX5BHEX5D_13360780(keys_down_12150629[0], k_13565229), Tmp11)[0][Tmp11[1]] = ((Tmp11[0][Tmp11[1]] + 1) >>> 0);
              }
              
              if (!((len_13555139(keys_down_12150629[0]) == l_16810213))) {
              failed_assert_impl_102680(makeNimstrLit("tables.nim(664, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_16810217 = addInt(res_16810217, 1);
            }
        } while(false);
      } while(false);
    } while(false);
    last_mouse_raw_x_12170353[0] = mouse_raw_x_12170347[0];
    last_mouse_raw_y_12170354[0] = mouse_raw_y_12170348[0];
    L12: do {
      var touch_13570171 = null;
      var i_16810222 = 0;
      var l_16810223 = (touches_12170155[0] != null ? touches_12170155[0].length : 0);
      L13: do {
          L14: while (true) {
          if (!(i_16810222 < l_16810223)) break L14;
            touch_13570171 = touches_12170155[0][chckIndx(i_16810222, 0, (touches_12170155[0] != null ? touches_12170155[0].length : 0)+0-1)-0];
              if ((touch_13570171.state == 0)) Tmp15 = true; else {                Tmp15 = (touch_13570171.state == 2);              }            if (Tmp15) {
            touch_13570171.state = 1;
            }
            
            i_16810222 = addInt(i_16810222, 1);
            if (!(((touches_12170155[0] != null ? touches_12170155[0].length : 0) == l_16810223))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(198, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    var posHEX60gensym13570183_13575002 = 0;
    L16: do {
      var iHEX60gensym13570184_13575015 = 0;
      var colontmp__16810226 = 0;
      colontmp__16810226 = (touches_12170155[0] != null ? touches_12170155[0].length : 0);
      var i_16810227 = 0;
      L17: do {
          L18: while (true) {
          if (!(i_16810227 < colontmp__16810226)) break L18;
            iHEX60gensym13570184_13575015 = i_16810227;
            var it_13575020 = nimCopy(null, touches_12170155[0][chckIndx(iHEX60gensym13570184_13575015, 0, (touches_12170155[0] != null ? touches_12170155[0].length : 0)+0-1)-0], NTI11531064);
            if (!(contains_13335120([3, 4], it_13575020.state))) {
            if (!((posHEX60gensym13570183_13575002 == iHEX60gensym13570184_13575015))) {
            nimCopy(touches_12170155[0][chckIndx(posHEX60gensym13570183_13575002, 0, (touches_12170155[0] != null ? touches_12170155[0].length : 0)+0-1)-0], touches_12170155[0][chckIndx(iHEX60gensym13570184_13575015, 0, (touches_12170155[0] != null ? touches_12170155[0].length : 0)+0-1)-0], NTI11531064);
            }
            
            posHEX60gensym13570183_13575002 = addInt(posHEX60gensym13570183_13575002, 1);
            }
            
            i_16810227 = addInt(i_16810227, 1);
          }
      } while(false);
    } while(false);
    if (touches_12170155[0] === null) touches_12170155[0] = [];
               if (touches_12170155[0].length < chckRange(posHEX60gensym13570183_13575002, 0, 2147483647)) { for (var i=touches_12170155[0].length;i<chckRange(posHEX60gensym13570183_13575002, 0, 2147483647);++i) touches_12170155[0].push({id: 0, x: 0, y: 0, sx: 0.0, sy: 0.0, xrel: 0.0, yrel: 0.0, xrelraw: 0.0, yrelraw: 0.0, state: 0}); }
               else { touches_12170155[0].length = chckRange(posHEX60gensym13570183_13575002, 0, 2147483647); };
    present_13300349();
    audio_clock_13520126();
    frame_12170311[0] = addInt(frame_12170311[0], 1);
  } while (false);

  
}
function run_13645051() {
    if (!((interval_13297018[0] == null))) {
    window.clearInterval(interval_13297018[0]);
    }
    
    interval_13297018[0] = window.setInterval(step_13520216, (((time_step_12170270[0] * 1.0000000000000000e+003))|0));

  
}
function run_15290725(init_15290729, update_15290733, draw_15290736) {
    if (!(!((update_15290733 == null)))) {
    failed_assert_impl_102680(makeNimstrLit("nico.nim(2719, 9) `update != nil` "));
    }
    
    if (!(!((draw_15290736 == null)))) {
    failed_assert_impl_102680(makeNimstrLit("nico.nim(2720, 9) `draw != nil` "));
    }
    
    init_func_12170290[0] = init_15290729;
    update_func_12170294[0] = update_15290733;
    draw_func_12170297[0] = draw_15290736;
    if (!((init_func_12170290[0] == null))) {
    init_func_12170290[0]();
    }
    
    if (!(running_12170168[0])) {
    running_12170168[0] = true;
    run_13645051();
    }
    

  
}
function randomize_13670261() {
    var time_13670403 = ((epoch_time_10685401() * 1.0000000000000000e+003) & 2147483647);
    randomize_13670222(time_13670403);

  
}
function srand_15285015() {
    randomize_13670261();

  
}
function join_path_13651002(a_13651004, b_13651005) {
  var result_13651006 = null;

  BeforeRet: do {
    if ((a_13651004[chckIndx((a_13651004 != null ? (a_13651004.length-1) : -1), 0, (a_13651004 != null ? a_13651004.length : 0)+0-1)-0] == 47)) {
    result_13651006 = nimCopy(null, (a_13651004 || []).concat(b_13651005 || []), NTI112);
    break BeforeRet;
    }
    
    result_13651006 = nimCopy(null, (a_13651004 || []).concat(makeNimstrLit("/") || [],b_13651005 || []), NTI112);
    break BeforeRet;
  } while (false);

  return result_13651006;

}
function read_file_13450043(filename_13450045) {
  var result_13450046 = null;

  BeforeRet: do {
    var xhr_13450047 = new XMLHttpRequest();
    xhr_13450047.open("GET", toJSStr(filename_13450045), false, null, null);
    xhr_13450047.send();
    if ((xhr_13450047.status == 200)) {
    result_13450046 = nimCopy(null, cstrToNimstr(xhr_13450047.responseText), NTI112);
    break BeforeRet;
    }
    else {
      raiseException({message: (makeNimstrLit("unable to open file: ") || []).concat(filename_13450045 || []), parent: null, m_type: NTI6223, name: null, trace: null, up: null}, "IOError");
    }
    
  } while (false);

  return result_13450046;

}
function is_nim_exception_156082() {
    return lastJSError && lastJSError.m_type;

  
}
function nsuRemoveSuffixCharSet(s_9505054, s_9505054_Idx, chars_9505056) {
          var Tmp3;

  BeforeRet: do {
    if (((s_9505054[s_9505054_Idx] != null ? s_9505054[s_9505054_Idx].length : 0) == 0)) {
    break BeforeRet;
    }
    
    var last_9505058 = (s_9505054[s_9505054_Idx] != null ? (s_9505054[s_9505054_Idx].length-1) : -1);
    L1: do {
        L2: while (true) {
          if (!(-1 < last_9505058)) Tmp3 = false; else {            Tmp3 = (chars_9505056[s_9505054[s_9505054_Idx][chckIndx(last_9505058, 0, (s_9505054[s_9505054_Idx] != null ? s_9505054[s_9505054_Idx].length : 0)+0-1)-0]] != undefined);          }        if (!Tmp3) break L2;
          last_9505058 = subInt(last_9505058, 1);
        }
    } while(false);
    (s_9505054[s_9505054_Idx] == null ? s_9505054[s_9505054_Idx] = mnewString(chckRange(addInt(last_9505058, 1), 0, 2147483647)) : s_9505054[s_9505054_Idx].length = chckRange(addInt(last_9505058, 1), 0, 2147483647));
  } while (false);

  
}
function new_surface_rgba_12170886(w_12170888, h_12170889) {
  var result_12170890 = null;

    result_12170890 = new_12170777();
    result_12170890.data = nimCopy(null, new_seq_12170839(chckRange(mulInt(mulInt(w_12170888, h_12170889), 4), 0, 2147483647)), NTI12170843);
    result_12170890.channels = 4;
    result_12170890.w = w_12170888;
    result_12170890.h = h_12170889;

  return result_12170890;

}
function load_surface_rgba_13455063(filename_13455065, callback_13455069) {
    filename_13455065 = nimCopy(null, filename_13455065, NTI112);
    function HEX3Aanonymous_13455077(event_13455080) {
        loading_12170203[0] = subInt(loading_12170203[0], 1);
        var target_13455087 = event_13455080.target;
        console.log("image loaded: ", target_13455087.src);
        var canvas_13455088 = document.createElement("canvas");
        var ctx_13455089 = get_context2d_12306722(canvas_13455088);
        var w_13455090 = target_13455087.width;
        var h_13455091 = target_13455087.height;
        canvas_13455088.width = w_13455090;
        canvas_13455088.height = h_13455091;
        ctx_13455089.drawImage(target_13455087, 0.0, 0.0);
        var img_data_13455092 = ctx_13455089.getImageData(0.0, 0.0, w_13455090, h_13455091);
        var surface_13455093 = new_surface_rgba_12170886(w_13455090, h_13455091);
        surface_13455093.filename = nimCopy(null, filename_13455065, NTI112);
        surface_13455093.data = nimCopy(null, img_data_13455092.data, NTI12306044);
        callback_13455069(surface_13455093);

      
    }

    loading_12170203[0] = addInt(loading_12170203[0], 1);
    var img_13455076 = document.createElement("img");
    img_13455076.addEventListener("load", HEX3Aanonymous_13455077, false);
    img_13455076.src = toJSStr(filename_13455065);

  
}
function new_14645321() {
  var result_14645325 = null;

  BeforeRet: do {
    var r_14645401 = null;
    r_14645401 = {rects: {data: null, counter: 0}, data: null, w: 0, h: 0};
    result_14645325 = r_14645401;
    break BeforeRet;
  } while (false);

  return result_14645325;

}
function HEX3DHEX3D_14650015(x_14650018, y_14650019) {
  var result_14650020 = false;

  BeforeRet: do {
    if (!((x_14650018["Field0"] == y_14650019["Field0"]))) {
    result_14650020 = false;
    break BeforeRet;
    }
    
    if (!((x_14650018["Field1"] == y_14650019["Field1"]))) {
    result_14650020 = false;
    break BeforeRet;
    }
    
    if (!((x_14650018["Field2"] == y_14650019["Field2"]))) {
    result_14650020 = false;
    break BeforeRet;
    }
    
    if (!((x_14650018["Field3"] == y_14650019["Field3"]))) {
    result_14650020 = false;
    break BeforeRet;
    }
    
    result_14650020 = true;
    break BeforeRet;
  } while (false);

  return result_14650020;

}
function init_table_14655011(initial_size_14655015) {
  var result_14655017 = {data: null, counter: 0};

    if (!(is_power_of_two_890029(initial_size_14655015))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(initialSize)` "));
    }
    
    result_14655017.counter = 0;
    result_14655017.data = new Array(chckRange(initial_size_14655015, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_14655015, 0, 2147483647);++i) {result_14655017.data[i]={Field0: 0, Field1: 0, Field2: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}};}
  return result_14655017;

}
function hash_14930001(x_14930004) {
  var result_14930005 = 0;

    result_14930005 = x_14930004;

  return result_14930005;

}
function HEX3DHEX3D_1995064(a_1995066, b_1995067) {
  var result_1995068 = false;

  BeforeRet: do {
    result_1995068 = (((a_1995066)|0) == ((b_1995067)|0));
    break BeforeRet;
  } while (false);

  return result_1995068;

}
function raw_get_14925325(t_14925329, key_14925330, hc_14925331, hc_14925331_Idx) {
            var Tmp3;

  var result_14925332 = 0;

  BeforeRet: do {
    hc_14925331[hc_14925331_Idx] = hash_14930001(key_14925330);
    if ((hc_14925331[hc_14925331_Idx] == 0)) {
    hc_14925331[hc_14925331_Idx] = 314159265;
    }
    
    if (((t_14925329.data != null ? t_14925329.data.length : 0) == 0)) {
    result_14925332 = -1;
    break BeforeRet;
    }
    
    var h_14935149 = (hc_14925331[hc_14925331_Idx] & (t_14925329.data != null ? (t_14925329.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_1004018(t_14925329.data[chckIndx(h_14935149, 0, (t_14925329.data != null ? t_14925329.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_14925329.data[chckIndx(h_14935149, 0, (t_14925329.data != null ? t_14925329.data.length : 0)+0-1)-0].Field0 == hc_14925331[hc_14925331_Idx])) Tmp3 = false; else {              Tmp3 = HEX3DHEX3D_1995064(t_14925329.data[chckIndx(h_14935149, 0, (t_14925329.data != null ? t_14925329.data.length : 0)+0-1)-0].Field1, key_14925330);            }          if (Tmp3) {
          result_14925332 = h_14935149;
          break BeforeRet;
          }
          
          h_14935149 = next_try_1005014(h_14935149, (t_14925329.data != null ? (t_14925329.data.length-1) : -1));
        }
    } while(false);
    result_14925332 = subInt(-1, h_14935149);
  } while (false);

  return result_14925332;

}
function has_key_14925316(t_14925321, key_14925322) {
  var result_14925323 = false;

    var hc_14925324 = [0];
    result_14925323 = (0 <= raw_get_14925325(t_14925321, key_14925322, hc_14925324, 0));

  return result_14925323;

}
function HEX3CHEX3DHEX25_4294(x_4296, y_4297) {
  var result_4298 = false;

    result_4298 = ((x_4296 >>> 0) <= (y_4297 >>> 0));

  return result_4298;

}
function nuctoUTF8(c_1345459) {
  var result_1345460 = null;

    result_1345460 = nimCopy(null, [], NTI112);
    var iHEX60gensym1345461_1350001 = c_1345459;
    if (HEX3CHEX3DHEX25_4294(iHEX60gensym1345461_1350001, 127)) {
    (result_1345460 == null ? result_1345460 = mnewString(1) : result_1345460.length = 1);
    result_1345460[chckIndx(0, 0, (result_1345460 != null ? result_1345460.length : 0)+0-1)-0] = chckRange(iHEX60gensym1345461_1350001, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_4294(iHEX60gensym1345461_1350001, 2047)) {
    (result_1345460 == null ? result_1345460 = mnewString(2) : result_1345460.length = 2);
    result_1345460[chckIndx(0, 0, (result_1345460 != null ? result_1345460.length : 0)+0-1)-0] = chckRange(((iHEX60gensym1345461_1350001 >> 6) | 192), 0, 255);
    result_1345460[chckIndx(1, 0, (result_1345460 != null ? result_1345460.length : 0)+0-1)-0] = chckRange(((iHEX60gensym1345461_1350001 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_4294(iHEX60gensym1345461_1350001, 65535)) {
    (result_1345460 == null ? result_1345460 = mnewString(3) : result_1345460.length = 3);
    result_1345460[chckIndx(0, 0, (result_1345460 != null ? result_1345460.length : 0)+0-1)-0] = chckRange(((iHEX60gensym1345461_1350001 >> 12) | 224), 0, 255);
    result_1345460[chckIndx(1, 0, (result_1345460 != null ? result_1345460.length : 0)+0-1)-0] = chckRange((((iHEX60gensym1345461_1350001 >> 6) & 63) | 128), 0, 255);
    result_1345460[chckIndx(2, 0, (result_1345460 != null ? result_1345460.length : 0)+0-1)-0] = chckRange(((iHEX60gensym1345461_1350001 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_4294(iHEX60gensym1345461_1350001, 2097151)) {
    (result_1345460 == null ? result_1345460 = mnewString(4) : result_1345460.length = 4);
    result_1345460[chckIndx(0, 0, (result_1345460 != null ? result_1345460.length : 0)+0-1)-0] = chckRange(((iHEX60gensym1345461_1350001 >> 18) | 240), 0, 255);
    result_1345460[chckIndx(1, 0, (result_1345460 != null ? result_1345460.length : 0)+0-1)-0] = chckRange((((iHEX60gensym1345461_1350001 >> 12) & 63) | 128), 0, 255);
    result_1345460[chckIndx(2, 0, (result_1345460 != null ? result_1345460.length : 0)+0-1)-0] = chckRange((((iHEX60gensym1345461_1350001 >> 6) & 63) | 128), 0, 255);
    result_1345460[chckIndx(3, 0, (result_1345460 != null ? result_1345460.length : 0)+0-1)-0] = chckRange(((iHEX60gensym1345461_1350001 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_4294(iHEX60gensym1345461_1350001, 67108863)) {
    (result_1345460 == null ? result_1345460 = mnewString(5) : result_1345460.length = 5);
    result_1345460[chckIndx(0, 0, (result_1345460 != null ? result_1345460.length : 0)+0-1)-0] = chckRange(((iHEX60gensym1345461_1350001 >> 24) | 248), 0, 255);
    result_1345460[chckIndx(1, 0, (result_1345460 != null ? result_1345460.length : 0)+0-1)-0] = chckRange((((iHEX60gensym1345461_1350001 >> 18) & 63) | 128), 0, 255);
    result_1345460[chckIndx(2, 0, (result_1345460 != null ? result_1345460.length : 0)+0-1)-0] = chckRange((((iHEX60gensym1345461_1350001 >> 12) & 63) | 128), 0, 255);
    result_1345460[chckIndx(3, 0, (result_1345460 != null ? result_1345460.length : 0)+0-1)-0] = chckRange((((iHEX60gensym1345461_1350001 >> 6) & 63) | 128), 0, 255);
    result_1345460[chckIndx(4, 0, (result_1345460 != null ? result_1345460.length : 0)+0-1)-0] = chckRange(((iHEX60gensym1345461_1350001 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_4294(iHEX60gensym1345461_1350001, 2147483647)) {
    (result_1345460 == null ? result_1345460 = mnewString(6) : result_1345460.length = 6);
    result_1345460[chckIndx(0, 0, (result_1345460 != null ? result_1345460.length : 0)+0-1)-0] = chckRange(((iHEX60gensym1345461_1350001 >> 30) | 252), 0, 255);
    result_1345460[chckIndx(1, 0, (result_1345460 != null ? result_1345460.length : 0)+0-1)-0] = chckRange((((iHEX60gensym1345461_1350001 >> 24) & 63) | 128), 0, 255);
    result_1345460[chckIndx(2, 0, (result_1345460 != null ? result_1345460.length : 0)+0-1)-0] = chckRange((((iHEX60gensym1345461_1350001 >> 18) & 63) | 128), 0, 255);
    result_1345460[chckIndx(3, 0, (result_1345460 != null ? result_1345460.length : 0)+0-1)-0] = chckRange((((iHEX60gensym1345461_1350001 >> 12) & 63) | 128), 0, 255);
    result_1345460[chckIndx(4, 0, (result_1345460 != null ? result_1345460.length : 0)+0-1)-0] = chckRange((((iHEX60gensym1345461_1350001 >> 6) & 63) | 128), 0, 255);
    result_1345460[chckIndx(5, 0, (result_1345460 != null ? result_1345460.length : 0)+0-1)-0] = chckRange(((iHEX60gensym1345461_1350001 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  return result_1345460;

}
function HEX24_1715214(rune_1715216) {
  var result_1715217 = null;

    result_1715217 = nimCopy(null, nuctoUTF8(rune_1715216), NTI112);

  return result_1715217;

}
function must_rehash_14990601(t_14990604) {
  var result_14990605 = false;

    if (!((t_14990604.counter < (t_14990604.data != null ? t_14990604.data.length : 0)))) {
    failed_assert_impl_102680(makeNimstrLit("hashcommon.nim(33, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_14990605 = ((mulInt((t_14990604.data != null ? t_14990604.data.length : 0), 2) < mulInt(t_14990604.counter, 3)) || (subInt((t_14990604.data != null ? t_14990604.data.length : 0), t_14990604.counter) < 4));

  return result_14990605;

}
function raw_insert_15016130(t_15016136, data_15016139, data_15016139_Idx, key_15016140, val_15016141, hc_15016142, h_15016143) {
    data_15016139[data_15016139_Idx][chckIndx(h_15016143, 0, (data_15016139[data_15016139_Idx] != null ? data_15016139[data_15016139_Idx].length : 0)+0-1)-0].Field1 = key_15016140;
    nimCopy(data_15016139[data_15016139_Idx][chckIndx(h_15016143, 0, (data_15016139[data_15016139_Idx] != null ? data_15016139[data_15016139_Idx].length : 0)+0-1)-0].Field2, val_15016141, NTI12150652);
    data_15016139[data_15016139_Idx][chckIndx(h_15016143, 0, (data_15016139[data_15016139_Idx] != null ? data_15016139[data_15016139_Idx].length : 0)+0-1)-0].Field0 = hc_15016142;

  
}
function enlarge_15015172(t_15015178) {
    var n_15015186 = null;
    n_15015186 = new Array(chckRange(mulInt((t_15015178.data != null ? t_15015178.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_15015178.data != null ? t_15015178.data.length : 0), 2), 0, 2147483647);++i) {n_15015186[i]={Field0: 0, Field1: 0, Field2: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}};}    var Tmp1 = t_15015178.data; t_15015178.data = n_15015186; n_15015186 = Tmp1;    L2: do {
      var i_15015356 = 0;
      var colontmp__16810338 = 0;
      colontmp__16810338 = (n_15015186 != null ? (n_15015186.length-1) : -1);
      var res_16810339 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_16810339 <= colontmp__16810338)) break L4;
            i_15015356 = res_16810339;
            var eh_15015516 = n_15015186[chckIndx(i_15015356, 0, (n_15015186 != null ? n_15015186.length : 0)+0-1)-0].Field0;
            if (is_filled_1004018(eh_15015516)) {
            var j_15015523 = (eh_15015516 & (t_15015178.data != null ? (t_15015178.data.length-1) : -1));
            L5: do {
                L6: while (true) {
                if (!is_filled_1004018(t_15015178.data[chckIndx(j_15015523, 0, (t_15015178.data != null ? t_15015178.data.length : 0)+0-1)-0].Field0)) break L6;
                  j_15015523 = next_try_1005014(j_15015523, (t_15015178.data != null ? (t_15015178.data.length-1) : -1));
                }
            } while(false);
            raw_insert_15016130(t_15015178, t_15015178, "data", n_15015186[chckIndx(i_15015356, 0, (n_15015186 != null ? n_15015186.length : 0)+0-1)-0].Field1, n_15015186[chckIndx(i_15015356, 0, (n_15015186 != null ? n_15015186.length : 0)+0-1)-0].Field2, eh_15015516, j_15015523);
            }
            
            res_16810339 = addInt(res_16810339, 1);
          }
      } while(false);
    } while(false);

  
}
function raw_get_known_hc_15016648(t_15016652, key_15016653, hc_15016654) {
  var result_15016655 = 0;

  BeforeRet: do {
    if (((t_15016652.data != null ? t_15016652.data.length : 0) == 0)) {
    result_15016655 = -1;
    break BeforeRet;
    }
    
    var h_15020149 = (hc_15016654 & (t_15016652.data != null ? (t_15016652.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_1004018(t_15016652.data[chckIndx(h_15020149, 0, (t_15016652.data != null ? t_15016652.data.length : 0)+0-1)-0].Field0)) break L2;
          if (((t_15016652.data[chckIndx(h_15020149, 0, (t_15016652.data != null ? t_15016652.data.length : 0)+0-1)-0].Field0 == hc_15016654) && HEX3DHEX3D_1995064(t_15016652.data[chckIndx(h_15020149, 0, (t_15016652.data != null ? t_15016652.data.length : 0)+0-1)-0].Field1, key_15016653))) {
          result_15016655 = h_15020149;
          break BeforeRet;
          }
          
          h_15020149 = next_try_1005014(h_15020149, (t_15016652.data != null ? (t_15016652.data.length-1) : -1));
        }
    } while(false);
    result_15016655 = subInt(-1, h_15020149);
  } while (false);

  return result_15016655;

}
function HEX5BHEX5DHEX3D_14940122(t_14940128, key_14940129, val_14940130) {
    if (((t_14940128.data != null ? t_14940128.data.length : 0) == 0)) {
    if (!(is_power_of_two_890029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_14940128.counter = 0;
    t_14940128.data = new Array(64); for (var i=0;i<64;++i) {t_14940128.data[i]={Field0: 0, Field1: 0, Field2: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}};}    }
    
    var hc_14965601 = [0];
    var index_14965610 = raw_get_14925325(t_14940128, key_14940129, hc_14965601, 0);
    if ((0 <= index_14965610)) {
    nimCopy(t_14940128.data[chckIndx(index_14965610, 0, (t_14940128.data != null ? t_14940128.data.length : 0)+0-1)-0].Field2, val_14940130, NTI12150652);
    }
    else {
      if (((t_14940128.data != null ? t_14940128.data.length : 0) == 0)) {
      if (!(is_power_of_two_890029(64))) {
      failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
      }
      
      t_14940128.counter = 0;
      t_14940128.data = new Array(64); for (var i=0;i<64;++i) {t_14940128.data[i]={Field0: 0, Field1: 0, Field2: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}};}      }
      
      if (must_rehash_14990601(t_14940128)) {
      enlarge_15015172(t_14940128);
      index_14965610 = raw_get_known_hc_15016648(t_14940128, key_14940129, hc_14965601[0]);
      }
      
      index_14965610 = subInt(-1, index_14965610);
      raw_insert_15016130(t_14940128, t_14940128, "data", key_14940129, val_14940130, hc_14965601[0], index_14965610);
      t_14940128.counter = addInt(t_14940128.counter, 1);
    }
    

  
}
function len_15025138(t_15025143) {
  var result_15025144 = 0;

    result_15025144 = t_15025143.counter;

  return result_15025144;

}
function nucruneLen(s_1101829) {
  var result_1101830 = 0;

    var i_1101832 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_1101832 < (s_1101829 != null ? s_1101829.length : 0))) break L2;
          if ((s_1101829[chckIndx(i_1101832, 0, (s_1101829 != null ? s_1101829.length : 0)+0-1)-0] <= 127)) {
          i_1101832 = addInt(i_1101832, 1);
          }
          else {
          if ((((s_1101829[chckIndx(i_1101832, 0, (s_1101829 != null ? s_1101829.length : 0)+0-1)-0] >>> 0) >>> 5) == 6)) {
          i_1101832 = addInt(i_1101832, 2);
          }
          else {
          if ((((s_1101829[chckIndx(i_1101832, 0, (s_1101829 != null ? s_1101829.length : 0)+0-1)-0] >>> 0) >>> 4) == 14)) {
          i_1101832 = addInt(i_1101832, 3);
          }
          else {
          if ((((s_1101829[chckIndx(i_1101832, 0, (s_1101829 != null ? s_1101829.length : 0)+0-1)-0] >>> 0) >>> 3) == 30)) {
          i_1101832 = addInt(i_1101832, 4);
          }
          else {
          if ((((s_1101829[chckIndx(i_1101832, 0, (s_1101829 != null ? s_1101829.length : 0)+0-1)-0] >>> 0) >>> 2) == 62)) {
          i_1101832 = addInt(i_1101832, 5);
          }
          else {
          if ((((s_1101829[chckIndx(i_1101832, 0, (s_1101829 != null ? s_1101829.length : 0)+0-1)-0] >>> 0) >>> 1) == 126)) {
          i_1101832 = addInt(i_1101832, 6);
          }
          else {
          i_1101832 = addInt(i_1101832, 1);
          }
          }}}}}
          result_1101830 = addInt(result_1101830, 1);
        }
    } while(false);

  return result_1101830;

}
function create_font_from_surface_14645315(surface_14645317, chars_14645318) {
  var result_14645319 = null;

  BeforeRet: do {
    var font_14645436 = new_14645321();
    font_14645436.w = surface_14645317.w;
    font_14645436.h = surface_14645317.h;
    font_14645436.data = nimCopy(null, new_seq_12170839(chckRange(mulInt(font_14645436.w, font_14645436.h), 0, 2147483647)), NTI12170843);
    var border_color_14645453 = 2;
    var solid_color_14645454 = 1;
    var transparent_color_14645455 = 0;
    if ((surface_14645317.channels == 4)) {
    console.log("loading font from RGBA", toJSStr(surface_14645317.filename));
    var border_color_rgba_14650002 = {Field0: surface_14645317.data[chckIndx(0, 0, (surface_14645317.data != null ? surface_14645317.data.length : 0)+0-1)-0], Field1: surface_14645317.data[chckIndx(1, 0, (surface_14645317.data != null ? surface_14645317.data.length : 0)+0-1)-0], Field2: surface_14645317.data[chckIndx(2, 0, (surface_14645317.data != null ? surface_14645317.data.length : 0)+0-1)-0], Field3: surface_14645317.data[chckIndx(3, 0, (surface_14645317.data != null ? surface_14645317.data.length : 0)+0-1)-0]};
    var transparent_color_rgba_14650004 = {Field0: surface_14645317.data[chckIndx(4, 0, (surface_14645317.data != null ? surface_14645317.data.length : 0)+0-1)-0], Field1: surface_14645317.data[chckIndx(5, 0, (surface_14645317.data != null ? surface_14645317.data.length : 0)+0-1)-0], Field2: surface_14645317.data[chckIndx(6, 0, (surface_14645317.data != null ? surface_14645317.data.length : 0)+0-1)-0], Field3: surface_14645317.data[chckIndx(7, 0, (surface_14645317.data != null ? surface_14645317.data.length : 0)+0-1)-0]};
    L1: do {
      var i_14650012 = 0;
      var colontmp__16810286 = 0;
      colontmp__16810286 = mulInt(font_14645436.w, font_14645436.h);
      var i_16810287 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16810287 < colontmp__16810286)) break L3;
            i_14650012 = i_16810287;
            var col_14650014 = {Field0: surface_14645317.data[chckIndx(addInt(mulInt(i_14650012, surface_14645317.channels), 0), 0, (surface_14645317.data != null ? surface_14645317.data.length : 0)+0-1)-0], Field1: surface_14645317.data[chckIndx(addInt(mulInt(i_14650012, surface_14645317.channels), 1), 0, (surface_14645317.data != null ? surface_14645317.data.length : 0)+0-1)-0], Field2: surface_14645317.data[chckIndx(addInt(mulInt(i_14650012, surface_14645317.channels), 2), 0, (surface_14645317.data != null ? surface_14645317.data.length : 0)+0-1)-0], Field3: surface_14645317.data[chckIndx(addInt(mulInt(i_14650012, surface_14645317.channels), 3), 0, (surface_14645317.data != null ? surface_14645317.data.length : 0)+0-1)-0]};
            if (HEX3DHEX3D_14650015(col_14650014, border_color_rgba_14650002)) {
            font_14645436.data[chckIndx(i_14650012, 0, (font_14645436.data != null ? font_14645436.data.length : 0)+0-1)-0] = border_color_14645453;
            }
            else {
            if (HEX3DHEX3D_14650015(col_14650014, transparent_color_rgba_14650004)) {
            font_14645436.data[chckIndx(i_14650012, 0, (font_14645436.data != null ? font_14645436.data.length : 0)+0-1)-0] = transparent_color_14645455;
            }
            else {
              font_14645436.data[chckIndx(i_14650012, 0, (font_14645436.data != null ? font_14645436.data.length : 0)+0-1)-0] = solid_color_14645454;
            }
            }
            i_16810287 = addInt(i_16810287, 1);
          }
      } while(false);
    } while(false);
    }
    else {
    if ((surface_14645317.channels == 1)) {
    console.log("loading font from indexed", toJSStr(surface_14645317.filename));
    L4: do {
      var i_14655008 = 0;
      var colontmp__16810290 = 0;
      colontmp__16810290 = mulInt(font_14645436.w, font_14645436.h);
      var i_16810291 = 0;
      L5: do {
          L6: while (true) {
          if (!(i_16810291 < colontmp__16810290)) break L6;
            i_14655008 = i_16810291;
            font_14645436.data[chckIndx(i_14655008, 0, (font_14645436.data != null ? font_14645436.data.length : 0)+0-1)-0] = surface_14645317.data[chckIndx(i_14655008, 0, (surface_14645317.data != null ? surface_14645317.data.length : 0)+0-1)-0];
            i_16810291 = addInt(i_16810291, 1);
          }
      } while(false);
    } while(false);
    }
    }
    nimCopy(font_14645436.rects, init_table_14655011(128), NTI12150675);
    var new_char_14675630 = false;
    var current_rect_14675636 = {Field0: 0, Field1: 0, Field2: 0, Field3: 0};
    var i_14675638 = 0;
    var char_pos_14675640 = 0;
    L7: do {
      var x_14675648 = 0;
      var i_16810326 = 0;
      L8: do {
          L9: while (true) {
          if (!(i_16810326 < font_14645436.w)) break L9;
            x_14675648 = i_16810326;
            var color_14675649 = font_14645436.data[chckIndx(x_14675648, 0, (font_14645436.data != null ? font_14645436.data.length : 0)+0-1)-0];
            if ((color_14675649 == border_color_14645453)) {
            current_rect_14675636.Field2 = subInt(x_14675648, current_rect_14675636.Field0);
            if (!((current_rect_14675636.Field2 == 0))) {
            current_rect_14675636.Field3 = subInt(font_14645436.h, 1);
            L10: do {
              var y_14680008 = 0;
              var i_16810295 = 0;
              L11: do {
                  L12: while (true) {
                  if (!(i_16810295 < font_14645436.h)) break L12;
                    y_14680008 = i_16810295;
                    var color_14680009 = font_14645436.data[chckIndx(addInt(mulInt(y_14680008, font_14645436.w), x_14675648), 0, (font_14645436.data != null ? font_14645436.data.length : 0)+0-1)-0];
                    if ((color_14680009 == border_color_14645453)) {
                    current_rect_14675636.Field3 = y_14680008;
                    }
                    
                    i_16810295 = addInt(i_16810295, 1);
                  }
              } while(false);
            } while(false);
            var char_id_14680010 = 0;
            if ((chars_14645318[chckIndx(char_pos_14675640, 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] <= 127)) {
            char_id_14680010 = chckRange(chars_14645318[chckIndx(char_pos_14675640, 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0], -2147483648, 2147483647);
            char_pos_14675640 = addInt(char_pos_14675640, 1);
            }
            else {
            if ((((chars_14645318[chckIndx(char_pos_14675640, 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] >>> 0) >>> 5) == 6)) {
            if ((char_pos_14675640 <= subInt((chars_14645318 != null ? chars_14645318.length : 0), 2))) {
            char_id_14680010 = chckRange((((chars_14645318[chckIndx(char_pos_14675640, 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] & 31) << 6) | (chars_14645318[chckIndx(addInt(char_pos_14675640, 1), 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
            char_pos_14675640 = addInt(char_pos_14675640, 2);
            }
            else {
              char_id_14680010 = 65533;
              char_pos_14675640 = addInt(char_pos_14675640, 1);
            }
            
            }
            else {
            if ((((chars_14645318[chckIndx(char_pos_14675640, 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] >>> 0) >>> 4) == 14)) {
            if ((char_pos_14675640 <= subInt((chars_14645318 != null ? chars_14645318.length : 0), 3))) {
            char_id_14680010 = chckRange(((((chars_14645318[chckIndx(char_pos_14675640, 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] & 15) << 12) | ((chars_14645318[chckIndx(addInt(char_pos_14675640, 1), 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] & 63) << 6)) | (chars_14645318[chckIndx(addInt(char_pos_14675640, 2), 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
            char_pos_14675640 = addInt(char_pos_14675640, 3);
            }
            else {
              char_id_14680010 = 65533;
              char_pos_14675640 = addInt(char_pos_14675640, 1);
            }
            
            }
            else {
            if ((((chars_14645318[chckIndx(char_pos_14675640, 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] >>> 0) >>> 3) == 30)) {
            if ((char_pos_14675640 <= subInt((chars_14645318 != null ? chars_14645318.length : 0), 4))) {
            char_id_14680010 = chckRange((((((chars_14645318[chckIndx(char_pos_14675640, 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] & 7) << 18) | ((chars_14645318[chckIndx(addInt(char_pos_14675640, 1), 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] & 63) << 12)) | ((chars_14645318[chckIndx(addInt(char_pos_14675640, 2), 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] & 63) << 6)) | (chars_14645318[chckIndx(addInt(char_pos_14675640, 3), 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
            char_pos_14675640 = addInt(char_pos_14675640, 4);
            }
            else {
              char_id_14680010 = 65533;
              char_pos_14675640 = addInt(char_pos_14675640, 1);
            }
            
            }
            else {
            if ((((chars_14645318[chckIndx(char_pos_14675640, 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] >>> 0) >>> 2) == 62)) {
            if ((char_pos_14675640 <= subInt((chars_14645318 != null ? chars_14645318.length : 0), 5))) {
            char_id_14680010 = chckRange(((((((chars_14645318[chckIndx(char_pos_14675640, 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] & 3) << 24) | ((chars_14645318[chckIndx(addInt(char_pos_14675640, 1), 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] & 63) << 18)) | ((chars_14645318[chckIndx(addInt(char_pos_14675640, 2), 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] & 63) << 12)) | ((chars_14645318[chckIndx(addInt(char_pos_14675640, 3), 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] & 63) << 6)) | (chars_14645318[chckIndx(addInt(char_pos_14675640, 4), 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
            char_pos_14675640 = addInt(char_pos_14675640, 5);
            }
            else {
              char_id_14680010 = 65533;
              char_pos_14675640 = addInt(char_pos_14675640, 1);
            }
            
            }
            else {
            if ((((chars_14645318[chckIndx(char_pos_14675640, 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] >>> 0) >>> 1) == 126)) {
            if ((char_pos_14675640 <= subInt((chars_14645318 != null ? chars_14645318.length : 0), 6))) {
            char_id_14680010 = chckRange((((((((chars_14645318[chckIndx(char_pos_14675640, 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] & 1) << 30) | ((chars_14645318[chckIndx(addInt(char_pos_14675640, 1), 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] & 63) << 24)) | ((chars_14645318[chckIndx(addInt(char_pos_14675640, 2), 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] & 63) << 18)) | ((chars_14645318[chckIndx(addInt(char_pos_14675640, 3), 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] & 63) << 12)) | ((chars_14645318[chckIndx(addInt(char_pos_14675640, 4), 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] & 63) << 6)) | (chars_14645318[chckIndx(addInt(char_pos_14675640, 5), 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
            char_pos_14675640 = addInt(char_pos_14675640, 6);
            }
            else {
              char_id_14680010 = 65533;
              char_pos_14675640 = addInt(char_pos_14675640, 1);
            }
            
            }
            else {
              char_id_14680010 = chckRange(chars_14645318[chckIndx(char_pos_14675640, 0, (chars_14645318 != null ? chars_14645318.length : 0)+0-1)-0], -2147483648, 2147483647);
              char_pos_14675640 = addInt(char_pos_14675640, 1);
            }
            }}}}}
            if (has_key_14925316(font_14645436.rects, char_id_14680010)) {
            raiseException({message: (makeNimstrLit("font already has character: ") || []).concat(HEX24_1715214(char_id_14680010) || [],makeNimstrLit(" index: ") || [],cstrToNimstr((i_14675638)+"") || []), parent: null, m_type: NTI6217, name: null, trace: null, up: null}, "Exception");
            }
            
            HEX5BHEX5DHEX3D_14940122(font_14645436.rects, char_id_14680010, current_rect_14675636);
            i_14675638 = addInt(i_14675638, 1);
            }
            
            new_char_14675630 = true;
            current_rect_14675636.Field0 = addInt(x_14675648, 1);
            }
            
            i_16810326 = addInt(i_16810326, 1);
          }
      } while(false);
    } while(false);
    if (!((len_15025138(font_14645436.rects) == nucruneLen(chars_14645318)))) {
    raiseException({message: (makeNimstrLit("didn\'t load all characters from font, loaded: ") || []).concat(cstrToNimstr((len_15025138(font_14645436.rects))+"") || [],makeNimstrLit(" bitmaps of specified chars ") || [],cstrToNimstr((nucruneLen(chars_14645318))+"") || []), parent: null, m_type: NTI6217, name: null, trace: null, up: null}, "Exception");
    }
    
    result_14645319 = font_14645436;
    break BeforeRet;
  } while (false);

  return result_14645319;

}
function set_font_13916237(font_id_13916239) {
  BeforeRet: do {
    if ((16 < font_id_13916239)) {
    break BeforeRet;
    }
    
    current_font_id_12170309[0] = font_id_13916239;
    current_font_12170308[0] = fonts_12170307[0][chckIndx(current_font_id_12170309[0], 0, (fonts_12170307[0] != null ? fonts_12170307[0].length : 0)+0-1)-0];
  } while (false);

  
}
function load_font_15030045(index_15030047, filename_15030048) {
    var Tmp2;
    function HEX3Aanonymous_15035005(surface_15035007) {
        fonts_12170307[0][chckIndx(index_15030047, 0, (fonts_12170307[0] != null ? fonts_12170307[0].length : 0)+0-1)-0] = create_font_from_surface_14645315(surface_15035007, chars_15030057[0]);
        if (should_replace_15030056) {
        console.log("updating current font ", index_15030047);
        set_font_13916237(chckRange(index_15030047, 0, 15));
        }
        

      
    }

    var should_replace_15030056 = (current_font_12170308[0] == fonts_12170307[0][chckIndx(index_15030047, 0, (fonts_12170307[0] != null ? fonts_12170307[0].length : 0)+0-1)-0]);
    var chars_15030057 = [null];
    var dat_path_15030058 = null;
++excHandler;
    Tmp2 = framePtr;
    try {
    dat_path_15030058 = nimCopy(null, join_path_13651002(asset_path_12170274[0], (filename_15030048 || []).concat(makeNimstrLit(".dat") || [])), NTI112);
    chars_15030057[0] = nimCopy(null, read_file_13450043(dat_path_15030058), NTI112);
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
    framePtr = Tmp2;
    if (lastJSError && (isObj(lastJSError.m_type, NTI6223))) {
    raiseException({message: (makeNimstrLit("Missing ") || []).concat(dat_path_15030058 || [],makeNimstrLit(" needed if not passing chars to loadFont") || []), parent: null, m_type: NTI6217, name: null, trace: null, up: null}, "Exception");
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = Tmp2;
    }
    nsuRemoveSuffixCharSet(chars_15030057, 0, ConstSet2);
    load_surface_rgba_13455063(join_path_13651002(asset_path_12170274[0], filename_15030048), HEX3Aanonymous_15035005);

  
}
function rand_13655243(r_13655246, max_13655247) {
  var result_13655248 = 0;

  BeforeRet: do {
    if ((max_13655247 == 0)) {
    break BeforeRet;
    }
    
    L1: do {
        L2: while (true) {
        if (!true) break L2;
          var x_13655249 = next_13653458(r_13655246);
          if ((x_13655249 <= ((4294967295 - (4294967295 % max_13655247)) >>> 0))) {
          result_13655248 = chckRange((x_13655249 % ((max_13655247 + 1) )), -2147483648, 2147483647);
          break BeforeRet;
          }
          
        }
    } while(false);
  } while (false);

  return result_13655248;

}
function rand_16355120(r_16355123, x_16355125) {
  var result_16355126 = 0;

    result_16355126 = addInt(rand_13655243(r_16355123, chckRange(subInt(x_16355125.b, x_16355125.a), 0, 2147483647)), x_16355125.a);

  return result_16355126;

}
function rand_16355095(x_16355099) {
  var result_16355100 = 0;

    result_16355100 = rand_16355120(state_13653205[0], x_16355099);

  return result_16355100;

}
function HEX2EHEX2E_1980220(a_1980225, b_1980227) {
  var result_1980229 = {a: 0, b: 0};

    nimCopy(result_1980229, {a: a_1980225, b: b_1980227}, NTI1001907);

  return result_1980229;

}
function sample_16365058(a_16365062) {
  var result_16365063 = 0;

    result_16365063 = a_16365062[chckIndx(rand_16355095(HEX2EHEX2E_1980220(0, (a_16365062 != null ? (a_16365062.length-1) : -1))), 0, (a_16365062 != null ? a_16365062.length : 0)+0-1)-0];

  return result_16365063;

}
function rnd_16365052(a_16365056) {
  var result_16365057 = 0;

  BeforeRet: do {
    result_16365057 = sample_16365058(a_16365056);
    break BeforeRet;
  } while (false);

  return result_16365057;

}
function find_16370040(a_16370044, item_16370045) {
  var result_16370046 = 0;

  BeforeRet: do {
    L1: do {
      var i_16380214 = 0;
      var i_16810368 = 0;
      var l_16810369 = (a_16370044 != null ? a_16370044.length : 0);
      L2: do {
          L3: while (true) {
          if (!(i_16810368 < l_16810369)) break L3;
            i_16380214 = a_16370044[chckIndx(i_16810368, 0, (a_16370044 != null ? a_16370044.length : 0)+0-1)-0];
            if ((i_16380214 == item_16370045)) {
            break BeforeRet;
            }
            
            result_16370046 = addInt(result_16370046, 1);
            i_16810368 = addInt(i_16810368, 1);
            if (!(((a_16370044 != null ? a_16370044.length : 0) == l_16810369))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    result_16370046 = -1;
  } while (false);

  return result_16370046;

}
function skip_8695026(s_8695028, token_8695029, start_8695030) {
  var result_8695032 = 0;

    L1: do {
        L2: while (true) {
        if (!(((addInt(start_8695030, result_8695032) < (s_8695028 != null ? s_8695028.length : 0)) && (result_8695032 < (token_8695029 != null ? token_8695029.length : 0))) && (s_8695028[chckIndx(addInt(result_8695032, start_8695030), 0, (s_8695028 != null ? s_8695028.length : 0)+0-1)-0] == token_8695029[chckIndx(result_8695032, 0, (token_8695029 != null ? token_8695029.length : 0)+0-1)-0]))) break L2;
          result_8695032 = addInt(result_8695032, 1);
        }
    } while(false);
    if (!((result_8695032 == (token_8695029 != null ? token_8695029.length : 0)))) {
    result_8695032 = 0;
    }
    

  return result_8695032;

}
function integer_out_of_range_error_8745049() {
    raiseException({message: makeNimstrLit("Parsed integer outside of valid range"), parent: null, m_type: NTI6243, name: null, trace: null, up: null}, "ValueError");

  
}
function raw_parse_int_8750201(s_8750203, b_8750205, b_8750205_Idx, start_8750206) {
      var Tmp1;
          var Tmp4;
      var Tmp7;

  var result_8750208 = 0;

    var sign_8750209 = -1;
    var i_8750210 = start_8750206;
    if ((i_8750210 < (s_8750203 != null ? s_8750203.length : 0))) {
    if ((s_8750203[chckIndx(i_8750210, 0, (s_8750203 != null ? s_8750203.length : 0)+0-1)-0] == 43)) {
    i_8750210 += 1;
    }
    else {
    if ((s_8750203[chckIndx(i_8750210, 0, (s_8750203 != null ? s_8750203.length : 0)+0-1)-0] == 45)) {
    i_8750210 += 1;
    sign_8750209 = 1;
    }
    }
    }
    
      if (!(i_8750210 < (s_8750203 != null ? s_8750203.length : 0))) Tmp1 = false; else {        Tmp1 = (ConstSet3[s_8750203[chckIndx(i_8750210, 0, (s_8750203 != null ? s_8750203.length : 0)+0-1)-0]] != undefined);      }    if (Tmp1) {
    b_8750205[b_8750205_Idx] = 0;
    L2: do {
        L3: while (true) {
          if (!(i_8750210 < (s_8750203 != null ? s_8750203.length : 0))) Tmp4 = false; else {            Tmp4 = (ConstSet4[s_8750203[chckIndx(i_8750210, 0, (s_8750203 != null ? s_8750203.length : 0)+0-1)-0]] != undefined);          }        if (!Tmp4) break L3;
          var c_8760016 = (s_8750203[chckIndx(i_8750210, 0, (s_8750203 != null ? s_8750203.length : 0)+0-1)-0] - 48);
          if ((Math.trunc((-9223372036854775808 + c_8760016) / 10) <= b_8750205[b_8750205_Idx])) {
          b_8750205[b_8750205_Idx] = ((b_8750205[b_8750205_Idx] * 10) - c_8760016);
          }
          else {
          integer_out_of_range_error_8745049();
          }
          
          i_8750210 += 1;
          L5: do {
              L6: while (true) {
              if (!((i_8750210 < (s_8750203 != null ? s_8750203.length : 0)) && (s_8750203[chckIndx(i_8750210, 0, (s_8750203 != null ? s_8750203.length : 0)+0-1)-0] == 95))) break L6;
                i_8750210 += 1;
              }
          } while(false);
        }
    } while(false);
      if (!(sign_8750209 == -1)) Tmp7 = false; else {        Tmp7 = (b_8750205[b_8750205_Idx] == -9223372036854775808);      }    if (Tmp7) {
    integer_out_of_range_error_8745049();
    }
    else {
      b_8750205[b_8750205_Idx] = (b_8750205[b_8750205_Idx] * sign_8750209);
      result_8750208 = (i_8750210 - start_8750206);
    }
    
    }
    

  return result_8750208;

}
function npuParseBiggestInt(s_8765203, number_8765205, number_8765205_Idx, start_8765206) {
  var result_8765208 = 0;

    var res_8765209 = [0];
    result_8765208 = raw_parse_int_8750201(s_8765203, res_8765209, 0, start_8765206);
    if (!((result_8765208 == 0))) {
    number_8765205[number_8765205_Idx] = res_8765209[0];
    }
    

  return result_8765208;

}
function npuParseInt(s_8770016, number_8770018, number_8770018_Idx, start_8770019) {
      var Tmp1;

  var result_8770021 = 0;

    var res_8770022 = [0];
    result_8770021 = npuParseBiggestInt(s_8770016, res_8770022, 0, start_8770019);
      if ((res_8770022[0] < -2147483648)) Tmp1 = true; else {        Tmp1 = (2147483647 < res_8770022[0]);      }    if (Tmp1) {
    integer_out_of_range_error_8745049();
    }
    
    if (!((result_8770021 == 0))) {
    number_8770018[number_8770018_Idx] = chckRange(res_8770022[0], -2147483648, 2147483647);
    }
    

  return result_8770021;

}
function wrap_14550013(x_14550016, m_14550017) {
  var result_15290522 = 0;

  BeforeRet: do {
    if ((m_14550017 == 0)) {
    result_15290522 = 0;
    break BeforeRet;
    }
    
    result_15290522 = modInt(addInt(modInt(x_14550016, m_14550017), m_14550017), m_14550017);
    break BeforeRet;
  } while (false);

  return result_15290522;

}
function handle_data_16240034(d_16240036) {
    var Tmp1;

    var i_16240037 = [0];
    var pid_16240038 = [0];
    var score_16240039 = [0];
      var inp_16240046 = nimCopy(null, d_16240036, NTI112);
      var idx_16240044 = 0;
      var res_16240045 = false;
      var res_len_16240047 = skip_8695026(inp_16240046, makeNimstrLit("bx:"), idx_16240044);
      if (!((res_len_16240047 == 0))) {
      idx_16240044 = addInt(idx_16240044, res_len_16240047);
      var res_len_16240049 = npuParseInt(inp_16240046, i_16240037, 0, idx_16240044);
      if (!((res_len_16240049 == 0))) {
      idx_16240044 = addInt(idx_16240044, res_len_16240049);
      res_16240045 = true;
      }
      
      }
      
    if (res_16240045) {
    ball_pos_16232094[0][chckIndx(0, 0, (ball_pos_16232094[0] != null ? ball_pos_16232094[0].length : 0)+0-1)-0] = i_16240037[0];
    }
    else {
      var inp_16260016 = nimCopy(null, d_16240036, NTI112);
      var idx_16260014 = 0;
      var res_16260015 = false;
      var res_len_16260017 = skip_8695026(inp_16260016, makeNimstrLit("by:"), idx_16260014);
      if (!((res_len_16260017 == 0))) {
      idx_16260014 = addInt(idx_16260014, res_len_16260017);
      var res_len_16260019 = npuParseInt(inp_16260016, i_16240037, 0, idx_16260014);
      if (!((res_len_16260019 == 0))) {
      idx_16260014 = addInt(idx_16260014, res_len_16260019);
      res_16260015 = true;
      }
      
      }
      
    if (res_16260015) {
    ball_pos_16232094[0][chckIndx(1, 0, (ball_pos_16232094[0] != null ? ball_pos_16232094[0].length : 0)+0-1)-0] = i_16240037[0];
    }
    else {
      var inp_16280016 = nimCopy(null, d_16240036, NTI112);
      var idx_16280014 = 0;
      var res_16280015 = false;
      var res_len_16280017 = skip_8695026(inp_16280016, makeNimstrLit("p:"), idx_16280014);
      if (!((res_len_16280017 == 0))) {
      idx_16280014 = addInt(idx_16280014, res_len_16280017);
      var res_len_16280019 = npuParseInt(inp_16280016, i_16240037, 0, idx_16280014);
      if (!((res_len_16280019 == 0))) {
      idx_16280014 = addInt(idx_16280014, res_len_16280019);
      res_16280015 = true;
      }
      
      }
      
    if (res_16280015) {
    (Tmp1 = player_pos_16232084[0][chckIndx(wrap_14550013(addInt(player_id_16232093[0], 1), 2), 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0], Tmp1)[chckIndx(0, 0, (Tmp1 != null ? Tmp1.length : 0)+0-1)-0] = i_16240037[0];
    }
    else {
      var inp_16300017 = nimCopy(null, d_16240036, NTI112);
      var idx_16300015 = 0;
      var res_16300016 = false;
      var res_len_16300018 = skip_8695026(inp_16300017, makeNimstrLit("stop"), idx_16300015);
      if (!((res_len_16300018 == 0))) {
      idx_16300015 = addInt(idx_16300015, res_len_16300018);
      res_16300016 = true;
      }
      
    if (res_16300016) {
    pause_timer_16232098[0] = 1.0000000000000000e+000;
    reset_timer_16232100[0] = 1.0000000000000000e+000;
    }
    else {
      var inp_16310014 = nimCopy(null, d_16240036, NTI112);
      var idx_16310012 = 0;
      var res_16310013 = false;
      var res_len_16310015 = skip_8695026(inp_16310014, makeNimstrLit("start"), idx_16310012);
      if (!((res_len_16310015 == 0))) {
      idx_16310012 = addInt(idx_16310012, res_len_16310015);
      res_16310013 = true;
      }
      
    if (res_16310013) {
    pause_timer_16232098[0] = 0.0;
    reset_timer_16232100[0] = 0.0;
    }
    else {
      var inp_16320013 = nimCopy(null, d_16240036, NTI112);
      var idx_16320011 = 0;
      var res_16320012 = false;
      var res_len_16320014 = skip_8695026(inp_16320013, makeNimstrLit("score:"), idx_16320011);
      if (!((res_len_16320014 == 0))) {
      idx_16320011 = addInt(idx_16320011, res_len_16320014);
      var res_len_16320016 = npuParseInt(inp_16320013, pid_16240038, 0, idx_16320011);
      if (!((res_len_16320016 == 0))) {
      idx_16320011 = addInt(idx_16320011, res_len_16320016);
      var res_len_16320017 = skip_8695026(inp_16320013, makeNimstrLit(":"), idx_16320011);
      if (!((res_len_16320017 == 0))) {
      idx_16320011 = addInt(idx_16320011, res_len_16320017);
      var res_len_16320019 = npuParseInt(inp_16320013, score_16240039, 0, idx_16320011);
      if (!((res_len_16320019 == 0))) {
      idx_16320011 = addInt(idx_16320011, res_len_16320019);
      res_16320012 = true;
      }
      
      }
      
      }
      
      }
      
    if (res_16320012) {
    player_scores_16232088[0][chckIndx(pid_16240038[0], 0, (player_scores_16232088[0] != null ? player_scores_16232088[0].length : 0)+0-1)-0] = score_16240039[0];
    }
    }}}}}
    last_message_timer_16232101[0] = 0;

  
}
function vec2f_16345024(x_16345028, y_16345029) {
  var result_16345032 = new Float32Array(2);

    result_16345032[chckIndx(0, 0, (result_16345032 != null ? result_16345032.length : 0)+0-1)-0] = x_16345028;
    result_16345032[chckIndx(1, 0, (result_16345032 != null ? result_16345032.length : 0)+0-1)-0] = y_16345029;

  return result_16345032;

}
function vec2f_15860005(x_15860009, y_15860010) {
  var result_15860013 = new Float32Array(2);

    result_15860013[chckIndx(0, 0, (result_15860013 != null ? result_15860013.length : 0)+0-1)-0] = x_15860009;
    result_15860013[chckIndx(1, 0, (result_15860013 != null ? result_15860013.length : 0)+0-1)-0] = y_15860010;

  return result_15860013;

}
function rand_13655281(r_13655284, max_13655307) {
  var result_13655308 = 0.0;

    var x_13655309 = next_13653458(r_13655284);
    result_13655308 = ((x_13655309 / 4294967295) * max_13655307);

  return result_13655308;

}
function rand_13655435(max_13655437) {
  var result_13655438 = 0.0;

    result_13655438 = rand_13655281(state_13653205[0], chckRange(max_13655437, 0.0, Infinity));

  return result_13655438;

}
function rnd_16355023(min_16355026, max_16355027) {
  var result_16355028 = 0.0;

  BeforeRet: do {
    result_16355028 = (rand_13655435((max_16355027 - min_16355026)) + min_16355026);
    break BeforeRet;
  } while (false);

  return result_16355028;

}
function sample_16355051(a_16355055) {
  var result_16355056 = 0.0;

    result_16355056 = a_16355055[chckIndx(rand_16355095(HEX2EHEX2E_1980220(0, (a_16355055 != null ? (a_16355055.length-1) : -1))), 0, (a_16355055 != null ? a_16355055.length : 0)+0-1)-0];

  return result_16355056;

}
function rnd_16355045(a_16355049) {
  var result_16355050 = 0.0;

  BeforeRet: do {
    result_16355050 = sample_16355051(a_16355049);
    break BeforeRet;
  } while (false);

  return result_16355050;

}
function HEX2BHEX3D_14310027(x_14310031, x_14310031_Idx, y_14310032) {
    x_14310031[x_14310031_Idx] = (x_14310031[x_14310031_Idx] + y_14310032);

  
}
function length2_16355274(a_16355288) {
  var result_16355289 = [0.0];

    L1: do {
      var i_16355298 = 0;
      var i_16810395 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16810395 < 2)) break L3;
            i_16355298 = i_16810395;
            HEX2BHEX3D_14310027(result_16355289, 0, (a_16355288[chckIndx(i_16355298, 0, (a_16355288 != null ? a_16355288.length : 0)+0-1)-0] * a_16355288[chckIndx(i_16355298, 0, (a_16355288 != null ? a_16355288.length : 0)+0-1)-0]));
            i_16810395 = addInt(i_16810395, 1);
          }
      } while(false);
    } while(false);

  return result_16355289[0];

}
function HEX2A_15880086(a_15880091, s_15880092) {
  var result_15880094 = new Float32Array(2);

    result_15880094[chckIndx(0, 0, (result_15880094 != null ? result_15880094.length : 0)+0-1)-0] = (a_15880091[chckIndx(0, 0, (a_15880091 != null ? a_15880091.length : 0)+0-1)-0] * s_15880092);
    result_15880094[chckIndx(1, 0, (result_15880094 != null ? result_15880094.length : 0)+0-1)-0] = (a_15880091[chckIndx(1, 0, (a_15880091 != null ? a_15880091.length : 0)+0-1)-0] * s_15880092);

  return result_15880094;

}
function HEX2F_16070221(a_16070225, s_16070226) {
  var result_16070228 = new Float32Array(2);

    result_16070228[chckIndx(0, 0, (result_16070228 != null ? result_16070228.length : 0)+0-1)-0] = (a_16070225[chckIndx(0, 0, (a_16070225 != null ? a_16070225.length : 0)+0-1)-0] / s_16070226);
    result_16070228[chckIndx(1, 0, (result_16070228 != null ? result_16070228.length : 0)+0-1)-0] = (a_16070225[chckIndx(1, 0, (a_16070225 != null ? a_16070225.length : 0)+0-1)-0] / s_16070226);

  return result_16070228;

}
function clamp_16355262(a_16355265, max_length_16355266) {
  var result_16355267 = new Float32Array(2);

    var d2_16355341 = length2_16355274(a_16355265);
    if (((max_length_16355266 * max_length_16355266) < d2_16355341)) {
    var d_16355342 = Math.sqrt(d2_16355341);
    nimCopy(result_16355267, HEX2A_15880086(HEX2F_16070221(a_16355265, d_16355342), max_length_16355266), NTI15356111);
    }
    else {
      nimCopy(result_16355267, a_16355265, NTI15356111);
    }
    

  return result_16355267;

}
function reset_ball_16345020() {
    nimCopy(ball_pos_16232094[0], vec2f_16345024(64, 64), NTI15356111);
    nimCopy(ball_vel_16232095[0], vec2f_15860005(rnd_16355023(-1.0000000000000000e+000, 1.0000000000000000e+000), rnd_16355045([-1.0000000000000000e+000, 1.0000000000000000e+000])), NTI15356111);
    nimCopy(ball_vel_16232095[0], clamp_16355262(ball_vel_16232095[0], ball_speed_16232099[0]), NTI15356111);
    ball_speed_16232099[0] = 1.0000000000000000e+000;
    conn_16232066[0].send("stop");
    conn_16232066[0].send(toJSStr((makeNimstrLit("bx:") || []).concat(cstrToNimstr((((ball_pos_16232094[0][chckIndx(0, 0, (ball_pos_16232094[0] != null ? ball_pos_16232094[0].length : 0)+0-1)-0])|0))+"") || [])));
    conn_16232066[0].send(toJSStr((makeNimstrLit("by:") || []).concat(cstrToNimstr((((ball_pos_16232094[0][chckIndx(1, 0, (ball_pos_16232094[0] != null ? ball_pos_16232094[0].length : 0)+0-1)-0])|0))+"") || [])));

  
}
function set_window_title_13650039(title_13650041) {
    document.title = toJSStr(title_13650041);

  
}
function set_window_title_15290478(title_15290480) {
    set_window_title_13650039(title_15290480);

  
}
function game_init_16365040() {
    function HEX3Aanonymous_16370001(data_16370003) {
        rawEcho(makeNimstrLit("disconnected"));
        connected_16232079[0] = false;
        connecting_16232078[0] = 0;
        peer_16232067[0].reconnect();

      
    }
    function HEX3Aanonymous_16370021(data_16370023) {
        function HEX3Aanonymous_16385001(data_16385003) {
            handle_data_16240034(cstrToNimstr(data_16385003));

          
        }

        conn_16232066[0] = data_16370023;
        var peer_str_16370024 = cstrToNimstr(conn_16232066[0].peer);
        peer_str_16370024 = nimCopy(null, substr_341022(peer_str_16370024, 8, 12), NTI112);
        rawEcho(makeNimstrLit("got incoming connection from "), peer_str_16370024);
        L1: do {
          var i_16370039 = 0;
          var i_16810364 = 0;
          L2: do {
              L3: while (true) {
              if (!(i_16810364 < 4)) break L3;
                i_16370039 = i_16810364;
                var ch_16380234 = find_16370040(char_set_16232104[0], peer_str_16370024[chckIndx(i_16370039, 0, (peer_str_16370024 != null ? peer_str_16370024.length : 0)+0-1)-0]);
                if (!((ch_16380234 == -1))) {
                remote_id_16232074[0][chckIndx(i_16370039, 0, (remote_id_16232074[0] != null ? remote_id_16232074[0].length : 0)+0-1)-0] = ch_16380234;
                }
                
                i_16810364 = addInt(i_16810364, 1);
              }
          } while(false);
        } while(false);
        connected_16232079[0] = true;
        connecting_16232078[0] = 0;
        last_message_timer_16232101[0] = 0;
        conn_16232066[0].on("data", HEX3Aanonymous_16385001);
        player_id_16232093[0] = 0;
        is_host_16232080[0] = true;
        reset_ball_16345020();
        reset_timer_16232100[0] = 1.0000000000000000e+000;
        set_window_title_15290478((makeNimstrLit("nicoTest ") || []).concat(my_id_16232068[0] || [],makeNimstrLit(" - host") || []));

      
    }

    srand_15285015();
    load_font_15030045(0, makeNimstrLit("font.png"));
    my_id_16232068[0] = nimCopy(null, [], NTI112);
    L1: do {
      var i_16365050 = 0;
      var i_16810271 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16810271 < 4)) break L3;
            i_16365050 = i_16810271;
            if (my_id_16232068[0] != null) { addChar(my_id_16232068[0], rnd_16365052(char_set_16232104[0])); } else { my_id_16232068[0] = [rnd_16365052(char_set_16232104[0])]; };
            i_16810271 = addInt(i_16810271, 1);
          }
      } while(false);
    } while(false);
    peer_16232067[0] = new Peer(toJSStr((makeNimstrLit("nicoTest") || []).concat(my_id_16232068[0] || [])), {debug: 1});
    peer_16232067[0].on("disconnected", HEX3Aanonymous_16370001, null);
    peer_16232067[0].on("connection", HEX3Aanonymous_16370021, null);
    player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(0, 0, (player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0] = divInt(screen_width_12170232[0], 2);
    player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(1, 0, (player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0] = 8;
    player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(0, 0, (player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0] = divInt(screen_width_12170232[0], 2);
    player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(1, 0, (player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0] = subInt(screen_height_12170235[0], 9);
    set_window_title_15290478((makeNimstrLit("nicoTest ") || []).concat(my_id_16232068[0] || []));

  
}
function btnpr_11610070(self_11610072, button_11610073, repeat_11610074) {
      var Tmp1;
        var Tmp2;

  var result_11610076 = false;

  BeforeRet: do {
    var v_11610077 = self_11610072.buttons[chckIndx(button_11610073, 0, (self_11610072.buttons != null ? self_11610072.buttons.length : 0)+0-1)-0];
      if ((v_11610077 == 2)) Tmp1 = true; else {        if (!(2 < v_11610077)) Tmp2 = false; else {          Tmp2 = (modInt(subInt(v_11610077, 2), repeat_11610074) == 0);        }        Tmp1 = Tmp2;      }    if (Tmp1) {
    result_11610076 = true;
    break BeforeRet;
    }
    
    if ((button_11610073 == 0)) {
    if ((self_11610072.axes[chckIndx(0, 0, (self_11610072.axes != null ? self_11610072.axes.length : 0)+0-1)-0].Field0 < -(self_11610072.deadzone))) {
    var v_11615006 = self_11610072.axes[chckIndx(0, 0, (self_11610072.axes != null ? self_11610072.axes.length : 0)+0-1)-0].Field2;
    result_11610076 = (modInt(v_11615006, repeat_11610074) == 0);
    break BeforeRet;
    }
    
    }
    else {
    if ((button_11610073 == 1)) {
    if ((self_11610072.deadzone < self_11610072.axes[chckIndx(0, 0, (self_11610072.axes != null ? self_11610072.axes.length : 0)+0-1)-0].Field0)) {
    var v_11620001 = self_11610072.axes[chckIndx(0, 0, (self_11610072.axes != null ? self_11610072.axes.length : 0)+0-1)-0].Field2;
    result_11610076 = (modInt(v_11620001, repeat_11610074) == 0);
    break BeforeRet;
    }
    
    }
    else {
    if ((button_11610073 == 2)) {
    if ((self_11610072.axes[chckIndx(1, 0, (self_11610072.axes != null ? self_11610072.axes.length : 0)+0-1)-0].Field0 < -(self_11610072.deadzone))) {
    var v_11620007 = self_11610072.axes[chckIndx(1, 0, (self_11610072.axes != null ? self_11610072.axes.length : 0)+0-1)-0].Field2;
    result_11610076 = (modInt(v_11620007, repeat_11610074) == 0);
    break BeforeRet;
    }
    
    }
    else {
    if ((button_11610073 == 3)) {
    if ((self_11610072.deadzone < self_11610072.axes[chckIndx(1, 0, (self_11610072.axes != null ? self_11610072.axes.length : 0)+0-1)-0].Field0)) {
    var v_11625001 = self_11610072.axes[chckIndx(1, 0, (self_11610072.axes != null ? self_11610072.axes.length : 0)+0-1)-0].Field2;
    result_11610076 = (modInt(v_11625001, repeat_11610074) == 0);
    break BeforeRet;
    }
    
    }
    }}}
    result_11610076 = false;
    break BeforeRet;
  } while (false);

  return result_11610076;

}
function btnpr_13930030(b_13930032, repeat_13930033) {
  var result_14005025 = false;

  BeforeRet: do {
    L1: do {
      var c_14005032 = null;
      var i_16810410 = 0;
      var l_16810411 = (controllers_12170254[0] != null ? controllers_12170254[0].length : 0);
      L2: do {
          L3: while (true) {
          if (!(i_16810410 < l_16810411)) break L3;
            c_14005032 = controllers_12170254[0][chckIndx(i_16810410, 0, (controllers_12170254[0] != null ? controllers_12170254[0].length : 0)+0-1)-0];
            if (btnpr_11610070(c_14005032, b_13930032, repeat_13930033)) {
            result_14005025 = true;
            break BeforeRet;
            }
            
            i_16810410 = addInt(i_16810410, 1);
            if (!(((controllers_12170254[0] != null ? controllers_12170254[0].length : 0) == l_16810411))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    result_14005025 = false;
    break BeforeRet;
  } while (false);

  return result_14005025;

}
function abs_75247(x_75249) {
    var Tmp1;

  var result_75250 = 0.0;

    if ((x_75249 < 0.0)) {
    Tmp1 = -(x_75249);
    }
    else {
    Tmp1 = x_75249;
    }
    
    result_75250 = Tmp1;

  return result_75250;

}
function axisp_11560074(self_11560076, axis_11560077, value_11560078) {
    var Tmp1;
    var Tmp2;
      var Tmp3;

  var result_11560079 = false;

  BeforeRet: do {
    if ((value_11560078 < 0.0)) {
    if (!(self_11560076.axes[chckIndx(axis_11560077, 0, (self_11560076.axes != null ? self_11560076.axes.length : 0)+0-1)-0].Field0 < -(self_11560076.deadzone))) Tmp1 = false; else {      Tmp1 = !((self_11560076.axes[chckIndx(axis_11560077, 0, (self_11560076.axes != null ? self_11560076.axes.length : 0)+0-1)-0].Field1 < -(self_11560076.deadzone)));    }    result_11560079 = Tmp1;
    break BeforeRet;
    }
    else {
    if ((0.0 < value_11560078)) {
    if (!(self_11560076.deadzone < self_11560076.axes[chckIndx(axis_11560077, 0, (self_11560076.axes != null ? self_11560076.axes.length : 0)+0-1)-0].Field0)) Tmp2 = false; else {      Tmp2 = !((self_11560076.deadzone < self_11560076.axes[chckIndx(axis_11560077, 0, (self_11560076.axes != null ? self_11560076.axes.length : 0)+0-1)-0].Field1));    }    result_11560079 = Tmp2;
    break BeforeRet;
    }
    else {
      if (!(abs_75247(self_11560076.axes[chckIndx(axis_11560077, 0, (self_11560076.axes != null ? self_11560076.axes.length : 0)+0-1)-0].Field0) < self_11560076.deadzone)) Tmp3 = false; else {        Tmp3 = !((abs_75247(self_11560076.axes[chckIndx(axis_11560077, 0, (self_11560076.axes != null ? self_11560076.axes.length : 0)+0-1)-0].Field1) < self_11560076.deadzone));      }      result_11560079 = Tmp3;
      break BeforeRet;
    }
    }
  } while (false);

  return result_11560079;

}
function btnp_11610014(self_11610016, button_11610017) {
    var Tmp1;
    var Tmp2;
    var Tmp3;
    var Tmp4;

  var result_11610018 = false;

  BeforeRet: do {
    if ((button_11610017 == 0)) {
    if ((self_11610016.buttons[chckIndx(button_11610017, 0, (self_11610016.buttons != null ? self_11610016.buttons.length : 0)+0-1)-0] == 2)) Tmp1 = true; else {      Tmp1 = axisp_11560074(self_11610016, 0, -1.0000000000000000e+000);    }    result_11610018 = Tmp1;
    break BeforeRet;
    }
    else {
    if ((button_11610017 == 1)) {
    if ((self_11610016.buttons[chckIndx(button_11610017, 0, (self_11610016.buttons != null ? self_11610016.buttons.length : 0)+0-1)-0] == 2)) Tmp2 = true; else {      Tmp2 = axisp_11560074(self_11610016, 0, 1.0000000000000000e+000);    }    result_11610018 = Tmp2;
    break BeforeRet;
    }
    else {
    if ((button_11610017 == 2)) {
    if ((self_11610016.buttons[chckIndx(button_11610017, 0, (self_11610016.buttons != null ? self_11610016.buttons.length : 0)+0-1)-0] == 2)) Tmp3 = true; else {      Tmp3 = axisp_11560074(self_11610016, 1, -1.0000000000000000e+000);    }    result_11610018 = Tmp3;
    break BeforeRet;
    }
    else {
    if ((button_11610017 == 3)) {
    if ((self_11610016.buttons[chckIndx(button_11610017, 0, (self_11610016.buttons != null ? self_11610016.buttons.length : 0)+0-1)-0] == 2)) Tmp4 = true; else {      Tmp4 = axisp_11560074(self_11610016, 1, 1.0000000000000000e+000);    }    result_11610018 = Tmp4;
    break BeforeRet;
    }
    }}}
    result_11610018 = (self_11610016.buttons[chckIndx(button_11610017, 0, (self_11610016.buttons != null ? self_11610016.buttons.length : 0)+0-1)-0] == 2);
    break BeforeRet;
  } while (false);

  return result_11610018;

}
function btnp_13930024(b_13930026) {
  var result_14000023 = false;

  BeforeRet: do {
    L1: do {
      var c_14000030 = null;
      var i_16810414 = 0;
      var l_16810415 = (controllers_12170254[0] != null ? controllers_12170254[0].length : 0);
      L2: do {
          L3: while (true) {
          if (!(i_16810414 < l_16810415)) break L3;
            c_14000030 = controllers_12170254[0][chckIndx(i_16810414, 0, (controllers_12170254[0] != null ? controllers_12170254[0].length : 0)+0-1)-0];
            if (btnp_11610014(c_14000030, b_13930026)) {
            result_14000023 = true;
            break BeforeRet;
            }
            
            i_16810414 = addInt(i_16810414, 1);
            if (!(((controllers_12170254[0] != null ? controllers_12170254[0].length : 0) == l_16810415))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    result_14000023 = false;
    break BeforeRet;
  } while (false);

  return result_14000023;

}
function axis_11560056(self_11560058, axis_11560059) {
  var result_11560060 = 0.0;

  BeforeRet: do {
    result_11560060 = self_11560058.axes[chckIndx(axis_11560059, 0, (self_11560058.axes != null ? self_11560058.axes.length : 0)+0-1)-0].Field0;
    break BeforeRet;
  } while (false);

  return result_11560060;

}
function btn_11575014(self_11575016, button_11575017) {
    var Tmp1;
    var Tmp2;
    var Tmp3;
    var Tmp4;

  var result_11575018 = false;

  BeforeRet: do {
    if ((button_11575017 == 0)) {
    if ((0 < self_11575016.buttons[chckIndx(button_11575017, 0, (self_11575016.buttons != null ? self_11575016.buttons.length : 0)+0-1)-0])) Tmp1 = true; else {      Tmp1 = (axis_11560056(self_11575016, 0) < -(self_11575016.deadzone));    }    result_11575018 = Tmp1;
    break BeforeRet;
    }
    else {
    if ((button_11575017 == 1)) {
    if ((0 < self_11575016.buttons[chckIndx(button_11575017, 0, (self_11575016.buttons != null ? self_11575016.buttons.length : 0)+0-1)-0])) Tmp2 = true; else {      Tmp2 = (self_11575016.deadzone < axis_11560056(self_11575016, 0));    }    result_11575018 = Tmp2;
    break BeforeRet;
    }
    else {
    if ((button_11575017 == 2)) {
    if ((0 < self_11575016.buttons[chckIndx(button_11575017, 0, (self_11575016.buttons != null ? self_11575016.buttons.length : 0)+0-1)-0])) Tmp3 = true; else {      Tmp3 = (axis_11560056(self_11575016, 1) < -(self_11575016.deadzone));    }    result_11575018 = Tmp3;
    break BeforeRet;
    }
    else {
    if ((button_11575017 == 3)) {
    if ((0 < self_11575016.buttons[chckIndx(button_11575017, 0, (self_11575016.buttons != null ? self_11575016.buttons.length : 0)+0-1)-0])) Tmp4 = true; else {      Tmp4 = (self_11575016.deadzone < axis_11560056(self_11575016, 1));    }    result_11575018 = Tmp4;
    break BeforeRet;
    }
    }}}
    result_11575018 = (0 < self_11575016.buttons[chckIndx(button_11575017, 0, (self_11575016.buttons != null ? self_11575016.buttons.length : 0)+0-1)-0]);
    break BeforeRet;
  } while (false);

  return result_11575018;

}
function btn_13930021(b_13930023) {
  var result_13985022 = false;

  BeforeRet: do {
    L1: do {
      var c_13985029 = null;
      var i_16810418 = 0;
      var l_16810419 = (controllers_12170254[0] != null ? controllers_12170254[0].length : 0);
      L2: do {
          L3: while (true) {
          if (!(i_16810418 < l_16810419)) break L3;
            c_13985029 = controllers_12170254[0][chckIndx(i_16810418, 0, (controllers_12170254[0] != null ? controllers_12170254[0].length : 0)+0-1)-0];
            if (btn_11575014(c_13985029, b_13930023)) {
            result_13985022 = true;
            break BeforeRet;
            }
            
            i_16810418 = addInt(i_16810418, 1);
            if (!(((controllers_12170254[0] != null ? controllers_12170254[0].length : 0) == l_16810419))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    result_13985022 = false;
    break BeforeRet;
  } while (false);

  return result_13985022;

}
function clamp_11700049(x_11700052, a_11700053, b_11700054) {
  var result_11700055 = 0;

  BeforeRet: do {
    if ((x_11700052 < a_11700053)) {
    result_11700055 = a_11700053;
    break BeforeRet;
    }
    
    if ((b_11700054 < x_11700052)) {
    result_11700055 = b_11700054;
    break BeforeRet;
    }
    
    result_11700055 = x_11700052;
    break BeforeRet;
  } while (false);

  return result_11700055;

}
function HEX2DHEX3D_14310001(x_14310005, x_14310005_Idx, y_14310006) {
    x_14310005[x_14310005_Idx] = (x_14310005[x_14310005_Idx] - y_14310006);

  
}
function vec2i_15375016(v_15375018) {
  var result_15375019 = new Int32Array(2);

    result_15375019[chckIndx(0, 0, (result_15375019 != null ? result_15375019.length : 0)+0-1)-0] = ((v_15375018[chckIndx(0, 0, (v_15375018 != null ? v_15375018.length : 0)+0-1)-0])|0);
    result_15375019[chckIndx(1, 0, (result_15375019 != null ? result_15375019.length : 0)+0-1)-0] = ((v_15375018[chckIndx(1, 0, (v_15375018 != null ? v_15375018.length : 0)+0-1)-0])|0);

  return result_15375019;

}
function HEX2BHEX3D_16480026(a_16480041, b_16480052) {
    L1: do {
      var i_16480061 = 0;
      var i_16810424 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16810424 < 2)) break L3;
            i_16480061 = i_16810424;
            HEX2BHEX3D_14310027(a_16480041, chckIndx(i_16480061, 0, (a_16480041 != null ? a_16480041.length : 0)+0-1)-0, b_16480052[chckIndx(i_16480061, 0, (b_16480052 != null ? b_16480052.length : 0)+0-1)-0]);
            i_16810424 = addInt(i_16810424, 1);
          }
      } while(false);
    } while(false);

  
}
function overlap_16232340(ax_16232342, ay_16232343, aw_16232344, ah_16232345, bx_16232346, by_16232347, bw_16232348, bh_16232349) {
    var Tmp1;
    var Tmp2;
    var Tmp3;

  var result_16232350 = false;

  BeforeRet: do {
    var aminx_16232351 = ax_16232342;
    var amaxx_16232352 = subInt(addInt(ax_16232342, aw_16232344), 1);
    var aminy_16232353 = ay_16232343;
    var amaxy_16232354 = subInt(addInt(ay_16232343, ah_16232345), 1);
    var bminx_16232355 = bx_16232346;
    var bmaxx_16232356 = subInt(addInt(bx_16232346, bw_16232348), 1);
    var bminy_16232357 = by_16232347;
    var bmaxy_16232358 = subInt(addInt(by_16232347, bh_16232349), 1);
    if ((bmaxx_16232356 <= aminx_16232351)) Tmp3 = true; else {      Tmp3 = (amaxx_16232352 <= bminx_16232355);    }    if (Tmp3) Tmp2 = true; else {      Tmp2 = (bmaxy_16232358 <= aminy_16232353);    }    if (Tmp2) Tmp1 = true; else {      Tmp1 = (amaxy_16232354 <= bminy_16232357);    }    result_16232350 = !(Tmp1);
    break BeforeRet;
  } while (false);

  return result_16232350;

}
function abs_75264(x_75266) {
    var Tmp1;

  var result_75267 = 0.0;

    if ((x_75266 < 0.0)) {
    Tmp1 = -(x_75266);
    }
    else {
    Tmp1 = x_75266;
    }
    
    result_75267 = Tmp1;

  return result_75267;

}
function HEX2AHEX3D_16620012(x_16620016, x_16620016_Idx, y_16620017) {
    x_16620016[x_16620016_Idx] = (x_16620016[x_16620016_Idx] * y_16620017);

  
}
function HEX2AHEX3D_16615052(a_16615057, s_16615058) {
    HEX2AHEX3D_16620012(a_16615057, chckIndx(0, 0, (a_16615057 != null ? a_16615057.length : 0)+0-1)-0, s_16615058);
    HEX2AHEX3D_16620012(a_16615057, chckIndx(1, 0, (a_16615057 != null ? a_16615057.length : 0)+0-1)-0, s_16615058);

  
}
function HEX3DHEX3D_16745003(x_16745008, y_16745010) {
  var result_16745011 = false;

  BeforeRet: do {
    L1: do {
      var f_16745221 = 0;
      var res_16810430 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_16810430 <= 1)) break L3;
            f_16745221 = chckRange(res_16810430, 0, 1);
            if (!((x_16745008[chckIndx(f_16745221, 0, (x_16745008 != null ? x_16745008.length : 0)+0-1)-0] == y_16745010[chckIndx(f_16745221, 0, (y_16745010 != null ? y_16745010.length : 0)+0-1)-0]))) {
            break BeforeRet;
            }
            
            res_16810430 = addInt(res_16810430, 1);
          }
      } while(false);
    } while(false);
    result_16745011 = true;
  } while (false);

  return result_16745011;

}
function game_update_16405085(dt_16405087) {
    function HEX3Aanonymous_16415065(data_16415067) {
        function HEX3Aanonymous_16415072(data_16415074) {
            handle_data_16240034(cstrToNimstr(data_16415074));

          
        }

        rawEcho(makeNimstrLit("connected"));
        set_window_title_15290478((makeNimstrLit("nicoTest ") || []).concat(my_id_16232068[0] || [],makeNimstrLit(" - client") || []));
        connected_16232079[0] = true;
        connecting_16232078[0] = 0;
        player_id_16232093[0] = 1;
        conn_16232066[0].on("data", HEX3Aanonymous_16415072);
        last_message_timer_16232101[0] = 0;

      
    }
      var Tmp4;
      var Tmp5;

  BeforeRet: do {
    if ((0 < connecting_16232078[0])) {
    connecting_16232078[0] = subInt(connecting_16232078[0], 1);
    if ((connecting_16232078[0] == 0)) {
    connected_16232079[0] = false;
    }
    
    break BeforeRet;
    }
    
    if (!(connected_16232079[0])) {
    if (btnpr_13930030(0, 48)) {
    remote_idindex_16232075[0] = subInt(remote_idindex_16232075[0], 1);
    }
    
    if (btnpr_13930030(1, 48)) {
    remote_idindex_16232075[0] = addInt(remote_idindex_16232075[0], 1);
    }
    
    remote_idindex_16232075[0] = wrap_14550013(remote_idindex_16232075[0], 4);
    if (btnpr_13930030(3, 48)) {
    remote_id_16232074[0][chckIndx(remote_idindex_16232075[0], 0, (remote_id_16232074[0] != null ? remote_id_16232074[0].length : 0)+0-1)-0] = subInt(remote_id_16232074[0][chckIndx(remote_idindex_16232075[0], 0, (remote_id_16232074[0] != null ? remote_id_16232074[0].length : 0)+0-1)-0], 1);
    if ((remote_id_16232074[0][chckIndx(remote_idindex_16232075[0], 0, (remote_id_16232074[0] != null ? remote_id_16232074[0].length : 0)+0-1)-0] < 0)) {
    remote_id_16232074[0][chckIndx(remote_idindex_16232075[0], 0, (remote_id_16232074[0] != null ? remote_id_16232074[0].length : 0)+0-1)-0] = (char_set_16232104[0] != null ? (char_set_16232104[0].length-1) : -1);
    }
    
    }
    
    if (btnpr_13930030(2, 48)) {
    remote_id_16232074[0][chckIndx(remote_idindex_16232075[0], 0, (remote_id_16232074[0] != null ? remote_id_16232074[0].length : 0)+0-1)-0] = addInt(remote_id_16232074[0][chckIndx(remote_idindex_16232075[0], 0, (remote_id_16232074[0] != null ? remote_id_16232074[0].length : 0)+0-1)-0], 1);
    if (((char_set_16232104[0] != null ? (char_set_16232104[0].length-1) : -1) < remote_id_16232074[0][chckIndx(remote_idindex_16232075[0], 0, (remote_id_16232074[0] != null ? remote_id_16232074[0].length : 0)+0-1)-0])) {
    remote_id_16232074[0][chckIndx(remote_idindex_16232075[0], 0, (remote_id_16232074[0] != null ? remote_id_16232074[0].length : 0)+0-1)-0] = 0;
    }
    
    }
    
    if (btnp_13930024(4)) {
    connecting_16232078[0] = 60;
    var remote_idtext_16415013 = null;
    L1: do {
      var i_16415063 = 0;
      var c_16415064 = 0;
      var i_16810402 = 0;
      if ((i_16810402 <= 3)) {
      L2: do {
          L3: while (true) {
          if (!true) break L3;
            i_16415063 = i_16810402;
            c_16415064 = remote_id_16232074[0][chckIndx(i_16810402, 0, (remote_id_16232074[0] != null ? remote_id_16232074[0].length : 0)+0-1)-0];
            if (remote_idtext_16415013 != null) { addChar(remote_idtext_16415013, char_set_16232104[0][chckIndx(c_16415064, 0, (char_set_16232104[0] != null ? char_set_16232104[0].length : 0)+0-1)-0]); } else { remote_idtext_16415013 = [char_set_16232104[0][chckIndx(c_16415064, 0, (char_set_16232104[0] != null ? char_set_16232104[0].length : 0)+0-1)-0]]; };
            if ((3 <= i_16810402)) {
            break L2;
            }
            
            i_16810402 = addInt(i_16810402, 1);
          }
      } while(false);
      }
      
    } while(false);
    conn_16232066[0] = peer_16232067[0].connect(toJSStr((makeNimstrLit("nicoTest") || []).concat(remote_idtext_16415013 || [])));
    conn_16232066[0].on("open", HEX3Aanonymous_16415065);
    }
    
    }
    else {
    if (connected_16232079[0]) {
    last_message_timer_16232101[0] = addInt(last_message_timer_16232101[0], 1);
    if ((120 < last_message_timer_16232101[0])) {
    connected_16232079[0] = false;
    }
    
    if (!(is_host_16232080[0])) {
    last_ping_timer_16232102[0] = addInt(last_ping_timer_16232102[0], 1);
    if ((60 < last_ping_timer_16232102[0])) {
    conn_16232066[0].send("ping");
    }
    
    }
    
    var dirty_16425001 = false;
    if (btn_13930021(0)) {
    player_pos_16232084[0][chckIndx(player_id_16232093[0], 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(0, 0, (player_pos_16232084[0][chckIndx(player_id_16232093[0], 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(player_id_16232093[0], 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0] = subInt(player_pos_16232084[0][chckIndx(player_id_16232093[0], 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(0, 0, (player_pos_16232084[0][chckIndx(player_id_16232093[0], 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(player_id_16232093[0], 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0], 1);
    dirty_16425001 = true;
    }
    
    if (btn_13930021(1)) {
    player_pos_16232084[0][chckIndx(player_id_16232093[0], 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(0, 0, (player_pos_16232084[0][chckIndx(player_id_16232093[0], 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(player_id_16232093[0], 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0] = addInt(player_pos_16232084[0][chckIndx(player_id_16232093[0], 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(0, 0, (player_pos_16232084[0][chckIndx(player_id_16232093[0], 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(player_id_16232093[0], 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0], 1);
    dirty_16425001 = true;
    }
    
    player_pos_16232084[0][chckIndx(player_id_16232093[0], 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(0, 0, (player_pos_16232084[0][chckIndx(player_id_16232093[0], 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(player_id_16232093[0], 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0] = clamp_11700049(player_pos_16232084[0][chckIndx(player_id_16232093[0], 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(0, 0, (player_pos_16232084[0][chckIndx(player_id_16232093[0], 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(player_id_16232093[0], 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0], divInt(paddle_width_16232097[0], 2), subInt(screen_width_12170232[0], divInt(paddle_width_16232097[0], 2)));
    if (dirty_16425001) {
    conn_16232066[0].send(toJSStr((makeNimstrLit("p:") || []).concat(cstrToNimstr((player_pos_16232084[0][chckIndx(player_id_16232093[0], 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(0, 0, (player_pos_16232084[0][chckIndx(player_id_16232093[0], 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(player_id_16232093[0], 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0])+"") || [])));
    }
    
    if (is_host_16232080[0]) {
    if ((0.0 < pause_timer_16232098[0])) {
    HEX2DHEX3D_14310001(pause_timer_16232098, 0, dt_16405087);
    if ((pause_timer_16232098[0] <= 0.0)) {
    reset_ball_16345020();
    reset_timer_16232100[0] = 1.0000000000000000e+000;
    }
    
    }
    
    if ((0.0 < reset_timer_16232100[0])) {
    HEX2DHEX3D_14310001(reset_timer_16232100, 0, dt_16405087);
    if ((reset_timer_16232100[0] <= 0.0)) {
    conn_16232066[0].send("start");
    }
    
    }
    
    var last_pos_16460008 = vec2i_15375016(ball_pos_16232094[0]);
    player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(0, 0, (player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0] = clamp_11700049(player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(0, 0, (player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0], divInt(paddle_width_16232097[0], 2), subInt(screen_width_12170232[0], divInt(paddle_width_16232097[0], 2)));
    player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(0, 0, (player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0] = clamp_11700049(player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(0, 0, (player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0], divInt(paddle_width_16232097[0], 2), subInt(screen_width_12170232[0], divInt(paddle_width_16232097[0], 2)));
    if (((pause_timer_16232098[0] <= 0.0) && (reset_timer_16232100[0] <= 0.0))) {
    HEX2BHEX3D_16480026(ball_pos_16232094[0], ball_vel_16232095[0]);
    if (((ball_pos_16232094[0][chckIndx(0, 0, (ball_pos_16232094[0] != null ? ball_pos_16232094[0].length : 0)+0-1)-0] < 2.0000000000000000e+000) && (ball_vel_16232095[0][chckIndx(0, 0, (ball_vel_16232095[0] != null ? ball_vel_16232095[0].length : 0)+0-1)-0] < 0.0))) {
    ball_pos_16232094[0][chckIndx(0, 0, (ball_pos_16232094[0] != null ? ball_pos_16232094[0].length : 0)+0-1)-0] = 2.0000000000000000e+000;
    ball_vel_16232095[0][chckIndx(0, 0, (ball_vel_16232095[0] != null ? ball_vel_16232095[0].length : 0)+0-1)-0] = -(ball_vel_16232095[0][chckIndx(0, 0, (ball_vel_16232095[0] != null ? ball_vel_16232095[0].length : 0)+0-1)-0]);
    }
    
      if (!(to_pint_12170119(subInt(screen_width_12170232[0], 2)) < to_pint_12170102(ball_pos_16232094[0][chckIndx(0, 0, (ball_pos_16232094[0] != null ? ball_pos_16232094[0].length : 0)+0-1)-0]))) Tmp4 = false; else {        Tmp4 = (0.0 < ball_vel_16232095[0][chckIndx(0, 0, (ball_vel_16232095[0] != null ? ball_vel_16232095[0].length : 0)+0-1)-0]);      }    if (Tmp4) {
    ball_pos_16232094[0][chckIndx(0, 0, (ball_pos_16232094[0] != null ? ball_pos_16232094[0].length : 0)+0-1)-0] = subInt(screen_width_12170232[0], 2);
    ball_vel_16232095[0][chckIndx(0, 0, (ball_vel_16232095[0] != null ? ball_vel_16232095[0].length : 0)+0-1)-0] = -(ball_vel_16232095[0][chckIndx(0, 0, (ball_vel_16232095[0] != null ? ball_vel_16232095[0].length : 0)+0-1)-0]);
    }
    
    if (overlap_16232340(to_pint_12170102((ball_pos_16232094[0][chckIndx(0, 0, (ball_pos_16232094[0] != null ? ball_pos_16232094[0].length : 0)+0-1)-0] - 2.0000000000000000e+000)), to_pint_12170102((ball_pos_16232094[0][chckIndx(1, 0, (ball_pos_16232094[0] != null ? ball_pos_16232094[0].length : 0)+0-1)-0] - 2.0000000000000000e+000)), 4, 4, to_pint_12170119(subInt(player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(0, 0, (player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0], divInt(paddle_width_16232097[0], 2))), to_pint_12170119(subInt(player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(1, 0, (player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0], 3)), to_pint_12170119(paddle_width_16232097[0]), 5)) {
    if ((ball_vel_16232095[0][chckIndx(1, 0, (ball_vel_16232095[0] != null ? ball_vel_16232095[0].length : 0)+0-1)-0] < 0.0)) {
    ball_vel_16232095[0][chckIndx(1, 0, (ball_vel_16232095[0] != null ? ball_vel_16232095[0].length : 0)+0-1)-0] = -(ball_vel_16232095[0][chckIndx(1, 0, (ball_vel_16232095[0] != null ? ball_vel_16232095[0].length : 0)+0-1)-0]);
    ball_pos_16232094[0][chckIndx(1, 0, (ball_pos_16232094[0] != null ? ball_pos_16232094[0].length : 0)+0-1)-0] = (player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(1, 0, (player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0] + 4.0000000000000000e+000);
    }
    
    var relx_16605012 = subInt(to_pint_12170102(ball_pos_16232094[0][chckIndx(0, 0, (ball_pos_16232094[0] != null ? ball_pos_16232094[0].length : 0)+0-1)-0]), to_pint_12170119(player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(0, 0, (player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0]));
    if ((to_pint_12170119(paddle_width_16232097[0]) <= to_pint_12170102(abs_75264(relx_16605012)))) {
    HEX2BHEX3D_14310027(ball_vel_16232095[0], chckIndx(0, 0, (ball_vel_16232095[0] != null ? ball_vel_16232095[0].length : 0)+0-1)-0, (relx_16605012 * 2.5000000000000000e-001));
    nimCopy(ball_vel_16232095[0], clamp_16355262(ball_vel_16232095[0], ball_speed_16232099[0]), NTI15356111);
    }
    
    HEX2AHEX3D_16615052(ball_vel_16232095[0], 2.0000000000000000e+000);
    HEX2AHEX3D_16620012(ball_speed_16232099, 0, 1.1000000000000001e+000);
    nimCopy(ball_vel_16232095[0], clamp_16355262(ball_vel_16232095[0], ball_speed_16232099[0]), NTI15356111);
    }
    
    if (overlap_16232340(to_pint_12170102((ball_pos_16232094[0][chckIndx(0, 0, (ball_pos_16232094[0] != null ? ball_pos_16232094[0].length : 0)+0-1)-0] - 2.0000000000000000e+000)), to_pint_12170102((ball_pos_16232094[0][chckIndx(1, 0, (ball_pos_16232094[0] != null ? ball_pos_16232094[0].length : 0)+0-1)-0] - 2.0000000000000000e+000)), 4, 4, to_pint_12170119(subInt(player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(0, 0, (player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0], divInt(paddle_width_16232097[0], 2))), to_pint_12170119(subInt(player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(1, 0, (player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0], 3)), to_pint_12170119(paddle_width_16232097[0]), 5)) {
    if ((0.0 < ball_vel_16232095[0][chckIndx(1, 0, (ball_vel_16232095[0] != null ? ball_vel_16232095[0].length : 0)+0-1)-0])) {
    ball_vel_16232095[0][chckIndx(1, 0, (ball_vel_16232095[0] != null ? ball_vel_16232095[0].length : 0)+0-1)-0] = -(ball_vel_16232095[0][chckIndx(1, 0, (ball_vel_16232095[0] != null ? ball_vel_16232095[0].length : 0)+0-1)-0]);
    ball_pos_16232094[0][chckIndx(1, 0, (ball_pos_16232094[0] != null ? ball_pos_16232094[0].length : 0)+0-1)-0] = (player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(1, 0, (player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0] - 4.0000000000000000e+000);
    }
    
    var relx_16690012 = subInt(to_pint_12170102(ball_pos_16232094[0][chckIndx(0, 0, (ball_pos_16232094[0] != null ? ball_pos_16232094[0].length : 0)+0-1)-0]), to_pint_12170119(player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(0, 0, (player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0]));
    if ((to_pint_12170119(paddle_width_16232097[0]) <= to_pint_12170102(abs_75264(relx_16690012)))) {
    HEX2BHEX3D_14310027(ball_vel_16232095[0], chckIndx(0, 0, (ball_vel_16232095[0] != null ? ball_vel_16232095[0].length : 0)+0-1)-0, (relx_16690012 * 2.5000000000000000e-001));
    nimCopy(ball_vel_16232095[0], clamp_16355262(ball_vel_16232095[0], ball_speed_16232099[0]), NTI15356111);
    }
    
    HEX2AHEX3D_16615052(ball_vel_16232095[0], 2.0000000000000000e+000);
    HEX2AHEX3D_16620012(ball_speed_16232099, 0, 1.1000000000000001e+000);
    nimCopy(ball_vel_16232095[0], clamp_16355262(ball_vel_16232095[0], ball_speed_16232099[0]), NTI15356111);
    }
    
    if (((ball_pos_16232094[0][chckIndx(1, 0, (ball_pos_16232094[0] != null ? ball_pos_16232094[0].length : 0)+0-1)-0] < 2.0000000000000000e+000) && (ball_vel_16232095[0][chckIndx(1, 0, (ball_vel_16232095[0] != null ? ball_vel_16232095[0].length : 0)+0-1)-0] < 0.0))) {
    player_scores_16232088[0][chckIndx(1, 0, (player_scores_16232088[0] != null ? player_scores_16232088[0].length : 0)+0-1)-0] = addInt(player_scores_16232088[0][chckIndx(1, 0, (player_scores_16232088[0] != null ? player_scores_16232088[0].length : 0)+0-1)-0], 1);
    conn_16232066[0].send(toJSStr((makeNimstrLit("score:0:") || []).concat(cstrToNimstr((player_scores_16232088[0][chckIndx(0, 0, (player_scores_16232088[0] != null ? player_scores_16232088[0].length : 0)+0-1)-0])+"") || [])));
    conn_16232066[0].send(toJSStr((makeNimstrLit("score:1:") || []).concat(cstrToNimstr((player_scores_16232088[0][chckIndx(1, 0, (player_scores_16232088[0] != null ? player_scores_16232088[0].length : 0)+0-1)-0])+"") || [])));
    pause_timer_16232098[0] = 1.0000000000000000e+000;
    conn_16232066[0].send("stop");
    }
    
      if (!(to_pint_12170119(subInt(screen_height_12170235[0], 2)) < to_pint_12170102(ball_pos_16232094[0][chckIndx(1, 0, (ball_pos_16232094[0] != null ? ball_pos_16232094[0].length : 0)+0-1)-0]))) Tmp5 = false; else {        Tmp5 = (0.0 < ball_vel_16232095[0][chckIndx(1, 0, (ball_vel_16232095[0] != null ? ball_vel_16232095[0].length : 0)+0-1)-0]);      }    if (Tmp5) {
    player_scores_16232088[0][chckIndx(0, 0, (player_scores_16232088[0] != null ? player_scores_16232088[0].length : 0)+0-1)-0] = addInt(player_scores_16232088[0][chckIndx(0, 0, (player_scores_16232088[0] != null ? player_scores_16232088[0].length : 0)+0-1)-0], 1);
    conn_16232066[0].send(toJSStr((makeNimstrLit("score:0:") || []).concat(cstrToNimstr((player_scores_16232088[0][chckIndx(0, 0, (player_scores_16232088[0] != null ? player_scores_16232088[0].length : 0)+0-1)-0])+"") || [])));
    conn_16232066[0].send(toJSStr((makeNimstrLit("score:1:") || []).concat(cstrToNimstr((player_scores_16232088[0][chckIndx(1, 0, (player_scores_16232088[0] != null ? player_scores_16232088[0].length : 0)+0-1)-0])+"") || [])));
    pause_timer_16232098[0] = 1.0000000000000000e+000;
    conn_16232066[0].send("stop");
    }
    
    }
    
    var next_pos_16740018 = vec2i_15375016(ball_pos_16232094[0]);
    if (!(HEX3DHEX3D_16745003(last_pos_16460008, next_pos_16740018))) {
    conn_16232066[0].send(toJSStr((makeNimstrLit("bx:") || []).concat(cstrToNimstr((next_pos_16740018[chckIndx(0, 0, (next_pos_16740018 != null ? next_pos_16740018.length : 0)+0-1)-0])+"") || [])));
    conn_16232066[0].send(toJSStr((makeNimstrLit("by:") || []).concat(cstrToNimstr((next_pos_16740018[chckIndx(1, 0, (next_pos_16740018 != null ? next_pos_16740018.length : 0)+0-1)-0])+"") || [])));
    }
    
    }
    
    }
    }
  } while (false);

  
}
function get_12160014(s_12160016, x_12160017, y_12160018) {
      var Tmp1;
      var Tmp2;

  var result_12160019 = 0;

  BeforeRet: do {
      if (((x_12160017 < 0) || (y_12160018 < 0))) Tmp2 = true; else {        Tmp2 = (s_12160016.w <= x_12160017);      }      if (Tmp2) Tmp1 = true; else {        Tmp1 = (s_12160016.h <= y_12160018);      }    if (Tmp1) {
    result_12160019 = 0;
    break BeforeRet;
    }
    
    result_12160019 = s_12160016.data[chckIndx(addInt(mulInt(y_12160018, s_12160016.w), x_12160017), 0, (s_12160016.data != null ? s_12160016.data.length : 0)+0-1)-0];
    break BeforeRet;
  } while (false);

  return result_12160019;

}
function stencil_test_13916483(x_13916485, y_13916486, nv_13916487) {
  var result_13916488 = false;

  BeforeRet: do {
    if ((stencil_mode_12170219[0] == 0)) {
    result_13916488 = true;
    break BeforeRet;
    }
    
    var v_13916494 = get_12160014(stencil_buffer_12170209[0], x_13916485, y_13916486);
    switch (stencil_mode_12170219[0]) {
    case 0:
      result_13916488 = true;
      break BeforeRet;
      break;
    case 1:
      result_13916488 = (nv_13916487 == v_13916494);
      break BeforeRet;
      break;
    case 2:
      result_13916488 = (nv_13916487 < v_13916494);
      break BeforeRet;
      break;
    case 3:
      result_13916488 = (v_13916494 < nv_13916487);
      break BeforeRet;
      break;
    case 4:
      result_13916488 = (nv_13916487 <= v_13916494);
      break BeforeRet;
      break;
    case 5:
      result_13916488 = (v_13916494 <= nv_13916487);
      break BeforeRet;
      break;
    case 6:
      result_13916488 = !((nv_13916487 == v_13916494));
      break BeforeRet;
      break;
    }
  } while (false);

  return result_13916488;

}
function dither_pass_13980439(x_13980441, y_13980442) {
  var result_13980443 = false;

  BeforeRet: do {
    var x4_13980444 = modInt(x_13980441, 4);
    var y4_13980445 = modInt(y_13980442, 4);
    var bit_13980446 = ((((y4_13980445 * 4) & 0xffff) + x4_13980444) & 0xffff);
    result_13980443 = !(((g_dither_pattern_12170267[0] & (1 << bit_13980446)) == 0));
    break BeforeRet;
  } while (false);

  return result_13980443;

}
function set_12150837(s_12150839, x_12150840, y_12150841, v_12150842) {
      var Tmp1;
      var Tmp2;

  BeforeRet: do {
      if (((x_12150840 < 0) || (y_12150841 < 0))) Tmp2 = true; else {        Tmp2 = (s_12150839.w <= x_12150840);      }      if (Tmp2) Tmp1 = true; else {        Tmp1 = (s_12150839.h <= y_12150841);      }    if (Tmp1) {
    break BeforeRet;
    }
    
    s_12150839.data[chckIndx(addInt(mulInt(y_12150841, s_12150839.w), x_12150840), 0, (s_12150839.data != null ? s_12150839.data.length : 0)+0-1)-0] = v_12150842;
  } while (false);

  
}
function pset_raw_13930757(x_13930759, y_13930760, c_13930761) {
    if (stencil_test_13916483(x_13930759, y_13930760, stencil_ref_12170221[0])) {
    if (dither_pass_13980439(x_13930759, y_13930760)) {
    set_12150837(sw_canvas_12170208[0], x_13930759, y_13930760, c_13930761);
    }
    else {
    if ((0 <= dither_color_13980296[0])) {
    set_12150837(sw_canvas_12170208[0], x_13930759, y_13930760, dither_color_13980296[0]);
    }
    }
    if (stencil_write_12170220[0]) {
    set_12150837(stencil_buffer_12170209[0], x_13930759, y_13930760, stencil_ref_12170221[0]);
    }
    
    }
    

  
}
function cls_14025143() {
    L1: do {
      var y_14025150 = 0;
      var res_16810449 = clip_min_y_12170341[0];
      L2: do {
          L3: while (true) {
          if (!(res_16810449 <= clip_max_y_12170342[0])) break L3;
            y_14025150 = res_16810449;
            L4: do {
              var x_14025156 = 0;
              var res_16810444 = clip_min_x_12170339[0];
              L5: do {
                  L6: while (true) {
                  if (!(res_16810444 <= clip_max_x_12170340[0])) break L6;
                    x_14025156 = res_16810444;
                    pset_raw_13930757(x_14025156, y_14025150, 0);
                    res_16810444 += 1;
                  }
              } while(false);
            } while(false);
            res_16810449 += 1;
          }
      } while(false);
    } while(false);

  
}
function set_color_13916289(col_id_13916291) {
    current_color_12170335[0] = col_id_13916291;

  
}
function HEX5BHEX5D_15045273(t_15045279, key_15045280) {
  var result_15045282 = null;

    var hcHEX60gensym1005414_15045283 = [0];
    var indexHEX60gensym1005415_15045292 = raw_get_14925325(t_15045279, key_15045280, hcHEX60gensym1005414_15045283, 0);
    if ((0 <= indexHEX60gensym1005415_15045292)) {
    result_15045282 = t_15045279.data[chckIndx(indexHEX60gensym1005415_15045292, 0, (t_15045279.data != null ? t_15045279.data.length : 0)+0-1)-0].Field2;
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(HEX24_1715214(key_15045280) || []), parent: null, m_type: NTI6245, name: null, trace: null, up: null}, "KeyError");
    }
    

  return result_15045282;

}
function font_blit_14395026(font_14395028, src_rect_14395029, dst_rect_14395030, color_14395031) {
                        var Tmp8;
                        var Tmp9;
                        var Tmp10;
                        var Tmp11;
                        var Tmp12;

    var dx_14395032 = [dst_rect_14395030.Field0];
    var dy_14395033 = [dst_rect_14395030.Field1];
    var sx_14395034 = [src_rect_14395029.Field0];
    var sy_14395035 = [src_rect_14395029.Field1];
    var dw_14395036 = dst_rect_14395030.Field2;
    var dh_14395037 = dst_rect_14395030.Field3;
    var sw_14395038 = src_rect_14395029.Field2;
    var sh_14395039 = src_rect_14395029.Field3;
    L1: do {
      var y_14395047 = 0;
      var i_16810546 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16810546 < dst_rect_14395030.Field3)) break L3;
            y_14395047 = i_16810546;
            dx_14395032[0] = dst_rect_14395030.Field0;
            sx_14395034[0] = src_rect_14395029.Field0;
            L4: do {
              var x_14395055 = 0;
              var i_16810544 = 0;
              L5: do {
                  L6: while (true) {
                  if (!(i_16810544 < dst_rect_14395030.Field2)) break L6;
                    x_14395055 = i_16810544;
                    L7: do {
                        if (((sx_14395034[0] < 0.0) || (sy_14395035[0] < 0.0))) Tmp9 = true; else {                          Tmp9 = (to_pint_12170119((font_14395028.w - 1)) < to_pint_12170102(sx_14395034[0]));                        }                        if (Tmp9) Tmp8 = true; else {                          Tmp8 = (to_pint_12170119((font_14395028.h - 1)) < to_pint_12170102(sy_14395035[0]));                        }                      if (Tmp8) {
                      break L7;
                      }
                      
                        if (((to_pint_12170102(dx_14395032[0]) < to_pint_12170119(clip_min_x_12170339[0])) || (to_pint_12170102(dy_14395033[0]) < to_pint_12170119(clip_min_y_12170341[0])))) Tmp11 = true; else {                          Tmp11 = (to_pint_12170119(clip_max_x_12170340[0]) < to_pint_12170102(dx_14395032[0]));                        }                        if (Tmp11) Tmp10 = true; else {                          Tmp10 = (to_pint_12170119(clip_max_y_12170342[0]) < to_pint_12170102(dy_14395033[0]));                        }                      if (Tmp10) {
                      break L7;
                      }
                      
                        if (!(font_14395028.data[((to_pint_12170102(sy_14395035[0]) * to_pint_12170119(font_14395028.w)) + to_pint_12170102(sx_14395034[0]))] == 1)) Tmp12 = false; else {                          Tmp12 = dither_pass_13980439(((dx_14395032[0])|0), ((dy_14395033[0])|0));                        }                      if (Tmp12) {
                      sw_canvas_12170208[0].data[((to_pint_12170102(dy_14395033[0]) * to_pint_12170119(sw_canvas_12170208[0].w)) + to_pint_12170102(dx_14395032[0]))] = current_color_12170335[0];
                      }
                      else {
                      if ((0 <= dither_color_13980296[0])) {
                      sw_canvas_12170208[0].data[((to_pint_12170102(dy_14395033[0]) * to_pint_12170119(sw_canvas_12170208[0].w)) + to_pint_12170102(dx_14395032[0]))] = dither_color_13980296[0];
                      }
                      }
                      HEX2BHEX3D_14310027(sx_14395034, 0, (1.0000000000000000e+000 * (sw_14395038 / dw_14395036)));
                      HEX2BHEX3D_14310027(dx_14395032, 0, 1.0000000000000000e+000);
                    } while(false);
                    i_16810544 += 1;
                  }
              } while(false);
            } while(false);
            HEX2BHEX3D_14310027(sy_14395035, 0, (1.0000000000000000e+000 * (sh_14395039 / dh_14395037)));
            HEX2BHEX3D_14310027(dy_14395033, 0, 1.0000000000000000e+000);
            i_16810546 += 1;
          }
      } while(false);
    } while(false);

  
}
function glyph_13916240(c_13916242, x_13916243, y_13916244, scale_13916245) {
    var Tmp2;

  var result_15040079 = 0;

  BeforeRet: do {
    if ((current_font_12170308[0] == null)) {
    raiseException({message: makeNimstrLit("No font selected"), parent: null, m_type: NTI6217, name: null, trace: null, up: null}, "Exception");
    }
    
    if (!(has_key_14925316(current_font_12170308[0].rects, c_13916242))) {
    break BeforeRet;
    }
    
    var src_15050028 = nimCopy(null, HEX5BHEX5D_15045273(current_font_12170308[0].rects, c_13916242), NTI12150652);
    var dst_15050030 = nimCopy(null, {Field0: ((x_13916243)|0), Field1: ((y_13916244)|0), Field2: mulInt(src_15050028.Field2, ((scale_13916245)|0)), Field3: mulInt(src_15050028.Field3, ((scale_13916245)|0))}, NTI12150652);
++excHandler;
    Tmp2 = framePtr;
    try {
    font_blit_14395026(current_font_12170308[0], src_15050028, dst_15050030, current_color_12170335[0]);
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
    framePtr = Tmp2;
    if (lastJSError && (isObj(lastJSError.m_type, NTI6249))) {
    console.log("index error glyph: ", c_13916242, " @ ", x_13916243, ",", y_13916244);
    reraiseException();
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = Tmp2;
    }
    result_15040079 = to_pint_12170119(addInt(mulInt(src_15050028.Field2, ((scale_13916245)|0)), ((scale_13916245)|0)));
    break BeforeRet;
  } while (false);

  return result_15040079;

}
function print_13916259(text_13916261, x_13916262, y_13916263, scale_13916264) {
            var Tmp6;

    if ((current_font_12170308[0] == null)) {
    raiseException({message: makeNimstrLit("No font selected"), parent: null, m_type: NTI6217, name: null, trace: null, up: null}, "Exception");
    }
    
    var x_15060002 = subInt(x_13916262, camera_x_12170312[0]);
    var y_15060003 = subInt(y_13916263, camera_y_12170313[0]);
    var ix_15060004 = x_15060002;
    L1: do {
      var line_15060005 = null;
      var first_16810520 = 0;
      var last_16810521 = 0;
      var eolpos_16810522 = 0;
      L2: do {
          L3: while (true) {
          if (!true) break L3;
            L4: do {
                L5: while (true) {
                if (!((last_16810521 < (text_13916261 != null ? text_13916261.length : 0)) && !((ConstSet5[text_13916261[chckIndx(last_16810521, 0, (text_13916261 != null ? text_13916261.length : 0)+0-1)-0]] != undefined)))) break L5;
                  last_16810521 = addInt(last_16810521, 1);
                }
            } while(false);
            eolpos_16810522 = last_16810521;
            if ((last_16810521 < (text_13916261 != null ? text_13916261.length : 0))) {
            if ((text_13916261[chckIndx(last_16810521, 0, (text_13916261 != null ? text_13916261.length : 0)+0-1)-0] == 10)) {
            last_16810521 = addInt(last_16810521, 1);
            }
            else {
            if ((text_13916261[chckIndx(last_16810521, 0, (text_13916261 != null ? text_13916261.length : 0)+0-1)-0] == 13)) {
            last_16810521 = addInt(last_16810521, 1);
            if (((last_16810521 < (text_13916261 != null ? text_13916261.length : 0)) && (text_13916261[chckIndx(last_16810521, 0, (text_13916261 != null ? text_13916261.length : 0)+0-1)-0] == 10))) {
            last_16810521 = addInt(last_16810521, 1);
            }
            
            }
            }
            }
            
            if (false) {
            Tmp6 = subInt(last_16810521, 1);
            }
            else {
            Tmp6 = subInt(eolpos_16810522, 1);
            }
            
            line_15060005 = substr_341022(text_13916261, first_16810520, Tmp6);
            L7: do {
              var c_15060006 = 0;
              var i_16810487 = 0;
              var result_16810488 = 0;
              L8: do {
                  L9: while (true) {
                  if (!(i_16810487 < (line_15060005 != null ? line_15060005.length : 0))) break L9;
                    if ((line_15060005[chckIndx(i_16810487, 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] <= 127)) {
                    result_16810488 = chckRange(line_15060005[chckIndx(i_16810487, 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0], -2147483648, 2147483647);
                    i_16810487 = addInt(i_16810487, 1);
                    }
                    else {
                    if ((((line_15060005[chckIndx(i_16810487, 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] >>> 0) >>> 5) == 6)) {
                    if ((i_16810487 <= subInt((line_15060005 != null ? line_15060005.length : 0), 2))) {
                    result_16810488 = chckRange((((line_15060005[chckIndx(i_16810487, 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] & 31) << 6) | (line_15060005[chckIndx(addInt(i_16810487, 1), 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
                    i_16810487 = addInt(i_16810487, 2);
                    }
                    else {
                      result_16810488 = 65533;
                      i_16810487 = addInt(i_16810487, 1);
                    }
                    
                    }
                    else {
                    if ((((line_15060005[chckIndx(i_16810487, 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] >>> 0) >>> 4) == 14)) {
                    if ((i_16810487 <= subInt((line_15060005 != null ? line_15060005.length : 0), 3))) {
                    result_16810488 = chckRange(((((line_15060005[chckIndx(i_16810487, 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] & 15) << 12) | ((line_15060005[chckIndx(addInt(i_16810487, 1), 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] & 63) << 6)) | (line_15060005[chckIndx(addInt(i_16810487, 2), 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
                    i_16810487 = addInt(i_16810487, 3);
                    }
                    else {
                      result_16810488 = 65533;
                      i_16810487 = addInt(i_16810487, 1);
                    }
                    
                    }
                    else {
                    if ((((line_15060005[chckIndx(i_16810487, 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] >>> 0) >>> 3) == 30)) {
                    if ((i_16810487 <= subInt((line_15060005 != null ? line_15060005.length : 0), 4))) {
                    result_16810488 = chckRange((((((line_15060005[chckIndx(i_16810487, 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] & 7) << 18) | ((line_15060005[chckIndx(addInt(i_16810487, 1), 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] & 63) << 12)) | ((line_15060005[chckIndx(addInt(i_16810487, 2), 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] & 63) << 6)) | (line_15060005[chckIndx(addInt(i_16810487, 3), 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
                    i_16810487 = addInt(i_16810487, 4);
                    }
                    else {
                      result_16810488 = 65533;
                      i_16810487 = addInt(i_16810487, 1);
                    }
                    
                    }
                    else {
                    if ((((line_15060005[chckIndx(i_16810487, 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] >>> 0) >>> 2) == 62)) {
                    if ((i_16810487 <= subInt((line_15060005 != null ? line_15060005.length : 0), 5))) {
                    result_16810488 = chckRange(((((((line_15060005[chckIndx(i_16810487, 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] & 3) << 24) | ((line_15060005[chckIndx(addInt(i_16810487, 1), 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] & 63) << 18)) | ((line_15060005[chckIndx(addInt(i_16810487, 2), 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] & 63) << 12)) | ((line_15060005[chckIndx(addInt(i_16810487, 3), 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] & 63) << 6)) | (line_15060005[chckIndx(addInt(i_16810487, 4), 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
                    i_16810487 = addInt(i_16810487, 5);
                    }
                    else {
                      result_16810488 = 65533;
                      i_16810487 = addInt(i_16810487, 1);
                    }
                    
                    }
                    else {
                    if ((((line_15060005[chckIndx(i_16810487, 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] >>> 0) >>> 1) == 126)) {
                    if ((i_16810487 <= subInt((line_15060005 != null ? line_15060005.length : 0), 6))) {
                    result_16810488 = chckRange((((((((line_15060005[chckIndx(i_16810487, 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] & 1) << 30) | ((line_15060005[chckIndx(addInt(i_16810487, 1), 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] & 63) << 24)) | ((line_15060005[chckIndx(addInt(i_16810487, 2), 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] & 63) << 18)) | ((line_15060005[chckIndx(addInt(i_16810487, 3), 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] & 63) << 12)) | ((line_15060005[chckIndx(addInt(i_16810487, 4), 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] & 63) << 6)) | (line_15060005[chckIndx(addInt(i_16810487, 5), 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
                    i_16810487 = addInt(i_16810487, 6);
                    }
                    else {
                      result_16810488 = 65533;
                      i_16810487 = addInt(i_16810487, 1);
                    }
                    
                    }
                    else {
                      result_16810488 = chckRange(line_15060005[chckIndx(i_16810487, 0, (line_15060005 != null ? line_15060005.length : 0)+0-1)-0], -2147483648, 2147483647);
                      i_16810487 = addInt(i_16810487, 1);
                    }
                    }}}}}
                    c_15060006 = result_16810488;
                    x_15060002 = addInt(x_15060002, glyph_13916240(c_15060006, x_15060002, y_15060003, scale_13916264));
                  }
              } while(false);
            } while(false);
            x_15060002 = ix_15060004;
            y_15060003 = addInt(y_15060003, to_pint_12170119(current_font_12170308[0].h));
            if ((eolpos_16810522 == last_16810521)) {
            break L2;
            }
            
            first_16810520 = last_16810521;
          }
      } while(false);
    } while(false);

  
}
function glyph_13916246(c_13916248, x_13916249, y_13916250, scale_13916251) {
  var result_15055020 = 0;

  BeforeRet: do {
    result_15055020 = glyph_13916240(c_13916248, x_13916249, y_13916250, scale_13916251);
    break BeforeRet;
  } while (false);

  return result_15055020;

}
function text_width_13916277(text_13916279, scale_13916280) {
  var result_15070318 = 0;

    if ((current_font_12170308[0] == null)) {
    raiseException({message: makeNimstrLit("No font selected"), parent: null, m_type: NTI6217, name: null, trace: null, up: null}, "Exception");
    }
    
    L1: do {
      var c_15075002 = 0;
      var i_16810552 = 0;
      var result_16810553 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16810552 < (text_13916279 != null ? text_13916279.length : 0))) break L3;
            if ((text_13916279[chckIndx(i_16810552, 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] <= 127)) {
            result_16810553 = chckRange(text_13916279[chckIndx(i_16810552, 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0], -2147483648, 2147483647);
            i_16810552 = addInt(i_16810552, 1);
            }
            else {
            if ((((text_13916279[chckIndx(i_16810552, 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] >>> 0) >>> 5) == 6)) {
            if ((i_16810552 <= subInt((text_13916279 != null ? text_13916279.length : 0), 2))) {
            result_16810553 = chckRange((((text_13916279[chckIndx(i_16810552, 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] & 31) << 6) | (text_13916279[chckIndx(addInt(i_16810552, 1), 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
            i_16810552 = addInt(i_16810552, 2);
            }
            else {
              result_16810553 = 65533;
              i_16810552 = addInt(i_16810552, 1);
            }
            
            }
            else {
            if ((((text_13916279[chckIndx(i_16810552, 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] >>> 0) >>> 4) == 14)) {
            if ((i_16810552 <= subInt((text_13916279 != null ? text_13916279.length : 0), 3))) {
            result_16810553 = chckRange(((((text_13916279[chckIndx(i_16810552, 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] & 15) << 12) | ((text_13916279[chckIndx(addInt(i_16810552, 1), 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] & 63) << 6)) | (text_13916279[chckIndx(addInt(i_16810552, 2), 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
            i_16810552 = addInt(i_16810552, 3);
            }
            else {
              result_16810553 = 65533;
              i_16810552 = addInt(i_16810552, 1);
            }
            
            }
            else {
            if ((((text_13916279[chckIndx(i_16810552, 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] >>> 0) >>> 3) == 30)) {
            if ((i_16810552 <= subInt((text_13916279 != null ? text_13916279.length : 0), 4))) {
            result_16810553 = chckRange((((((text_13916279[chckIndx(i_16810552, 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] & 7) << 18) | ((text_13916279[chckIndx(addInt(i_16810552, 1), 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] & 63) << 12)) | ((text_13916279[chckIndx(addInt(i_16810552, 2), 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] & 63) << 6)) | (text_13916279[chckIndx(addInt(i_16810552, 3), 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
            i_16810552 = addInt(i_16810552, 4);
            }
            else {
              result_16810553 = 65533;
              i_16810552 = addInt(i_16810552, 1);
            }
            
            }
            else {
            if ((((text_13916279[chckIndx(i_16810552, 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] >>> 0) >>> 2) == 62)) {
            if ((i_16810552 <= subInt((text_13916279 != null ? text_13916279.length : 0), 5))) {
            result_16810553 = chckRange(((((((text_13916279[chckIndx(i_16810552, 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] & 3) << 24) | ((text_13916279[chckIndx(addInt(i_16810552, 1), 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] & 63) << 18)) | ((text_13916279[chckIndx(addInt(i_16810552, 2), 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] & 63) << 12)) | ((text_13916279[chckIndx(addInt(i_16810552, 3), 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] & 63) << 6)) | (text_13916279[chckIndx(addInt(i_16810552, 4), 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
            i_16810552 = addInt(i_16810552, 5);
            }
            else {
              result_16810553 = 65533;
              i_16810552 = addInt(i_16810552, 1);
            }
            
            }
            else {
            if ((((text_13916279[chckIndx(i_16810552, 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] >>> 0) >>> 1) == 126)) {
            if ((i_16810552 <= subInt((text_13916279 != null ? text_13916279.length : 0), 6))) {
            result_16810553 = chckRange((((((((text_13916279[chckIndx(i_16810552, 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] & 1) << 30) | ((text_13916279[chckIndx(addInt(i_16810552, 1), 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] & 63) << 24)) | ((text_13916279[chckIndx(addInt(i_16810552, 2), 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] & 63) << 18)) | ((text_13916279[chckIndx(addInt(i_16810552, 3), 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] & 63) << 12)) | ((text_13916279[chckIndx(addInt(i_16810552, 4), 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] & 63) << 6)) | (text_13916279[chckIndx(addInt(i_16810552, 5), 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
            i_16810552 = addInt(i_16810552, 6);
            }
            else {
              result_16810553 = 65533;
              i_16810552 = addInt(i_16810552, 1);
            }
            
            }
            else {
              result_16810553 = chckRange(text_13916279[chckIndx(i_16810552, 0, (text_13916279 != null ? text_13916279.length : 0)+0-1)-0], -2147483648, 2147483647);
              i_16810552 = addInt(i_16810552, 1);
            }
            }}}}}
            c_15075002 = result_16810553;
            if (!(has_key_14925316(current_font_12170308[0].rects, c_15075002))) {
            raiseException({message: (makeNimstrLit("character not in font: \'") || []).concat(HEX24_1715214(c_15075002) || [],makeNimstrLit("\'") || []), parent: null, m_type: NTI6217, name: null, trace: null, up: null}, "Exception");
            }
            
            result_15070318 = addInt(result_15070318, to_pint_12170119(addInt(mulInt(HEX5BHEX5D_15045273(current_font_12170308[0].rects, c_15075002).Field2, ((scale_13916280)|0)), ((scale_13916280)|0))));
          }
      } while(false);
    } while(false);

  return result_15070318;

}
function printc_13916265(text_13916267, x_13916268, y_13916269, scale_13916270) {
    var width_15080212 = text_width_13916277(text_13916267, scale_13916270);
    print_13916259(text_13916267, subInt(x_13916268, divInt(width_15080212, 2)), y_13916269, scale_13916270);

  
}
function pset_14025252(x_14025254, y_14025255, c_14025256) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

  BeforeRet: do {
    var x_14025257 = (x_14025254 - camera_x_12170312[0]);
    var y_14025258 = (y_14025255 - camera_y_12170313[0]);
      if ((((x_14025257)|0) < clip_min_x_12170339[0])) Tmp3 = true; else {        Tmp3 = (((y_14025258)|0) < clip_min_y_12170341[0]);      }      if (Tmp3) Tmp2 = true; else {        Tmp2 = (clip_max_x_12170340[0] < ((x_14025257)|0));      }      if (Tmp2) Tmp1 = true; else {        Tmp1 = (clip_max_y_12170342[0] < ((y_14025258)|0));      }    if (Tmp1) {
    break BeforeRet;
    }
    
    if (stencil_test_13916483(((x_14025257)|0), ((y_14025258)|0), stencil_ref_12170221[0])) {
    if (dither_pass_13980439(((x_14025257)|0), ((y_14025258)|0))) {
    set_12150837(sw_canvas_12170208[0], ((x_14025257)|0), ((y_14025258)|0), palette_map_draw_12170317[0][c_14025256]);
    }
    else {
    if ((0 <= dither_color_13980296[0])) {
    set_12150837(sw_canvas_12170208[0], ((x_14025257)|0), ((y_14025258)|0), palette_map_draw_12170317[0][dither_color_13980296[0]]);
    }
    }
    if (stencil_write_12170220[0]) {
    set_12150837(stencil_buffer_12170209[0], ((x_14025257)|0), ((y_14025258)|0), stencil_ref_12170221[0]);
    }
    
    }
    
  } while (false);

  
}
function pset_13930200(x_13930202, y_13930203) {
    pset_14025252(x_13930202, y_13930203, current_color_12170335[0]);

  
}
function rectfill_13930223(x1_13930225, y1_13930226, x2_13930227, y2_13930228) {
    var minx_14095020 = nimMin(x1_13930225, x2_13930227);
    var maxx_14095021 = nimMax(x1_13930225, x2_13930227);
    var miny_14095022 = nimMin(y1_13930226, y2_13930228);
    var maxy_14095023 = nimMax(y1_13930226, y2_13930228);
    L1: do {
      var y_14095024 = 0;
      var res_16810588 = miny_14095022;
      L2: do {
          L3: while (true) {
          if (!(res_16810588 <= maxy_14095023)) break L3;
            y_14095024 = res_16810588;
            L4: do {
              var x_14095025 = 0;
              var res_16810586 = minx_14095020;
              L5: do {
                  L6: while (true) {
                  if (!(res_16810586 <= maxx_14095021)) break L6;
                    x_14095025 = res_16810586;
                    pset_13930200(x_14095025, y_14095024);
                    res_16810586 += 1;
                  }
              } while(false);
            } while(false);
            res_16810588 += 1;
          }
      } while(false);
    } while(false);

  
}
function hline_13930273(x0_13930275, y_13930276, x1_13930277) {
      var Tmp1;
      var Tmp2;

  BeforeRet: do {
    var min_x_14265025 = (clip_min_x_12170339[0] + ((camera_x_12170312[0])|0));
    var max_x_14265026 = (clip_max_x_12170340[0] + ((camera_x_12170312[0])|0));
      if (!(((x0_13930275)|0) < min_x_14265025)) Tmp1 = false; else {        Tmp1 = (((x1_13930277)|0) < min_x_14265025);      }    if (Tmp1) {
    break BeforeRet;
    }
    
      if (!(max_x_14265026 < ((x0_13930275)|0))) Tmp2 = false; else {        Tmp2 = (max_x_14265026 < ((x1_13930277)|0));      }    if (Tmp2) {
    break BeforeRet;
    }
    
    var x0_14275001 = x0_13930275;
    var x1_14275002 = x1_13930277;
    if ((x1_14275002 < x0_14275001)) {
    var Tmp3 = x1_14275002; x1_14275002 = x0_14275001; x0_14275001 = Tmp3;    }
    
    x0_14275001 = to_pint_12170119(nimMax(((x0_14275001)|0), min_x_14265025));
    x1_14275002 = to_pint_12170119(nimMin(((x1_14275002)|0), max_x_14265026));
    L4: do {
      var x_14275010 = 0;
      var res_16810594 = x0_14275001;
      L5: do {
          L6: while (true) {
          if (!(res_16810594 <= x1_14275002)) break L6;
            x_14275010 = res_16810594;
            pset_13930200(x_14275010, y_13930276);
            res_16810594 += 1;
          }
      } while(false);
    } while(false);
  } while (false);

  
}
function plot4pointsfill_14325073(cx_14325075, cy_14325076, x_14325077, y_14325078) {
      var Tmp1;

    hline_13930273((cx_14325075 - x_14325077), (cy_14325076 + y_14325078), (cx_14325075 + x_14325077));
      if (!!((x_14325077 == 0))) Tmp1 = false; else {        Tmp1 = !((y_14325078 == 0));      }    if (Tmp1) {
    hline_13930273((cx_14325075 - x_14325077), (cy_14325076 - y_14325078), (cx_14325075 + x_14325077));
    }
    

  
}
function circfill_13930306(cx_13930308, cy_13930309, r_13930310) {
  BeforeRet: do {
    if ((r_13930310 == 1)) {
    pset_13930200(cx_13930308, cy_13930309);
    pset_13930200((cx_13930308 - 1), cy_13930309);
    pset_13930200((cx_13930308 + 1), cy_13930309);
    pset_13930200(cx_13930308, (cy_13930309 - 1));
    pset_13930200(cx_13930308, (cy_13930309 + 1));
    break BeforeRet;
    }
    
    var err_14350043 = -(r_13930310);
    var x_14350044 = r_13930310;
    var y_14350045 = 0;
    L1: do {
        L2: while (true) {
        if (!(y_14350045 <= x_14350044)) break L2;
          var lasty_14355001 = y_14350045;
          err_14350043 += y_14350045;
          y_14350045 += 1;
          err_14350043 += y_14350045;
          plot4pointsfill_14325073(cx_13930308, cy_13930309, x_14350044, lasty_14355001);
          if ((0 < err_14350043)) {
          if (!((x_14350044 == lasty_14355001))) {
          plot4pointsfill_14325073(cx_13930308, cy_13930309, lasty_14355001, x_14350044);
          }
          
          err_14350043 -= x_14350044;
          x_14350044 -= 1;
          err_14350043 -= x_14350044;
          }
          
        }
    } while(false);
  } while (false);

  
}
function boxfill_13930261(x_13930263, y_13930264, w_13930265, h_13930266) {
    L1: do {
      var y_14095088 = 0;
      var colontmp__16810597 = 0;
      colontmp__16810597 = (y_13930264 + h_13930266);
      var res_16810599 = y_13930264;
      L2: do {
          L3: while (true) {
          if (!(res_16810599 < colontmp__16810597)) break L3;
            y_14095088 = res_16810599;
            hline_13930273(x_13930263, y_14095088, ((x_13930263 + w_13930265) - 1));
            res_16810599 += 1;
          }
      } while(false);
    } while(false);

  
}
function draw_paddle_16240014(x_16240016, y_16240017, w_16240018, h_16240019, c_16240020) {
    set_color_13916289(c_16240020);
    circfill_13930306(to_pint_12170119(addInt(subInt(x_16240016, divInt(w_16240018, 2)), 2)), to_pint_12170119(y_16240017), 2);
    circfill_13930306(to_pint_12170119(subInt(addInt(x_16240016, divInt(w_16240018, 2)), 2)), to_pint_12170119(y_16240017), 2);
    boxfill_13930261(to_pint_12170119(addInt(subInt(x_16240016, divInt(w_16240018, 2)), 2)), to_pint_12170119(subInt(y_16240017, divInt(h_16240019, 2))), to_pint_12170119(subInt(w_16240018, 4)), to_pint_12170119(h_16240019));

  
}
function game_draw_16755026() {
            var Tmp7;
    var Tmp8;
      var Tmp9;
      var Tmp10;
      var Tmp11;

    frame_16232076[0] = ((frame_16232076[0] + 1) >>> 0);
    cls_14025143();
    set_color_13916289(7);
    if ((!(connected_16232079[0]) && (connecting_16232078[0] == 0))) {
    var y_16755035 = 32;
    print_13916259(makeNimstrLit("local id:"), to_pint_12170119(divInt(screen_width_12170232[0], 2)), to_pint_12170119(y_16755035), 1);
    y_16755035 = addInt(y_16755035, 12);
    print_13916259(my_id_16232068[0], to_pint_12170119(divInt(screen_width_12170232[0], 2)), to_pint_12170119(y_16755035), 2);
    y_16755035 = addInt(y_16755035, 24);
    set_color_13916289(8);
    print_13916259(makeNimstrLit("remote id:"), to_pint_12170119(divInt(screen_width_12170232[0], 2)), to_pint_12170119(y_16755035), 1);
    y_16755035 = addInt(y_16755035, 12);
    var remote_idtext_16755054 = null;
    L1: do {
      var i_16755065 = 0;
      var c_16755066 = 0;
      var i_16810435 = 0;
      if ((i_16810435 <= 3)) {
      L2: do {
          L3: while (true) {
          if (!true) break L3;
            i_16755065 = i_16810435;
            c_16755066 = remote_id_16232074[0][chckIndx(i_16810435, 0, (remote_id_16232074[0] != null ? remote_id_16232074[0].length : 0)+0-1)-0];
            if (remote_idtext_16755054 != null) { addChar(remote_idtext_16755054, char_set_16232104[0][chckIndx(c_16755066, 0, (char_set_16232104[0] != null ? char_set_16232104[0].length : 0)+0-1)-0]); } else { remote_idtext_16755054 = [char_set_16232104[0][chckIndx(c_16755066, 0, (char_set_16232104[0] != null ? char_set_16232104[0].length : 0)+0-1)-0]]; };
            if ((3 <= i_16810435)) {
            break L2;
            }
            
            i_16810435 = addInt(i_16810435, 1);
          }
      } while(false);
      }
      
    } while(false);
    L4: do {
      var i_16755068 = 0;
      var c_16755069 = 0;
      var i_16810439 = 0;
      var l_16810440 = (remote_idtext_16755054 != null ? remote_idtext_16755054.length : 0);
      L5: do {
          L6: while (true) {
          if (!(i_16810439 < l_16810440)) break L6;
            i_16755068 = i_16810439;
            c_16755069 = remote_idtext_16755054[chckIndx(i_16810439, 0, (remote_idtext_16755054 != null ? remote_idtext_16755054.length : 0)+0-1)-0];
            if (!(connected_16232079[0])) {
            if ((i_16755068 == remote_idindex_16232075[0])) {
            Tmp7 = 8;
            }
            else {
            Tmp7 = 5;
            }
            
            set_color_13916289(Tmp7);
            }
            
            glyph_13916246(c_16755069, to_pint_12170119(addInt(divInt(screen_width_12170232[0], 2), mulInt(i_16755068, 8))), to_pint_12170119(y_16755035), 2);
            i_16810439 = addInt(i_16810439, 1);
            if (!(((remote_idtext_16755054 != null ? remote_idtext_16755054.length : 0) == l_16810440))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(141, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    y_16755035 = addInt(y_16755035, 24);
    set_color_13916289(5);
    print_13916259(makeNimstrLit("enter your friend\'s\x0Alocal id with arrows\x0Apress Z to connect"), 4, to_pint_12170119(y_16755035), 1);
    }
    
    if ((0 < connecting_16232078[0])) {
    printc_13916265(makeNimstrLit("connecting..."), to_pint_12170119(divInt(screen_width_12170232[0], 2)), to_pint_12170119(subInt(screen_height_12170235[0], 12)), 1);
    }
    
    if (connected_16232079[0]) {
    set_color_13916289(1);
    rectfill_13930223(0, 0, to_pint_12170119(subInt(screen_width_12170232[0], 1)), 3);
    set_color_13916289(3);
    rectfill_13930223(0, to_pint_12170119(subInt(screen_height_12170235[0], 4)), to_pint_12170119(subInt(screen_width_12170232[0], 1)), to_pint_12170119(subInt(screen_height_12170235[0], 1)));
    var top_pos_16760002 = 8;
    var bottom_pos_16760003 = subInt(screen_height_12170235[0], 9);
    draw_paddle_16240014(player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(0, 0, (player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0], player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(1, 0, (player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(0, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0], paddle_width_16232097[0], 5, 11);
    draw_paddle_16240014(player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(0, 0, (player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0], player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0][chckIndx(1, 0, (player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0] != null ? player_pos_16232084[0][chckIndx(1, 0, (player_pos_16232084[0] != null ? player_pos_16232084[0].length : 0)+0-1)-0].length : 0)+0-1)-0], paddle_width_16232097[0], 5, 12);
      if ((0.0 < pause_timer_16232098[0])) Tmp10 = true; else {        Tmp10 = (0.0 < reset_timer_16232100[0]);      }      if (!Tmp10) Tmp9 = false; else {        Tmp9 = ((frame_16232076[0] % 10) < 5);      }    if (Tmp9) {
    Tmp8 = 1;
    }
    else {
    Tmp8 = 7;
    }
    
    set_color_13916289(Tmp8);
    circfill_13930306(to_pint_12170102(ball_pos_16232094[0][chckIndx(0, 0, (ball_pos_16232094[0] != null ? ball_pos_16232094[0].length : 0)+0-1)-0]), to_pint_12170102(ball_pos_16232094[0][chckIndx(1, 0, (ball_pos_16232094[0] != null ? ball_pos_16232094[0].length : 0)+0-1)-0]), 2);
      if ((0.0 < pause_timer_16232098[0])) Tmp11 = true; else {        Tmp11 = (0.0 < reset_timer_16232100[0]);      }    if (Tmp11) {
    set_color_13916289(11);
    printc_13916265(cstrToNimstr((player_scores_16232088[0][chckIndx(0, 0, (player_scores_16232088[0] != null ? player_scores_16232088[0].length : 0)+0-1)-0])+""), to_pint_12170119(divInt(screen_width_12170232[0], 2)), to_pint_12170119(subInt(divInt(screen_height_12170235[0], 2), 32)), 1);
    set_color_13916289(12);
    printc_13916265(cstrToNimstr((player_scores_16232088[0][chckIndx(1, 0, (player_scores_16232088[0] != null ? player_scores_16232088[0].length : 0)+0-1)-0])+""), to_pint_12170119(divInt(screen_width_12170232[0], 2)), to_pint_12170119(addInt(divInt(screen_height_12170235[0], 2), 32)), 1);
    }
    
    }
    

  
}
init_13930484(makeNimstrLit("myOrg"), makeNimstrLit("myApp"));
fixed_size_15115335(true);
integer_scale_15115367(true);
create_window_15290171(makeNimstrLit("myApp"), 128, 128, 4, false);
run_15290725(game_init_16365040, game_update_16405085, game_draw_16755026);
function sys_fatal_235018(message_235022) {
    raiseException({message: nimCopy(null, message_235022, NTI112), m_type: NTI6277, parent: null, name: null, trace: null, up: null}, "NilAccessError");

  
}
function chckNilDisp(p_235016, p_235016_Idx) {
    if ((p_235016 == null && p_235016_Idx == 0)) {
    sys_fatal_235018(makeNimstrLit("cannot dispatch; dispatcher is nil"));
    }
    

  
}
function write_data_11640233(s_11640235, buffer_11640236, buffer_11640236_Idx, buf_len_11640237) {
    s_11640235.writeDataImpl(s_11640235, buffer_11640236, buffer_11640236_Idx, buf_len_11640237);

  
}
function write_11640258(s_11640260, x_11640261) {
    if ((0 < (x_11640261 != null ? x_11640261.length : 0))) {
    write_data_11640233(s_11640260, toJSStr(x_11640261), (x_11640261 != null ? x_11640261.length : 0));
    }
    

  
}
function write_line_11645242(s_11645244, args_11645246) {
    L1: do {
      var str_11645252 = null;
      var i_16810616 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16810616 < (args_11645246 != null ? args_11645246.length : 0))) break L3;
            str_11645252 = args_11645246[chckIndx(i_16810616, 0, (args_11645246 != null ? args_11645246.length : 0)+0-1)-0];
            write_11640258(s_11645244, str_11645252);
            i_16810616 = addInt(i_16810616, 1);
          }
      } while(false);
    } while(false);
    write_11640258(s_11645244, makeNimstrLit("\x0A"));

  
}
function invalid_format_string_9740046() {
    raiseException({message: makeNimstrLit("invalid format string"), parent: null, m_type: NTI6243, name: null, trace: null, up: null}, "ValueError");

  
}
function nsuToLowerAsciiChar(c_8890023) {
  var result_8890024 = 0;

    if ((ConstSet9[c_8890023] != undefined)) {
    result_8890024 = chckRange(addInt(c_8890023, 32), 0, 255);
    }
    else {
      result_8890024 = c_8890023;
    }
    

  return result_8890024;

}
function nsuCmpIgnoreStyle(a_8950022, b_8950023) {
          var Tmp7;
          var Tmp8;

  var result_8950024 = 0;

  BeforeRet: do {
    var i_8950026 = 0;
    var j_8950028 = 0;
    L1: do {
        L2: while (true) {
        if (!true) break L2;
          L3: do {
              L4: while (true) {
              if (!((i_8950026 < (a_8950022 != null ? a_8950022.length : 0)) && (a_8950022[i_8950026] == 95))) break L4;
                i_8950026 += 1;
              }
          } while(false);
          L5: do {
              L6: while (true) {
              if (!((j_8950028 < (b_8950023 != null ? b_8950023.length : 0)) && (b_8950023[j_8950028] == 95))) break L6;
                j_8950028 += 1;
              }
          } while(false);
          if ((i_8950026 < (a_8950022 != null ? a_8950022.length : 0))) {
          Tmp7 = nsuToLowerAsciiChar(a_8950022[i_8950026]);
          }
          else {
          Tmp7 = 0;
          }
          
          var aa_8950041 = Tmp7;
          if ((j_8950028 < (b_8950023 != null ? b_8950023.length : 0))) {
          Tmp8 = nsuToLowerAsciiChar(b_8950023[j_8950028]);
          }
          else {
          Tmp8 = 0;
          }
          
          var bb_8950042 = Tmp8;
          result_8950024 = (aa_8950041 - bb_8950042);
          if (!((result_8950024 == 0))) {
          break BeforeRet;
          }
          
          if (((a_8950022 != null ? a_8950022.length : 0) <= i_8950026)) {
          if (((b_8950023 != null ? b_8950023.length : 0) <= j_8950028)) {
          result_8950024 = 0;
          break BeforeRet;
          }
          
          result_8950024 = -1;
          break BeforeRet;
          }
          else {
          if (((b_8950023 != null ? b_8950023.length : 0) <= j_8950028)) {
          result_8950024 = 1;
          break BeforeRet;
          }
          }
          i_8950026 += 1;
          j_8950028 += 1;
        }
    } while(false);
  } while (false);

  return result_8950024;

}
function find_normalized_9740014(x_9740016, in_array_9740018) {
  var result_9740019 = 0;

  BeforeRet: do {
    var i_9740021 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_9740021 < (in_array_9740018 != null ? (in_array_9740018.length-1) : -1))) break L2;
          if ((nsuCmpIgnoreStyle(x_9740016, in_array_9740018[chckIndx(i_9740021, 0, (in_array_9740018 != null ? in_array_9740018.length : 0)+0-1)-0]) == 0)) {
          result_9740019 = i_9740021;
          break BeforeRet;
          }
          
          i_9740021 = addInt(i_9740021, 2);
        }
    } while(false);
    result_9740019 = -1;
    break BeforeRet;
  } while (false);

  return result_9740019;

}
function nsuAddf(s_9745018, s_9745018_Idx, formatstr_9745019, a_9745021) {
                  var Tmp5;
            var Tmp6;
              var Tmp7;
            var Tmp10;
              var Tmp11;
                var Tmp12;
                  var Tmp15;
              var Tmp16;

    var i_9745025 = 0;
    var num_9745027 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_9745025 < (formatstr_9745019 != null ? formatstr_9745019.length : 0))) break L2;
          if (((formatstr_9745019[chckIndx(i_9745025, 0, (formatstr_9745019 != null ? formatstr_9745019.length : 0)+0-1)-0] == 36) && (addInt(i_9745025, 1) < (formatstr_9745019 != null ? formatstr_9745019.length : 0)))) {
          switch (formatstr_9745019[chckIndx(addInt(i_9745025, 1), 0, (formatstr_9745019 != null ? formatstr_9745019.length : 0)+0-1)-0]) {
          case 35:
            if (((a_9745021 != null ? (a_9745021.length-1) : -1) < num_9745027)) {
            invalid_format_string_9740046();
            }
            
            if (s_9745018[s_9745018_Idx] != null) { s_9745018[s_9745018_Idx] = (s_9745018[s_9745018_Idx]).concat(a_9745021[chckIndx(num_9745027, 0, (a_9745021 != null ? a_9745021.length : 0)+0-1)-0]); } else { s_9745018[s_9745018_Idx] = a_9745021[chckIndx(num_9745027, 0, (a_9745021 != null ? a_9745021.length : 0)+0-1)-0].slice(); };
            i_9745025 = addInt(i_9745025, 2);
            num_9745027 = addInt(num_9745027, 1);
            break;
          case 36:
            if (s_9745018[s_9745018_Idx] != null) { addChar(s_9745018[s_9745018_Idx], 36); } else { s_9745018[s_9745018_Idx] = [36]; };
            i_9745025 = addInt(i_9745025, 2);
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            var j_9750025 = 0;
            i_9745025 = addInt(i_9745025, 1);
            var negative_9750032 = (formatstr_9745019[chckIndx(i_9745025, 0, (formatstr_9745019 != null ? formatstr_9745019.length : 0)+0-1)-0] == 45);
            if (negative_9750032) {
            i_9745025 = addInt(i_9745025, 1);
            }
            
            L3: do {
                L4: while (true) {
                  if (!(i_9745025 < (formatstr_9745019 != null ? formatstr_9745019.length : 0))) Tmp5 = false; else {                    Tmp5 = (ConstSet6[formatstr_9745019[chckIndx(i_9745025, 0, (formatstr_9745019 != null ? formatstr_9745019.length : 0)+0-1)-0]] != undefined);                  }                if (!Tmp5) break L4;
                  j_9750025 = subInt(addInt(mulInt(j_9750025, 10), formatstr_9745019[chckIndx(i_9745025, 0, (formatstr_9745019 != null ? formatstr_9745019.length : 0)+0-1)-0]), 48);
                  i_9745025 = addInt(i_9745025, 1);
                }
            } while(false);
            if (!(negative_9750032)) {
            Tmp6 = subInt(j_9750025, 1);
            }
            else {
            Tmp6 = subInt((a_9745021 != null ? a_9745021.length : 0), j_9750025);
            }
            
            var idx_9755025 = Tmp6;
              if ((idx_9755025 < 0)) Tmp7 = true; else {                Tmp7 = ((a_9745021 != null ? (a_9745021.length-1) : -1) < idx_9755025);              }            if (Tmp7) {
            invalid_format_string_9740046();
            }
            
            if (s_9745018[s_9745018_Idx] != null) { s_9745018[s_9745018_Idx] = (s_9745018[s_9745018_Idx]).concat(a_9745021[chckIndx(idx_9755025, 0, (a_9745021 != null ? a_9745021.length : 0)+0-1)-0]); } else { s_9745018[s_9745018_Idx] = a_9745021[chckIndx(idx_9755025, 0, (a_9745021 != null ? a_9745021.length : 0)+0-1)-0].slice(); };
            break;
          case 123:
            var j_9760006 = addInt(i_9745025, 2);
            var k_9760008 = 0;
            var negative_9760009 = (formatstr_9745019[chckIndx(j_9760006, 0, (formatstr_9745019 != null ? formatstr_9745019.length : 0)+0-1)-0] == 45);
            if (negative_9760009) {
            j_9760006 = addInt(j_9760006, 1);
            }
            
            var is_number_9760017 = 0;
            L8: do {
                L9: while (true) {
                if (!((j_9760006 < (formatstr_9745019 != null ? formatstr_9745019.length : 0)) && !((ConstSet7[formatstr_9745019[chckIndx(j_9760006, 0, (formatstr_9745019 != null ? formatstr_9745019.length : 0)+0-1)-0]] != undefined)))) break L9;
                  if ((ConstSet8[formatstr_9745019[chckIndx(j_9760006, 0, (formatstr_9745019 != null ? formatstr_9745019.length : 0)+0-1)-0]] != undefined)) {
                  k_9760008 = subInt(addInt(mulInt(k_9760008, 10), formatstr_9745019[chckIndx(j_9760006, 0, (formatstr_9745019 != null ? formatstr_9745019.length : 0)+0-1)-0]), 48);
                  if ((is_number_9760017 == 0)) {
                  is_number_9760017 = 1;
                  }
                  
                  }
                  else {
                    is_number_9760017 = -1;
                  }
                  
                  j_9760006 = addInt(j_9760006, 1);
                }
            } while(false);
            if ((is_number_9760017 == 1)) {
            if (!(negative_9760009)) {
            Tmp10 = subInt(k_9760008, 1);
            }
            else {
            Tmp10 = subInt((a_9745021 != null ? a_9745021.length : 0), k_9760008);
            }
            
            var idx_9770025 = Tmp10;
              if ((idx_9770025 < 0)) Tmp11 = true; else {                Tmp11 = ((a_9745021 != null ? (a_9745021.length-1) : -1) < idx_9770025);              }            if (Tmp11) {
            invalid_format_string_9740046();
            }
            
            if (s_9745018[s_9745018_Idx] != null) { s_9745018[s_9745018_Idx] = (s_9745018[s_9745018_Idx]).concat(a_9745021[chckIndx(idx_9770025, 0, (a_9745021 != null ? a_9745021.length : 0)+0-1)-0]); } else { s_9745018[s_9745018_Idx] = a_9745021[chckIndx(idx_9770025, 0, (a_9745021 != null ? a_9745021.length : 0)+0-1)-0].slice(); };
            }
            else {
              var x_9775006 = find_normalized_9740014(substr_341022(formatstr_9745019, addInt(i_9745025, 2), subInt(j_9760006, 1)), a_9745021);
                if (!(0 <= x_9775006)) Tmp12 = false; else {                  Tmp12 = (x_9775006 < (a_9745021 != null ? (a_9745021.length-1) : -1));                }              if (Tmp12) {
              if (s_9745018[s_9745018_Idx] != null) { s_9745018[s_9745018_Idx] = (s_9745018[s_9745018_Idx]).concat(a_9745021[chckIndx(addInt(x_9775006, 1), 0, (a_9745021 != null ? a_9745021.length : 0)+0-1)-0]); } else { s_9745018[s_9745018_Idx] = a_9745021[chckIndx(addInt(x_9775006, 1), 0, (a_9745021 != null ? a_9745021.length : 0)+0-1)-0].slice(); };
              }
              else {
              invalid_format_string_9740046();
              }
              
            }
            
            i_9745025 = addInt(j_9760006, 1);
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
          case 103:
          case 104:
          case 105:
          case 106:
          case 107:
          case 108:
          case 109:
          case 110:
          case 111:
          case 112:
          case 113:
          case 114:
          case 115:
          case 116:
          case 117:
          case 118:
          case 119:
          case 120:
          case 121:
          case 122:
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
          case 71:
          case 72:
          case 73:
          case 74:
          case 75:
          case 76:
          case 77:
          case 78:
          case 79:
          case 80:
          case 81:
          case 82:
          case 83:
          case 84:
          case 85:
          case 86:
          case 87:
          case 88:
          case 89:
          case 90:
          case 128:
          case 129:
          case 130:
          case 131:
          case 132:
          case 133:
          case 134:
          case 135:
          case 136:
          case 137:
          case 138:
          case 139:
          case 140:
          case 141:
          case 142:
          case 143:
          case 144:
          case 145:
          case 146:
          case 147:
          case 148:
          case 149:
          case 150:
          case 151:
          case 152:
          case 153:
          case 154:
          case 155:
          case 156:
          case 157:
          case 158:
          case 159:
          case 160:
          case 161:
          case 162:
          case 163:
          case 164:
          case 165:
          case 166:
          case 167:
          case 168:
          case 169:
          case 170:
          case 171:
          case 172:
          case 173:
          case 174:
          case 175:
          case 176:
          case 177:
          case 178:
          case 179:
          case 180:
          case 181:
          case 182:
          case 183:
          case 184:
          case 185:
          case 186:
          case 187:
          case 188:
          case 189:
          case 190:
          case 191:
          case 192:
          case 193:
          case 194:
          case 195:
          case 196:
          case 197:
          case 198:
          case 199:
          case 200:
          case 201:
          case 202:
          case 203:
          case 204:
          case 205:
          case 206:
          case 207:
          case 208:
          case 209:
          case 210:
          case 211:
          case 212:
          case 213:
          case 214:
          case 215:
          case 216:
          case 217:
          case 218:
          case 219:
          case 220:
          case 221:
          case 222:
          case 223:
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 240:
          case 241:
          case 242:
          case 243:
          case 244:
          case 245:
          case 246:
          case 247:
          case 248:
          case 249:
          case 250:
          case 251:
          case 252:
          case 253:
          case 254:
          case 255:
          case 95:
            var j_9780006 = addInt(i_9745025, 1);
            L13: do {
                L14: while (true) {
                  if (!(j_9780006 < (formatstr_9745019 != null ? formatstr_9745019.length : 0))) Tmp15 = false; else {                    Tmp15 = (ConstSet10[formatstr_9745019[chckIndx(j_9780006, 0, (formatstr_9745019 != null ? formatstr_9745019.length : 0)+0-1)-0]] != undefined);                  }                if (!Tmp15) break L14;
                  j_9780006 = addInt(j_9780006, 1);
                }
            } while(false);
            var x_9785013 = find_normalized_9740014(substr_341022(formatstr_9745019, addInt(i_9745025, 1), subInt(j_9780006, 1)), a_9745021);
              if (!(0 <= x_9785013)) Tmp16 = false; else {                Tmp16 = (x_9785013 < (a_9745021 != null ? (a_9745021.length-1) : -1));              }            if (Tmp16) {
            if (s_9745018[s_9745018_Idx] != null) { s_9745018[s_9745018_Idx] = (s_9745018[s_9745018_Idx]).concat(a_9745021[chckIndx(addInt(x_9785013, 1), 0, (a_9745021 != null ? a_9745021.length : 0)+0-1)-0]); } else { s_9745018[s_9745018_Idx] = a_9745021[chckIndx(addInt(x_9785013, 1), 0, (a_9745021 != null ? a_9745021.length : 0)+0-1)-0].slice(); };
            }
            else {
            invalid_format_string_9740046();
            }
            
            i_9745025 = j_9780006;
            break;
          default: 
            invalid_format_string_9740046();
            break;
          }
          }
          else {
            if (s_9745018[s_9745018_Idx] != null) { addChar(s_9745018[s_9745018_Idx], formatstr_9745019[chckIndx(i_9745025, 0, (formatstr_9745019 != null ? formatstr_9745019.length : 0)+0-1)-0]); } else { s_9745018[s_9745018_Idx] = [formatstr_9745019[chckIndx(i_9745025, 0, (formatstr_9745019 != null ? formatstr_9745019.length : 0)+0-1)-0]]; };
            i_9745025 = addInt(i_9745025, 1);
          }
          
        }
    } while(false);

  
}
function nsuFormatSingleElem(formatstr_9790058, a_9790059) {
  var result_9790060 = [null];

    result_9790060[0] = nimCopy(null, mnewString(0), NTI112);
    nsuAddf(result_9790060, 0, formatstr_9790058, [nimCopy(null, a_9790059, NTI112)]);

  return result_9790060[0];

}
function xml_escape_11855061(s_11855063) {
  var result_11855064 = null;

    result_11855064 = nimCopy(null, mnewString(0), NTI112);
    L1: do {
      var c_11855066 = 0;
      var i_16810628 = 0;
      var l_16810629 = (s_11855063 != null ? s_11855063.length : 0);
      L2: do {
          L3: while (true) {
          if (!(i_16810628 < l_16810629)) break L3;
            c_11855066 = s_11855063[chckIndx(i_16810628, 0, (s_11855063 != null ? s_11855063.length : 0)+0-1)-0];
            switch (c_11855066) {
            case 60:
              if (result_11855064 != null) { result_11855064 = (result_11855064).concat(makeNimstrLit("&lt;")); } else { result_11855064 = makeNimstrLit("&lt;"); };
              break;
            case 62:
              if (result_11855064 != null) { result_11855064 = (result_11855064).concat(makeNimstrLit("&gt;")); } else { result_11855064 = makeNimstrLit("&gt;"); };
              break;
            case 38:
              if (result_11855064 != null) { result_11855064 = (result_11855064).concat(makeNimstrLit("&amp;")); } else { result_11855064 = makeNimstrLit("&amp;"); };
              break;
            case 34:
              if (result_11855064 != null) { result_11855064 = (result_11855064).concat(makeNimstrLit("&quot;")); } else { result_11855064 = makeNimstrLit("&quot;"); };
              break;
            case 39:
              if (result_11855064 != null) { result_11855064 = (result_11855064).concat(makeNimstrLit("&apos;")); } else { result_11855064 = makeNimstrLit("&apos;"); };
              break;
            default: 
              if ((c_11855066 < 32)) {
              if (result_11855064 != null) { result_11855064 = (result_11855064).concat((makeNimstrLit("&#") || []).concat(cstrToNimstr((c_11855066)+"") || [],[59])); } else { result_11855064 = (makeNimstrLit("&#") || []).concat(cstrToNimstr((c_11855066)+"") || [],[59]).slice(); };
              }
              else {
              if (result_11855064 != null) { addChar(result_11855064, c_11855066); } else { result_11855064 = [c_11855066]; };
              }
              
              break;
            }
            i_16810628 = addInt(i_16810628, 1);
            if (!(((s_11855063 != null ? s_11855063.length : 0) == l_16810629))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(207, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);

  return result_11855064;

}
function suite_started_11860089(formatter_11860091, suite_name_11860092) {
    write_line_11645242(formatter_11860091.stream, [nsuFormatSingleElem(makeNimstrLit("\x09<testsuite name=\"$1\">"), xml_escape_11855061(suite_name_11860092))]);

  
}
function suite_started_11820214(formatter_11820216, suite_name_11820217) {
    rawEcho(makeNimstrLit("\x0A[Suite] "), suite_name_11820217);
    formatter_11820216.isInSuite = true;

  
}
function suite_started_11797444(formatter_11797446, suite_name_11797447) {
  
}
function suite_started_11797461(formatter_11797446, suite_name_11797447) {
    chckNilDisp(formatter_11797446);
    if (isObj(formatter_11797446.m_type, NTI11797230)) {
    suite_started_11860089(formatter_11797446, suite_name_11797447);
    }
    else {
    if (isObj(formatter_11797446.m_type, NTI11797224)) {
    suite_started_11820214(formatter_11797446, suite_name_11797447);
    }
    else {
    if (isObj(formatter_11797446.m_type, NTI11797222)) {
    suite_started_11797444(formatter_11797446, suite_name_11797447);
    }
    }}

  
}
function test_started_11860110(formatter_11860112, test_name_11860113) {
    if (formatter_11860112.testErrors === null) formatter_11860112.testErrors = [];
               if (formatter_11860112.testErrors.length < 0) { for (var i=formatter_11860112.testErrors.length;i<0;++i) formatter_11860112.testErrors.push(null); }
               else { formatter_11860112.testErrors.length = 0; };
    (formatter_11860112.testStackTrace == null ? formatter_11860112.testStackTrace = mnewString(0) : formatter_11860112.testStackTrace.length = 0);
    formatter_11860112.testStartTime = epoch_time_10685401();

  
}
function test_started_11825035(formatter_11825037, test_name_11825038) {
    formatter_11825037.isInTest = true;

  
}
function test_started_11797463(formatter_11797465, test_name_11797466) {
  
}
function test_started_11797480(formatter_11797465, test_name_11797466) {
    chckNilDisp(formatter_11797465);
    if (isObj(formatter_11797465.m_type, NTI11797230)) {
    test_started_11860110(formatter_11797465, test_name_11797466);
    }
    else {
    if (isObj(formatter_11797465.m_type, NTI11797224)) {
    test_started_11825035(formatter_11797465, test_name_11797466);
    }
    else {
    if (isObj(formatter_11797465.m_type, NTI11797222)) {
    test_started_11797463(formatter_11797465, test_name_11797466);
    }
    }}

  
}
function add_11860141(x_11860146, x_11860146_Idx, y_11860148) {
    var Tmp1;

    var xl_11860154 = (x_11860146[x_11860146_Idx] != null ? x_11860146[x_11860146_Idx].length : 0);
    if (x_11860146[x_11860146_Idx] === null) x_11860146[x_11860146_Idx] = [];
               if (x_11860146[x_11860146_Idx].length < (Tmp1 = chckRange(addInt(xl_11860154, (y_11860148 != null ? y_11860148.length : 0)), 0, 2147483647), Tmp1)) { for (var i=x_11860146[x_11860146_Idx].length;i<Tmp1;++i) x_11860146[x_11860146_Idx].push(null); }
               else { x_11860146[x_11860146_Idx].length = Tmp1; };
    L2: do {
      var i_11860179 = 0;
      var colontmp__16810632 = 0;
      colontmp__16810632 = (y_11860148 != null ? (y_11860148.length-1) : -1);
      var res_16810633 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_16810633 <= colontmp__16810632)) break L4;
            i_11860179 = res_16810633;
            x_11860146[x_11860146_Idx][chckIndx(addInt(xl_11860154, i_11860179), 0, (x_11860146[x_11860146_Idx] != null ? x_11860146[x_11860146_Idx].length : 0)+0-1)-0] = nimCopy(null, y_11860148[chckIndx(i_11860179, 0, (y_11860148 != null ? y_11860148.length : 0)+0-1)-0], NTI112);
            res_16810633 = addInt(res_16810633, 1);
          }
      } while(false);
    } while(false);

  
}
function failure_occurred_11860134(formatter_11860136, checkpoints_11860138, stack_trace_11860139) {
    add_11860141(formatter_11860136, "testErrors", checkpoints_11860138);
    if ((0 < (stack_trace_11860139 != null ? stack_trace_11860139.length : 0))) {
    formatter_11860136.testStackTrace = nimCopy(null, stack_trace_11860139, NTI112);
    }
    

  
}
function failure_occurred_11825052(formatter_11825054, checkpoints_11825056, stack_trace_11825057) {
    var Tmp1;

    if ((0 < (stack_trace_11825057 != null ? stack_trace_11825057.length : 0))) {
    rawEcho(stack_trace_11825057);
    }
    
    if (formatter_11825054.isInSuite) {
    Tmp1 = makeNimstrLit("    ");
    }
    else {
    Tmp1 = [];
    }
    
    var prefix_11830005 = nimCopy(null, Tmp1, NTI112);
    L2: do {
      var msg_11840214 = null;
      var i_16810640 = 0;
      var l_16810641 = (checkpoints_11825056 != null ? checkpoints_11825056.length : 0);
      L3: do {
          L4: while (true) {
          if (!(i_16810640 < l_16810641)) break L4;
            msg_11840214 = checkpoints_11825056[chckIndx(i_16810640, 0, (checkpoints_11825056 != null ? checkpoints_11825056.length : 0)+0-1)-0];
            rawEcho(prefix_11830005, msg_11840214);
            i_16810640 = addInt(i_16810640, 1);
            if (!(((checkpoints_11825056 != null ? checkpoints_11825056.length : 0) == l_16810641))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);

  
}
function failure_occurred_11797482(formatter_11797484, checkpoints_11797486, stack_trace_11797487) {
  
}
function failure_occurred_11797501(formatter_11797484, checkpoints_11797486, stack_trace_11797487) {
    chckNilDisp(formatter_11797484);
    if (isObj(formatter_11797484.m_type, NTI11797230)) {
    failure_occurred_11860134(formatter_11797484, checkpoints_11797486, stack_trace_11797487);
    }
    else {
    if (isObj(formatter_11797484.m_type, NTI11797224)) {
    failure_occurred_11825052(formatter_11797484, checkpoints_11797486, stack_trace_11797487);
    }
    else {
    if (isObj(formatter_11797484.m_type, NTI11797222)) {
    failure_occurred_11797482(formatter_11797484, checkpoints_11797486, stack_trace_11797487);
    }
    }}

  
}
function nsuformatBiggestFloat(f_9680221, format_9680222, precision_9680227, decimal_sep_9680228) {
  var result_9680229 = null;

    var precision_9680401 = precision_9680227;
    if ((precision_9680401 == -1)) {
    precision_9680401 = 6;
    }
    
    var res_9680402 = null;
    switch (format_9680222) {
    case 0:
      res_9680402 = f_9680221.toString();
      break;
    case 1:
      res_9680402 = f_9680221.toFixed(precision_9680401);
      break;
    case 2:
      res_9680402 = f_9680221.toExponential(precision_9680401);
      break;
    }
    result_9680229 = nimCopy(null, cstrToNimstr(res_9680402), NTI112);
    if (((1.0000000000000000e+000 / f_9680221) == -Infinity)) {
    result_9680229 = nimCopy(null, (makeNimstrLit("-") || []).concat(cstrToNimstr(res_9680402) || []), NTI112);
    }
    
    L1: do {
      var i_9680410 = 0;
      var colontmp__16810651 = 0;
      colontmp__16810651 = (result_9680229 != null ? result_9680229.length : 0);
      var i_16810652 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16810652 < colontmp__16810651)) break L3;
            i_9680410 = i_16810652;
            if ((ConstSet11[result_9680229[chckIndx(i_9680410, 0, (result_9680229 != null ? result_9680229.length : 0)+0-1)-0]] != undefined)) {
            result_9680229[chckIndx(i_9680410, 0, (result_9680229 != null ? result_9680229.length : 0)+0-1)-0] = decimal_sep_9680228;
            }
            
            i_16810652 = addInt(i_16810652, 1);
          }
      } while(false);
    } while(false);

  return result_9680229;

}
function nsuformatFloat(f_9685038, format_9685039, precision_9685044, decimal_sep_9685045) {
  var result_9685046 = null;

    result_9685046 = nimCopy(null, nsuformatBiggestFloat(f_9685038, format_9685039, precision_9685044, decimal_sep_9685045), NTI112);

  return result_9685046;

}
function nsuFormatOpenArray(formatstr_9790027, a_9790029) {
  var result_9790030 = [null];

    result_9790030[0] = nimCopy(null, mnewString(0), NTI112);
    nsuAddf(result_9790030, 0, formatstr_9790027, a_9790029);

  return result_9790030[0];

}
function HEX5BHEX5D_11880005(s_11880010, i_11880011) {
  var result_11880013 = null;
  var result_11880013_Idx = 0;

    result_11880013 = s_11880010; result_11880013_Idx = chckIndx(subInt((s_11880010 != null ? s_11880010.length : 0), i_11880011), 0, (s_11880010 != null ? s_11880010.length : 0)+0-1)-0;

  return [result_11880013, result_11880013_Idx];

}
function test_ended_11865014(formatter_11865016, test_result_11865017) {
      var Tmp1;
        var Tmp2;
      var Tmp3;
      var Tmp4;
      var Tmp5;

    var time_11865018 = (epoch_time_10685401() - formatter_11865016.testStartTime);
    var time_str_11865019 = nsuformatFloat(time_11865018, 1, 8, 46);
    write_line_11645242(formatter_11865016.stream, [nsuFormatOpenArray(makeNimstrLit("\x09\x09<testcase name=\"$#\" time=\"$#\">"), [xml_escape_11855061(test_result_11865017.testName), nimCopy(null, time_str_11865019, NTI112)])]);
    switch (test_result_11865017.status) {
    case 0:
      break;
    case 2:
      write_line_11645242(formatter_11865016.stream, [makeNimstrLit("<skipped />")]);
      break;
    case 1:
        if (!(0 < (formatter_11865016.testStackTrace != null ? formatter_11865016.testStackTrace.length : 0))) Tmp2 = false; else {          Tmp2 = (0 < (formatter_11865016.testErrors != null ? formatter_11865016.testErrors.length : 0));        }      if (Tmp2) {
      Tmp1 = xml_escape_11855061((Tmp3 = HEX5BHEX5D_11880005(formatter_11865016.testErrors, 1), Tmp3)[0][Tmp3[1]]);
      }
      else {
      if ((0 < (formatter_11865016.testErrors != null ? formatter_11865016.testErrors.length : 0))) {
      Tmp1 = xml_escape_11855061(formatter_11865016.testErrors[chckIndx(0, 0, (formatter_11865016.testErrors != null ? formatter_11865016.testErrors.length : 0)+0-1)-0]);
      }
      else {
      Tmp1 = makeNimstrLit("The test failed without outputting an error");
      }
      }
      var failure_msg_11885006 = nimCopy(null, Tmp1, NTI112);
      var errs_11885007 = [];
      if ((1 < (formatter_11865016.testErrors != null ? formatter_11865016.testErrors.length : 0))) {
      if ((0 < (formatter_11865016.testStackTrace != null ? formatter_11865016.testStackTrace.length : 0))) {
      Tmp4 = 0;
      }
      else {
      Tmp4 = 1;
      }
      
      var start_idx_11895002 = Tmp4;
      if ((0 < (formatter_11865016.testStackTrace != null ? formatter_11865016.testStackTrace.length : 0))) {
      Tmp5 = subInt((formatter_11865016.testErrors != null ? formatter_11865016.testErrors.length : 0), 2);
      }
      else {
      Tmp5 = subInt((formatter_11865016.testErrors != null ? formatter_11865016.testErrors.length : 0), 1);
      }
      
      var end_idx_11900011 = Tmp5;
      L6: do {
        var err_idx_11900017 = 0;
        var res_16810645 = start_idx_11895002;
        L7: do {
            L8: while (true) {
            if (!(res_16810645 <= end_idx_11900011)) break L8;
              err_idx_11900017 = res_16810645;
              if ((0 < (errs_11885007 != null ? errs_11885007.length : 0))) {
              if (errs_11885007 != null) { errs_11885007 = (errs_11885007).concat(makeNimstrLit("\x0A")); } else { errs_11885007 = makeNimstrLit("\x0A"); };
              }
              
              if (errs_11885007 != null) { errs_11885007 = (errs_11885007).concat(xml_escape_11855061(formatter_11865016.testErrors[chckIndx(err_idx_11900017, 0, (formatter_11865016.testErrors != null ? formatter_11865016.testErrors.length : 0)+0-1)-0])); } else { errs_11885007 = xml_escape_11855061(formatter_11865016.testErrors[chckIndx(err_idx_11900017, 0, (formatter_11865016.testErrors != null ? formatter_11865016.testErrors.length : 0)+0-1)-0]).slice(); };
              res_16810645 = addInt(res_16810645, 1);
            }
        } while(false);
      } while(false);
      }
      
      if ((0 < (formatter_11865016.testStackTrace != null ? formatter_11865016.testStackTrace.length : 0))) {
      write_line_11645242(formatter_11865016.stream, [nsuFormatOpenArray(makeNimstrLit("\x09\x09\x09<error message=\"$#\">$#</error>"), [nimCopy(null, failure_msg_11885006, NTI112), xml_escape_11855061(formatter_11865016.testStackTrace)])]);
      if ((0 < (errs_11885007 != null ? errs_11885007.length : 0))) {
      write_line_11645242(formatter_11865016.stream, [nsuFormatSingleElem(makeNimstrLit("\x09\x09\x09<system-err>$#</system-err>"), errs_11885007)]);
      }
      
      }
      else {
      write_line_11645242(formatter_11865016.stream, [nsuFormatOpenArray(makeNimstrLit("\x09\x09\x09<failure message=\"$#\">$#</failure>"), [nimCopy(null, failure_msg_11885006, NTI112), nimCopy(null, errs_11885007, NTI112)])]);
      }
      
      break;
    }
    write_line_11645242(formatter_11865016.stream, [makeNimstrLit("\x09\x09</testcase>")]);

  
}
function test_ended_11840234(formatter_11840236, test_result_11840237) {
      var Tmp1;
        var Tmp2;
    var Tmp3;

    formatter_11840236.isInTest = false;
      if (!!((formatter_11840236.outputLevel == 2))) Tmp1 = false; else {        if ((formatter_11840236.outputLevel == 0)) Tmp2 = true; else {          Tmp2 = (test_result_11840237.status == 1);        }        Tmp1 = Tmp2;      }    if (Tmp1) {
    if ((0 < (test_result_11840237.suiteName != null ? test_result_11840237.suiteName.length : 0))) {
    Tmp3 = makeNimstrLit("  ");
    }
    else {
    Tmp3 = [];
    }
    
    var prefix_11850001 = nimCopy(null, Tmp3, NTI112);
    rawEcho(prefix_11850001, makeNimstrLit("["), reprEnum(test_result_11840237.status, NTI11797202), makeNimstrLit("] "), test_result_11840237.testName);
    }
    

  
}
function test_ended_11797503(formatter_11797505, test_result_11797506) {
  
}
function test_ended_11797520(formatter_11797505, test_result_11797506) {
    chckNilDisp(formatter_11797505);
    if (isObj(formatter_11797505.m_type, NTI11797230)) {
    test_ended_11865014(formatter_11797505, test_result_11797506);
    }
    else {
    if (isObj(formatter_11797505.m_type, NTI11797224)) {
    test_ended_11840234(formatter_11797505, test_result_11797506);
    }
    else {
    if (isObj(formatter_11797505.m_type, NTI11797222)) {
    test_ended_11797503(formatter_11797505, test_result_11797506);
    }
    }}

  
}
function suite_ended_11915028(formatter_11915030) {
    write_line_11645242(formatter_11915030.stream, [makeNimstrLit("\x09</testsuite>")]);

  
}
function suite_ended_11855045(formatter_11855047) {
    formatter_11855047.isInSuite = false;

  
}
function suite_ended_11797522(formatter_11797524) {
  
}
function suite_ended_11797538(formatter_11797524) {
    chckNilDisp(formatter_11797524);
    if (isObj(formatter_11797524.m_type, NTI11797230)) {
    suite_ended_11915028(formatter_11797524);
    }
    else {
    if (isObj(formatter_11797524.m_type, NTI11797224)) {
    suite_ended_11855045(formatter_11797524);
    }
    else {
    if (isObj(formatter_11797524.m_type, NTI11797222)) {
    suite_ended_11797522(formatter_11797524);
    }
    }}

  
}
